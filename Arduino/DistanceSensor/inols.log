






Started logging.

<<<
Content-Length: 3242

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":77642,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a","rootUri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a","name":"sketch_may25a"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 398

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","languageId":"cpp","version":1,"text":"void setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n"}}}Content-Length: 332

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/27","percentage":7.407407407407407,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/27","percentage":11.11111111111111,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/27","percentage":11.11111111111111,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/27","percentage":14.814814814814815,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/27","percentage":18.51851851851852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/27","percentage":18.51851851851852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/27","percentage":22.22222222222222,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/27","percentage":22.22222222222222,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/27","percentage":25.925925925925927,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/27","percentage":25.925925925925927,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/27","percentage":29.62962962962963,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/27","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/27","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/27","percentage":37.03703703703704,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/27","percentage":37.03703703703704,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/27","percentage":40.74074074074074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/27","percentage":44.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/27","percentage":44.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/27","percentage":48.148148148148145,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/27","percentage":48.148148148148145,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/27","percentage":51.851851851851855,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/27","percentage":51.851851851851855,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/27","percentage":55.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/27","percentage":59.25925925925926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/27","percentage":62.96296296296296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/27","percentage":62.96296296296296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/27","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/27","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/27","percentage":70.37037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/27","percentage":70.37037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/27","percentage":74.07407407407408,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/27","percentage":77.77777777777777,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/27","percentage":81.48148148148148,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/27","percentage":85.18518518518519,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/27","percentage":88.88888888888889,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/27","percentage":92.5925925925926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/27","percentage":96.29629629629629,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":6,"character":37}}}
>>>
Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 332

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 332

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":7,"character":0},"end":{"line":8,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 332

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 332

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":6,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":1,"character":14}}}
>>>
Content-Length: 36

{"id":7,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 334

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":14},"end":{"line":1,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":8,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":2},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"rangeLength":0,"text":"  "}]}}Content-Length: 231

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":2}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":2}}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":3},"contentChanges":[{"range":{"start":{"line":2,"character":2},"end":{"line":2,"character":2}},"rangeLength":0,"text":"  "}]}}Content-Length: 231

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":3}}}Content-Length: 231

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":3}}}Content-Length: 260

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 38

{"id":9,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 333

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 458

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":4},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":4}},"rangeLength":4,"text":""},{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"\n"}]}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":5},"contentChanges":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 333

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":12,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":5}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":6},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"c"}]}}Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":7},"contentChanges":[{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":1}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'co'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":8},"contentChanges":[{"range":{"start":{"line":0,"character":2},"end":{"line":0,"character":2}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'con'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":9},"contentChanges":[{"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":3}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 445

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cons'; did you mean 'const'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":10},"contentChanges":[{"range":{"start":{"line":0,"character":4},"end":{"line":0,"character":4}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 333

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":13,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":10}}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":11},"contentChanges":[{"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":5}},"rangeLength":0,"text":" "}]}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":12},"contentChanges":[{"range":{"start":{"line":0,"character":6},"end":{"line":0,"character":6}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":6},"end":{"line":0,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'i'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":13},"contentChanges":[{"range":{"start":{"line":0,"character":7},"end":{"line":0,"character":7}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":6},"end":{"line":0,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'in'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":14},"contentChanges":[{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":8}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":15},"contentChanges":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":9}},"rangeLength":0,"text":" "}]}}Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":15}}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":16},"contentChanges":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":10}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 455

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":11}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":17},"contentChanges":[{"range":{"start":{"line":0,"character":11},"end":{"line":0,"character":11}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 455

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":12}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 560

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":12}},"message":"Default initialization of an object of const type 'const int' (fix available)","severity":1,"code":"default_init_const","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":14,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":17}}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":18},"contentChanges":[{"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":12}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 455

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":13}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":19},"contentChanges":[{"range":{"start":{"line":0,"character":13},"end":{"line":0,"character":13}},"rangeLength":0,"text":"g"}]}}
>>>
Content-Length: 455

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":14}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 560

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":14}},"message":"Default initialization of an object of const type 'const int' (fix available)","severity":1,"code":"default_init_const","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":15,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":19}}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":20},"contentChanges":[{"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 455

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":15}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":21},"contentChanges":[{"range":{"start":{"line":0,"character":15},"end":{"line":0,"character":15}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 455

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":16}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":22},"contentChanges":[{"range":{"start":{"line":0,"character":16},"end":{"line":0,"character":16}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 455

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 560

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}},"message":"Default initialization of an object of const type 'const int' (fix available)","severity":1,"code":"default_init_const","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":16,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":22}}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":23},"contentChanges":[{"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 455

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":24},"contentChanges":[{"range":{"start":{"line":0,"character":18},"end":{"line":0,"character":18}},"rangeLength":0,"text":"="}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":25},"contentChanges":[{"range":{"start":{"line":0,"character":19},"end":{"line":0,"character":19}},"rangeLength":0,"text":" "}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":26},"contentChanges":[{"range":{"start":{"line":0,"character":20},"end":{"line":0,"character":20}},"rangeLength":0,"text":"1"}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":27},"contentChanges":[{"range":{"start":{"line":0,"character":21},"end":{"line":0,"character":21}},"rangeLength":0,"text":"1"}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":28},"contentChanges":[{"range":{"start":{"line":0,"character":22},"end":{"line":0,"character":22}},"rangeLength":0,"text":";"}]}}Content-Length: 335

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":0,"character":23},"end":{"line":0,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":29},"contentChanges":[{"range":{"start":{"line":0,"character":23},"end":{"line":0,"character":23}},"rangeLength":0,"text":"\n"}]}}Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":29}}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":30},"contentChanges":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":1}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'c'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":31},"contentChanges":[{"range":{"start":{"line":1,"character":1},"end":{"line":1,"character":1}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'co'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":32},"contentChanges":[{"range":{"start":{"line":1,"character":2},"end":{"line":1,"character":2}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'con'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":33},"contentChanges":[{"range":{"start":{"line":1,"character":3},"end":{"line":1,"character":3}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 445

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 548

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"message":"Unknown type name 'cont'; did you mean 'const'? (fix available)","severity":1,"code":"unknown_typename_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":18,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":33}}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":34},"contentChanges":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":4}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 445

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":35},"contentChanges":[{"range":{"start":{"line":1,"character":5},"end":{"line":1,"character":5}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 611

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"},{"range":{"start":{"line":1,"character":5},"end":{"line":1,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'i'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":36},"contentChanges":[{"range":{"start":{"line":1,"character":6},"end":{"line":1,"character":6}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 612

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"},{"range":{"start":{"line":1,"character":5},"end":{"line":1,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'in'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":37},"contentChanges":[{"range":{"start":{"line":1,"character":7},"end":{"line":1,"character":7}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 445

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":38},"contentChanges":[{"range":{"start":{"line":1,"character":8},"end":{"line":1,"character":8}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 445

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":39},"contentChanges":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":9}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 670

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"},{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":10}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":40},"contentChanges":[{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":10}},"rangeLength":0,"text":"c"}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":41},"contentChanges":[{"range":{"start":{"line":1,"character":11},"end":{"line":1,"character":11}},"rangeLength":0,"text":"h"}]}}
>>>
Content-Length: 670

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"},{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":12}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":42},"contentChanges":[{"range":{"start":{"line":1,"character":12},"end":{"line":1,"character":12}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 670

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"},{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":13}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 559

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":13},"end":{"line":1,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":13}},"message":"Default initialization of an object of const type 'const int' (fix available)","severity":1,"code":"default_init_const","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":19,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":43},"contentChanges":[{"range":{"start":{"line":1,"character":13},"end":{"line":1,"character":13}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 670

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"},{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":14}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":44},"contentChanges":[{"range":{"start":{"line":1,"character":14},"end":{"line":1,"character":14}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 670

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"},{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":15}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":45},"contentChanges":[{"range":{"start":{"line":1,"character":15},"end":{"line":1,"character":15}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 670

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"},{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":16}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 559

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":16},"end":{"line":1,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":16}},"message":"Default initialization of an object of const type 'const int' (fix available)","severity":1,"code":"default_init_const","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":20,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":45}}}Content-Length: 274

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":1,"character":15}}}
>>>
Content-Length: 122

{"id":21,"result":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":16}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 559

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":15},"end":{"line":1,"character":15}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":16}},"message":"Default initialization of an object of const type 'const int' (fix available)","severity":1,"code":"default_init_const","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":22,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":1,"character":8}}}
>>>
Content-Length: 37

{"id":23,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":24,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":1,"character":4}}}
>>>
Content-Length: 122

{"id":24,"result":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":16}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 548

{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":3},"end":{"line":1,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":4}},"message":"Unknown type name 'cont'; did you mean 'const'? (fix available)","severity":1,"code":"unknown_typename_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":25,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":46},"contentChanges":[{"range":{"start":{"line":1,"character":3},"end":{"line":1,"character":3}},"rangeLength":0,"text":"s"}]}}Content-Length: 273

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":1,"character":5}}}
>>>
Content-Length: 123

{"id":26,"result":[{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 455

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"severity":1,"code":"default_init_const","source":"clang","message":"Default initialization of an object of const type 'const int' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":1,"character":6}}}
>>>
Content-Length: 37

{"id":27,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":46}}}Content-Length: 333

{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":6},"end":{"line":1,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":28,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":29,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":1,"character":10}}}
>>>
Content-Length: 123

{"id":29,"result":[{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 560

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":15},"end":{"line":1,"character":15}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"message":"Default initialization of an object of const type 'const int' (fix available)","severity":1,"code":"default_init_const","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":30,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 560

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":17},"end":{"line":1,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"message":"Default initialization of an object of const type 'const int' (fix available)","severity":1,"code":"default_init_const","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":31,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":47},"contentChanges":[{"range":{"start":{"line":1,"character":17},"end":{"line":1,"character":17}},"rangeLength":0,"text":" "}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":48},"contentChanges":[{"range":{"start":{"line":1,"character":18},"end":{"line":1,"character":18}},"rangeLength":0,"text":"="}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":49},"contentChanges":[{"range":{"start":{"line":1,"character":19},"end":{"line":1,"character":19}},"rangeLength":0,"text":" "}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":50},"contentChanges":[{"range":{"start":{"line":1,"character":20},"end":{"line":1,"character":20}},"rangeLength":0,"text":"1"}]}}Content-Length: 335

{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":21},"end":{"line":1,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":32,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":51},"contentChanges":[{"range":{"start":{"line":1,"character":21},"end":{"line":1,"character":21}},"rangeLength":0,"text":"2"}]}}Content-Length: 335

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":22},"end":{"line":1,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":33,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":52},"contentChanges":[{"range":{"start":{"line":1,"character":22},"end":{"line":1,"character":22}},"rangeLength":0,"text":";"}]}}Content-Length: 335

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":1,"character":23},"end":{"line":1,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":34,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":52}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":53},"contentChanges":[{"range":{"start":{"line":1,"character":23},"end":{"line":1,"character":23}},"rangeLength":0,"text":"\n"}]}}Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":53}}}Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":54},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"rangeLength":0,"text":"\\"}]}}
>>>
Content-Length: 404

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":1}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 507

{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":2,"character":1},"end":{"line":2,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":1}},"message":"Expected unqualified-id","severity":1,"code":"expected_unqualified_id","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":35,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":55},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":1}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":56},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":57},"contentChanges":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":0}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 445

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":5}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cvoid'; did you mean 'void'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":58},"contentChanges":[{"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":1}},"rangeLength":0,"text":"p"}]}}
>>>
Content-Length: 446

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":6}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cpvoid'; did you mean 'void'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":59},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},"rangeLength":0,"text":"m"}]}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":60},"contentChanges":[{"range":{"start":{"line":3,"character":3},"end":{"line":3,"character":3}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 401

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'cpmvoid'"}]},"jsonrpc":"2.0"}Content-Length: 402

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'cpmsvoid'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 505

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":3,"character":4},"end":{"line":3,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":8}},"message":"Unknown type name 'cpmsvoid'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":36,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":61},"contentChanges":[{"range":{"start":{"line":3,"character":3},"end":{"line":3,"character":4}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":62},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":3}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 401

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'cpmvoid'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":63},"contentChanges":[{"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},"rangeLength":1,"text":""}]}}Content-Length: 505

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":8}},"message":"Unknown type name 'cpmsvoid'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":37,"result":[],"jsonrpc":"2.0"}Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":1}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'c'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":63}}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":64},"contentChanges":[{"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":1}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'co'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":65},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 413

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'cos' (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 516

{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":3,"character":3},"end":{"line":3,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":3}},"message":"Unknown type name 'cos' (fix available)","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":38,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":66},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":3}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'co'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":67},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'con'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":68},"contentChanges":[{"range":{"start":{"line":3,"character":3},"end":{"line":3,"character":3}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 445

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cons'; did you mean 'const'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":69},"contentChanges":[{"range":{"start":{"line":3,"character":4},"end":{"line":3,"character":4}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 333

{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":39,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":69}}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":70},"contentChanges":[{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":5}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":71},"contentChanges":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":6}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'r'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":72},"contentChanges":[{"range":{"start":{"line":3,"character":7},"end":{"line":3,"character":7}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 're'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":73},"contentChanges":[{"range":{"start":{"line":3,"character":8},"end":{"line":3,"character":8}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":9}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'red'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":74},"contentChanges":[{"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 399

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'redP'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":75},"contentChanges":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":10}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":11}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'redPi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":76},"contentChanges":[{"range":{"start":{"line":3,"character":11},"end":{"line":3,"character":11}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 401

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'redPin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 506

{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":3,"character":12},"end":{"line":3,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"message":"Unknown type name 'redPin'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":40,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":76}}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":77},"contentChanges":[{"range":{"start":{"line":3,"character":12},"end":{"line":3,"character":12}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 401

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'redPin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":78},"contentChanges":[{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":13}},"rangeLength":0,"text":"="}]}}
>>>
Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":79},"contentChanges":[{"range":{"start":{"line":3,"character":14},"end":{"line":3,"character":14}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":79}}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":80},"contentChanges":[{"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}},"rangeLength":0,"text":"3"}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":81},"contentChanges":[{"range":{"start":{"line":3,"character":16},"end":{"line":3,"character":16}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":82},"contentChanges":[{"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"rangeLength":0,"text":"\n"}]}}
>>>
Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":82}}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":83},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":0}},"rangeLength":0,"text":"c"}]}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":84},"contentChanges":[{"range":{"start":{"line":4,"character":1},"end":{"line":4,"character":1}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 598

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'co'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":85},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'con'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":86},"contentChanges":[{"range":{"start":{"line":4,"character":3},"end":{"line":4,"character":3}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 647

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cons'; did you mean 'const'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":87},"contentChanges":[{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":88},"contentChanges":[{"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":5}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":88}}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":89},"contentChanges":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":6}},"rangeLength":0,"text":"g"}]}}
>>>
Content-Length: 597

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'g'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":90},"contentChanges":[{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":7}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 598

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'gr'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":91},"contentChanges":[{"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":8}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":9}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'gre'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":92},"contentChanges":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 601

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'gree'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":93},"contentChanges":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 602

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":11}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'green'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 505

{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":11}},"message":"Unknown type name 'green'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":41,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":94},"contentChanges":[{"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":11}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 603

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'greenP'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":95},"contentChanges":[{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":12}},"rangeLength":0,"text":"u"}]}}
>>>
Content-Length: 604

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":13}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'greenPu'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 507

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":4,"character":13},"end":{"line":4,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":13}},"message":"Unknown type name 'greenPu'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":42,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":96},"contentChanges":[{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":13}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 603

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'greenP'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":97},"contentChanges":[{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":12}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 604

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":13}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'greenPi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":98},"contentChanges":[{"range":{"start":{"line":4,"character":13},"end":{"line":4,"character":13}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 605

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'greenPin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 508

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":4,"character":14},"end":{"line":4,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"message":"Unknown type name 'greenPin'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":43,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":98}}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":99},"contentChanges":[{"range":{"start":{"line":4,"character":14},"end":{"line":4,"character":14}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 605

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'greenPin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":100},"contentChanges":[{"range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},"rangeLength":0,"text":"="}]}}
>>>
Content-Length: 633

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":101},"contentChanges":[{"range":{"start":{"line":4,"character":16},"end":{"line":4,"character":16}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 633

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":101}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":102},"contentChanges":[{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":17}},"rangeLength":0,"text":"5"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":103},"contentChanges":[{"range":{"start":{"line":4,"character":18},"end":{"line":4,"character":18}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 633

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":104},"contentChanges":[{"range":{"start":{"line":4,"character":19},"end":{"line":4,"character":19}},"rangeLength":0,"text":"\n"}]}}
>>>
Content-Length: 633

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":104}}}Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":105},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":0}},"rangeLength":0,"text":"c"}]}}Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":106},"contentChanges":[{"range":{"start":{"line":5,"character":1},"end":{"line":5,"character":1}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 849

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":5}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cvoid'; did you mean 'void'? (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 850

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":6}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'covoid'; did you mean 'void'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":107},"contentChanges":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 805

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'convoid'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":108},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 806

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'contvoid'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":109},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 1205

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'cont'; did you mean 'const'? (fix available)"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":14}},"severity":1,"code":"ovl_diff_return_type","source":"clang","message":"Functions that differ only in their return type cannot be overloaded\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:155:6:\nnote: previous declaration is here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":109}}}Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":110},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":5}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 806

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'contvoid'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":111},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":4}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 805

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'convoid'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 504

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":7}},"message":"Unknown type name 'convoid'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":44,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":112},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 806

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'consvoid'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 505

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":8}},"message":"Unknown type name 'consvoid'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":45,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":113},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 807

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":9}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'constvoid'"}]},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 506

{"jsonrpc":"2.0","id":46,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":9}},"message":"Unknown type name 'constvoid'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 37

{"id":46,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":113}}}Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":114},"contentChanges":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":46}}
>>>
Content-Length: 988

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}},"severity":1,"code":"ovl_diff_return_type","source":"clang","message":"Functions that differ only in their return type cannot be overloaded\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:154:6:\nnote: previous declaration is here"}]},"jsonrpc":"2.0"}Content-Length: 988

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}},"severity":1,"code":"ovl_diff_return_type","source":"clang","message":"Functions that differ only in their return type cannot be overloaded\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:154:6:\nnote: previous declaration is here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":115},"contentChanges":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":6}},"rangeLength":0,"text":"b"}]}}Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":116},"contentChanges":[{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":7}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 800

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'bl'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":117},"contentChanges":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"rangeLength":0,"text":"u"}]}}Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":118},"contentChanges":[{"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":9}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 803

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":119},"contentChanges":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 804

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":11}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'blueP'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 505

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":11}},"message":"Unknown type name 'blueP'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":47,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":120},"contentChanges":[{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":8,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 805

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'bluePi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":121},"contentChanges":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":12}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 806

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'bluePin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 507

{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"message":"Unknown type name 'bluePin'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":48,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":121}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":122},"contentChanges":[{"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":13}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 806

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'bluePin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":123},"contentChanges":[{"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"rangeLength":0,"text":"="}]}}
>>>
Content-Length: 1273

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}},"severity":1,"code":"expected_lparen_after_type","source":"clang","message":"Expected '(' for function-style cast or type construction"},{"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":0}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":124},"contentChanges":[{"range":{"start":{"line":5,"character":15},"end":{"line":5,"character":15}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 1273

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}},"severity":1,"code":"expected_lparen_after_type","source":"clang","message":"Expected '(' for function-style cast or type construction"},{"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":0}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":124}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":125},"contentChanges":[{"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":16}},"rangeLength":0,"text":"6"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":126},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":17}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 1058

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 835

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":5,"character":18},"end":{"line":5,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":49,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":126}}}Content-Length: 273

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":3,"character":6}}}
>>>
Content-Length: 122

{"id":50,"result":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 534

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":12}},"message":"C++ requires a type specifier for all declarations","severity":1,"code":"missing_type_specifier","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":51,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":127},"contentChanges":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":6}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 835

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":128},"contentChanges":[{"range":{"start":{"line":3,"character":7},"end":{"line":3,"character":7}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 835

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":129},"contentChanges":[{"range":{"start":{"line":3,"character":8},"end":{"line":3,"character":8}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 835

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":15}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":130},"contentChanges":[{"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 633

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":52,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":4,"character":10}}}
>>>
Content-Length: 122

{"id":53,"result":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":130}}}Content-Length: 536

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"message":"C++ requires a type specifier for all declarations","severity":1,"code":"missing_type_specifier","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":54,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 534

{"jsonrpc":"2.0","id":55,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":14}},"message":"C++ requires a type specifier for all declarations","severity":1,"code":"missing_type_specifier","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":55,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":131},"contentChanges":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":6}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 633

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":15}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":132},"contentChanges":[{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":7}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 633

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":16}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":133},"contentChanges":[{"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":8}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 633

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":17}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":134},"contentChanges":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":56,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":5,"character":10}}}
>>>
Content-Length: 122

{"id":57,"result":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":134}}}Content-Length: 536

{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"message":"C++ requires a type specifier for all declarations","severity":1,"code":"missing_type_specifier","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":58,"result":[],"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":9,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 534

{"jsonrpc":"2.0","id":59,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"message":"C++ requires a type specifier for all declarations","severity":1,"code":"missing_type_specifier","source":"clang"}]}}}
>>>
Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 37

{"id":59,"result":[],"jsonrpc":"2.0"}Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":13}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":135},"contentChanges":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":6}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":136},"contentChanges":[{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":7}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":15}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 534

{"jsonrpc":"2.0","id":60,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":15}},"message":"C++ requires a type specifier for all declarations","severity":1,"code":"missing_type_specifier","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":60,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":137},"contentChanges":[{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":8}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 112

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"jsonrpc":"2.0","id":10,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":14}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":138},"contentChanges":[{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":7}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":15}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":139},"contentChanges":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 431

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":16}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":140},"contentChanges":[{"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":9}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":61,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":140}}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":140}}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":141},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":141}}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":142},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":143},"contentChanges":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":0}},"rangeLength":0,"text":"f"}]}}
>>>
Content-Length: 445

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":5}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'fvoid'; did you mean 'void'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":144},"contentChanges":[{"range":{"start":{"line":7,"character":1},"end":{"line":7,"character":1}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 446

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":6}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'flvoid'; did you mean 'void'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":145},"contentChanges":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":2}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 401

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'flovoid'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 504

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":7}},"message":"Unknown type name 'flovoid'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":62,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":146},"contentChanges":[{"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":3}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 402

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'floavoid'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":147},"contentChanges":[{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":4}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 403

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":9}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'floatvoid'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":148},"contentChanges":[{"range":{"start":{"line":7,"character":5},"end":{"line":7,"character":5}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 802

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":10}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'float' declaration specifier"},{"range":{"start":{"line":7,"character":11},"end":{"line":7,"character":15}},"severity":1,"code":"ovl_diff_return_type","source":"clang","message":"Functions that differ only in their return type cannot be overloaded\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:155:6:\nnote: previous declaration is here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":149},"contentChanges":[{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":6}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":12},"end":{"line":7,"character":16}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":150},"contentChanges":[{"range":{"start":{"line":7,"character":7},"end":{"line":7,"character":7}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":13},"end":{"line":7,"character":17}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":151},"contentChanges":[{"range":{"start":{"line":7,"character":7},"end":{"line":7,"character":8}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":12},"end":{"line":7,"character":16}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":152},"contentChanges":[{"range":{"start":{"line":7,"character":7},"end":{"line":7,"character":7}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":13},"end":{"line":7,"character":17}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":153},"contentChanges":[{"range":{"start":{"line":7,"character":8},"end":{"line":7,"character":8}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":14},"end":{"line":7,"character":18}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":154},"contentChanges":[{"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":15},"end":{"line":7,"character":19}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":155},"contentChanges":[{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":10}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":16},"end":{"line":7,"character":20}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":156},"contentChanges":[{"range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":21}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":7,"character":12},"end":{"line":7,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":63,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":157},"contentChanges":[{"range":{"start":{"line":7,"character":12},"end":{"line":7,"character":12}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":18},"end":{"line":7,"character":22}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":64,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":7,"character":13},"end":{"line":7,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":64,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":158},"contentChanges":[{"range":{"start":{"line":7,"character":12},"end":{"line":7,"character":13}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":21}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":159},"contentChanges":[{"range":{"start":{"line":7,"character":12},"end":{"line":7,"character":12}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":18},"end":{"line":7,"character":22}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":160},"contentChanges":[{"range":{"start":{"line":7,"character":13},"end":{"line":7,"character":13}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 454

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":23}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":7,"character":14},"end":{"line":7,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":65,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":160}}}
>>>
Content-Length: 117

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"jsonrpc":"2.0","id":11,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":161},"contentChanges":[{"range":{"start":{"line":7,"character":14},"end":{"line":7,"character":14}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":162},"contentChanges":[{"range":{"start":{"line":7,"character":15},"end":{"line":7,"character":15}},"rangeLength":0,"text":"="}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":163},"contentChanges":[{"range":{"start":{"line":7,"character":16},"end":{"line":7,"character":16}},"rangeLength":0,"text":" "}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":164},"contentChanges":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":17}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 112

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"jsonrpc":"2.0","id":12,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 452

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":165},"contentChanges":[{"range":{"start":{"line":7,"character":18},"end":{"line":7,"character":18}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":66,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":165}}}Content-Length: 263

{"jsonrpc":"2.0","id":67,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":15,"character":26}}}
>>>
Content-Length: 39

{"id":67,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":166},"contentChanges":[{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":0}},"rangeLength":0,"text":"  "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":166}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":167},"contentChanges":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":2}},"rangeLength":0,"text":"S"}]}}
>>>
Content-Length: 410

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'S'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":168},"contentChanges":[{"range":{"start":{"line":11,"character":3},"end":{"line":11,"character":3}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 411

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Se'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":169},"contentChanges":[{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":4}},"rangeLength":0,"text":"r"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":170},"contentChanges":[{"range":{"start":{"line":11,"character":5},"end":{"line":11,"character":5}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 412

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Ser'"}]},"jsonrpc":"2.0"}Content-Length: 413

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seri'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 518

{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":11,"character":6},"end":{"line":11,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":6}},"message":"Use of undeclared identifier 'Seri'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":68,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":171},"contentChanges":[{"range":{"start":{"line":11,"character":6},"end":{"line":11,"character":6}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 801

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":7}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'Seria'; did you mean 'Serial'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:143:25:\nnote: 'Serial' declared here"},{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":172},"contentChanges":[{"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":7}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":173},"contentChanges":[{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":8}},"rangeLength":0,"text":"."}]}}Content-Length: 318

{"jsonrpc":"2.0","id":69,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":11,"character":9},"context":{"triggerKind":2,"triggerCharacter":"."}}}
>>>
Content-Length: 6564

{"id":69,"result":{"isIncomplete":false,"items":[{"label":" available()","kind":2,"detail":"int","sortText":"3ee51eb8available","filterText":"available","insertText":"available()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"available()"}},{"label":" availableForWrite()","kind":2,"detail":"int","sortText":"3ee51eb8availableForWrite","filterText":"availableForWrite","insertText":"availableForWrite()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"availableForWrite()"}},{"label":" begin(…)","kind":2,"detail":"[2 overloads]","sortText":"3ee51eb8begin","filterText":"begin","insertText":"begin($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"begin($0)"}},{"label":" end()","kind":2,"detail":"void","sortText":"3ee51eb8end","filterText":"end","insertText":"end()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"end()"}},{"label":" flush()","kind":2,"detail":"void","sortText":"3ee51eb8flush","filterText":"flush","insertText":"flush()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"flush()"}},{"label":" peek()","kind":2,"detail":"int","sortText":"3ee51eb8peek","filterText":"peek","insertText":"peek()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"peek()"}},{"label":" read()","kind":2,"detail":"int","sortText":"3ee51eb8read","filterText":"read","insertText":"read()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"read()"}},{"label":" write(…)","kind":2,"detail":"[5 overloads]","sortText":"3ee51eb8write","filterText":"write","insertText":"write($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"write($0)"}},{"label":" write(…)","kind":2,"detail":"[3 overloads]","sortText":"3ee51eb8write","filterText":"write","insertText":"write($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"write($0)"}},{"label":" clearWriteError()","kind":2,"detail":"void","sortText":"3f651eb8clearWriteError","filterText":"clearWriteError","insertText":"clearWriteError()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"clearWriteError()"}},{"label":" find(…)","kind":2,"detail":"[5 overloads]","sortText":"3f651eb8find","filterText":"find","insertText":"find($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"find($0)"}},{"label":" findUntil(…)","kind":2,"detail":"[4 overloads]","sortText":"3f651eb8findUntil","filterText":"findUntil","insertText":"findUntil($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"findUntil($0)"}},{"label":" getTimeout()","kind":2,"detail":"unsigned long","sortText":"3f651eb8getTimeout","filterText":"getTimeout","insertText":"getTimeout()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"getTimeout()"}},{"label":" getWriteError()","kind":2,"detail":"int","sortText":"3f651eb8getWriteError","filterText":"getWriteError","insertText":"getWriteError()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"getWriteError()"}},{"label":" parseFloat(LookaheadMode lookahead = SKIP_ALL, char ignore = NO_IGNORE_CHAR)","kind":2,"detail":"float","sortText":"3f651eb8parseFloat","filterText":"parseFloat","insertText":"parseFloat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"parseFloat()"}},{"label":" parseInt(LookaheadMode lookahead = SKIP_ALL, char ignore = NO_IGNORE_CHAR)","kind":2,"detail":"long","sortText":"3f651eb8parseInt","filterText":"parseInt","insertText":"parseInt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"parseInt()"}},{"label":" print(…)","kind":2,"detail":"[11 overloads]","sortText":"3f651eb8print","filterText":"print","insertText":"print($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"print($0)"}},{"label":" println(…)","kind":2,"detail":"[12 overloads]","sortText":"3f651eb8println","filterText":"println","insertText":"println($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"println($0)"}},{"label":" readBytes(…)","kind":2,"detail":"[2 overloads]","sortText":"3f651eb8readBytes","filterText":"readBytes","insertText":"readBytes($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"readBytes($0)"}},{"label":" readBytesUntil(…)","kind":2,"detail":"[2 overloads]","sortText":"3f651eb8readBytesUntil","filterText":"readBytesUntil","insertText":"readBytesUntil($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"readBytesUntil($0)"}},{"label":" readString()","kind":2,"detail":"String","sortText":"3f651eb8readString","filterText":"readString","insertText":"readString()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"readString()"}},{"label":" readStringUntil(char terminator)","kind":2,"detail":"String","sortText":"3f651eb8readStringUntil","filterText":"readStringUntil","insertText":"readStringUntil(${1:char terminator})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"readStringUntil(${1:char terminator})"}},{"label":" setTimeout(unsigned long timeout)","kind":2,"detail":"void","sortText":"3f651eb8setTimeout","filterText":"setTimeout","insertText":"setTimeout(${1:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"newText":"setTimeout(${1:unsigned long timeout})"}}]},"jsonrpc":"2.0"}Content-Length: 406

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":1}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":174},"contentChanges":[{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":9}},"rangeLength":0,"text":"b"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":175},"contentChanges":[{"range":{"start":{"line":11,"character":10},"end":{"line":11,"character":10}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":11}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'be' in 'HardwareSerial'"},{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 517

{"jsonrpc":"2.0","id":70,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":11,"character":11},"end":{"line":11,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":11}},"message":"No member named 'be' in 'HardwareSerial'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":70,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":176},"contentChanges":[{"range":{"start":{"line":11,"character":11},"end":{"line":11,"character":11}},"rangeLength":0,"text":"g"}]}}
>>>
Content-Length: 611

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'beg' in 'HardwareSerial'"},{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":177},"contentChanges":[{"range":{"start":{"line":11,"character":12},"end":{"line":11,"character":12}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 612

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":13}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'begi' in 'HardwareSerial'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 519

{"jsonrpc":"2.0","id":71,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":11,"character":13},"end":{"line":11,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":11,"character":9},"end":{"line":11,"character":13}},"message":"No member named 'begi' in 'HardwareSerial'","severity":1,"code":"no_member","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":71,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":177}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":178},"contentChanges":[{"range":{"start":{"line":11,"character":13},"end":{"line":11,"character":13}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 918

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":14}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:121:10:\nnote: possible target for call\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:122:10:\nnote: possible target for call"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 362

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":179},"contentChanges":[{"range":{"start":{"line":11,"character":14},"end":{"line":11,"character":14}},"rangeLength":0,"text":"()"}]}}
>>>
Content-Length: 1045

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":14}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'begin'\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:121:10:\nnote: candidate function not viable: requires single argument 'baud', but no arguments were provided\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:122:10:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided"},{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":72,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":11,"character":15},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 182

{"id":72,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":73,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":11,"character":15},"end":{"line":11,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":73,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":179}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":180},"contentChanges":[{"range":{"start":{"line":11,"character":15},"end":{"line":11,"character":15}},"rangeLength":0,"text":"9"}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":74,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":74,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":180}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":181},"contentChanges":[{"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"rangeLength":0,"text":"6"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":182},"contentChanges":[{"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":183},"contentChanges":[{"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":18}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":75,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":75,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":183}}}Content-Length: 337

{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":76,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":184},"contentChanges":[{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":20}},"rangeLength":0,"text":"\n  "}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 466

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":185},"contentChanges":[{"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":2}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":186},"contentChanges":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":2}},"rangeLength":0,"text":"p"}]}}
>>>
Content-Length: 610

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'p'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":187},"contentChanges":[{"range":{"start":{"line":13,"character":3},"end":{"line":13,"character":3}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 611

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":4}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":188},"contentChanges":[{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":4}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 1039

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":5}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pin'; did you mean 'sin'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/bin/../lib/gcc/avr/7.3.0/../../../../avr/include/math.h:133:15:\nnote: 'sin' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 944

{"jsonrpc":"2.0","id":77,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":5},"end":{"line":13,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":5}},"message":"Expected ';' after expression (fix available)","severity":1,"code":"expected_semi_after_expr","source":"clang"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":5}},"message":"Use of undeclared identifier 'pin'; did you mean 'sin'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/bin/../lib/gcc/avr/7.3.0/../../../../avr/include/math.h:133:15:\nnote: 'sin' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":77,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":188}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":189},"contentChanges":[{"range":{"start":{"line":13,"character":5},"end":{"line":13,"character":5}},"rangeLength":0,"text":"M"}]}}
>>>
Content-Length: 613

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":6}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pinM'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":190},"contentChanges":[{"range":{"start":{"line":13,"character":6},"end":{"line":13,"character":6}},"rangeLength":0,"text":"o"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":191},"contentChanges":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":7}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 996

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMol'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":192},"contentChanges":[{"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":8}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 997

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMold'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":193},"contentChanges":[{"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":9}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 1000

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":10}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMolde'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":194},"contentChanges":[{"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":10}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 997

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMold'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":195},"contentChanges":[{"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":9}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 996

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMol'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":196},"contentChanges":[{"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":8}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 997

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMold'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":197},"contentChanges":[{"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":9}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 1000

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":10}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMolde'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":198},"contentChanges":[{"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":10}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 997

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMold'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":199},"contentChanges":[{"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":9}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 996

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMol'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":200},"contentChanges":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":8}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 614

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pinMo'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":201},"contentChanges":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":7}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 996

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMod'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":202},"contentChanges":[{"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":8}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 629

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 534

{"jsonrpc":"2.0","id":78,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"message":"Expected ';' after expression (fix available)","severity":1,"code":"expected_semi_after_expr","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":78,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":202}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":203},"contentChanges":[{"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":9}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 1000

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":10}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinModet'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":204},"contentChanges":[{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":10}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 1001

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":11}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":11}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinModetr'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":205},"contentChanges":[{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":11}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 1000

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":10}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinModet'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":206},"contentChanges":[{"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":10}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 629

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 534

{"jsonrpc":"2.0","id":79,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"message":"Expected ';' after expression (fix available)","severity":1,"code":"expected_semi_after_expr","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":79,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":206}}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":207},"contentChanges":[{"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":9}},"rangeLength":0,"text":"()"}]}}
>>>
Content-Length: 1013

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'pinMode'\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":80,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":13,"character":10},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 182

{"id":80,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":81,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":207}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":208},"contentChanges":[{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":10}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 812

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 't'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":209},"contentChanges":[{"range":{"start":{"line":13,"character":11},"end":{"line":13,"character":11}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 813

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tr'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 520

{"jsonrpc":"2.0","id":82,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":12},"end":{"line":13,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":12}},"message":"Use of undeclared identifier 'tr'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":82,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":209}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":210},"contentChanges":[{"range":{"start":{"line":13,"character":12},"end":{"line":13,"character":12}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 814

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tri'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":211},"contentChanges":[{"range":{"start":{"line":13,"character":13},"end":{"line":13,"character":13}},"rangeLength":0,"text":"g"}]}}
>>>
Content-Length: 815

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'trig'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 522

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":14},"end":{"line":13,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":14}},"message":"Use of undeclared identifier 'trig'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":83,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":211}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":212},"contentChanges":[{"range":{"start":{"line":13,"character":14},"end":{"line":13,"character":14}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 816

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'trigP'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":213},"contentChanges":[{"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":15}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 817

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'trigPi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":214},"contentChanges":[{"range":{"start":{"line":13,"character":16},"end":{"line":13,"character":16}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 1012

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'pinMode'\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":84,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":84,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":214}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":215},"contentChanges":[{"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":17}},"rangeLength":0,"text":","}]}}
>>>
Content-Length: 600

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":19}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":85,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":13,"character":18},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 182

{"id":85,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":216},"contentChanges":[{"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 600

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":20}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":217},"contentChanges":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":19}},"rangeLength":0,"text":"O"}]}}
>>>
Content-Length: 812

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'O'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":218},"contentChanges":[{"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"rangeLength":0,"text":"U"}]}}
>>>
Content-Length: 813

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OU'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":219},"contentChanges":[{"range":{"start":{"line":13,"character":21},"end":{"line":13,"character":21}},"rangeLength":0,"text":"T"}]}}
>>>
Content-Length: 814

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUT'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":220},"contentChanges":[{"range":{"start":{"line":13,"character":22},"end":{"line":13,"character":22}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 815

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTP'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":221},"contentChanges":[{"range":{"start":{"line":13,"character":23},"end":{"line":13,"character":23}},"rangeLength":0,"text":"U"}]}}
>>>
Content-Length: 816

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPU'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":222},"contentChanges":[{"range":{"start":{"line":13,"character":24},"end":{"line":13,"character":24}},"rangeLength":0,"text":"T"}]}}
>>>
Content-Length: 629

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":86,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":25},"end":{"line":13,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 419

{"id":86,"result":[{"title":"Expand macro 'OUTPUT'","kind":"refactor","command":{"title":"Expand macro 'OUTPUT'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server091364670/sketch/sketch_may25a.ino.cpp","selection":{"start":{"line":20,"character":25},"end":{"line":20,"character":25}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":222}}}Content-Length: 268

{"jsonrpc":"2.0","id":87,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":11,"character":19}}}
>>>
Content-Length: 230

{"id":87,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","range":{"start":{"line":120,"character":9},"end":{"line":120,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5658

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial.h - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#ifndef HardwareSerial_h\n#define HardwareSerial_h\n\n#include <inttypes.h>\n\n#include \"Stream.h\"\n\n// Define constants and variables for buffering incoming serial data.  We're\n// using a ring buffer (I think), in which head is the index of the location\n// to which to write the next incoming character and tail is the index of the\n// location from which to read.\n// NOTE: a \"power of 2\" buffer size is reccomended to dramatically\n//       optimize all the modulo operations for ring buffers.\n// WARNING: When buffer sizes are increased to > 256, the buffer index\n// variables are automatically increased in size, but the extra\n// atomicity guards needed for that are not implemented. This will\n// often work, but occasionally a race condition can occur that makes\n// Serial behave erratically. See https://github.com/arduino/Arduino/issues/2405\n#if !defined(SERIAL_TX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) < 1023)\n#define SERIAL_TX_BUFFER_SIZE 16\n#else\n#define SERIAL_TX_BUFFER_SIZE 64\n#endif\n#endif\n#if !defined(SERIAL_RX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) < 1023)\n#define SERIAL_RX_BUFFER_SIZE 16\n#else\n#define SERIAL_RX_BUFFER_SIZE 64\n#endif\n#endif\n#if (SERIAL_TX_BUFFER_SIZE>256)\ntypedef uint16_t tx_buffer_index_t;\n#else\ntypedef uint8_t tx_buffer_index_t;\n#endif\n#if  (SERIAL_RX_BUFFER_SIZE>256)\ntypedef uint16_t rx_buffer_index_t;\n#else\ntypedef uint8_t rx_buffer_index_t;\n#endif\n\n// Define config for Serial.begin(baud, config);\n#define SERIAL_5N1 0x00\n#define SERIAL_6N1 0x02\n#define SERIAL_7N1 0x04\n#define SERIAL_8N1 0x06\n#define SERIAL_5N2 0x08\n#define SERIAL_6N2 0x0A\n#define SERIAL_7N2 0x0C\n#define SERIAL_8N2 0x0E\n#define SERIAL_5E1 0x20\n#define SERIAL_6E1 0x22\n#define SERIAL_7E1 0x24\n#define SERIAL_8E1 0x26\n#define SERIAL_5E2 0x28\n#define SERIAL_6E2 0x2A\n#define SERIAL_7E2 0x2C\n#define SERIAL_8E2 0x2E\n#define SERIAL_5O1 0x30\n#define SERIAL_6O1 0x32\n#define SERIAL_7O1 0x34\n#define SERIAL_8O1 0x36\n#define SERIAL_5O2 0x38\n#define SERIAL_6O2 0x3A\n#define SERIAL_7O2 0x3C\n#define SERIAL_8O2 0x3E\n\nclass HardwareSerial : public Stream\n{\n  protected:\n    volatile uint8_t * const _ubrrh;\n    volatile uint8_t * const _ubrrl;\n    volatile uint8_t * const _ucsra;\n    volatile uint8_t * const _ucsrb;\n    volatile uint8_t * const _ucsrc;\n    volatile uint8_t * const _udr;\n    // Has any byte been written to the UART since begin()\n    bool _written;\n\n    volatile rx_buffer_index_t _rx_buffer_head;\n    volatile rx_buffer_index_t _rx_buffer_tail;\n    volatile tx_buffer_index_t _tx_buffer_head;\n    volatile tx_buffer_index_t _tx_buffer_tail;\n\n    // Don't put any members after these buffers, since only the first\n    // 32 bytes of this struct can be accessed quickly using the ldd\n    // instruction.\n    unsigned char _rx_buffer[SERIAL_RX_BUFFER_SIZE];\n    unsigned char _tx_buffer[SERIAL_TX_BUFFER_SIZE];\n\n  public:\n    inline HardwareSerial(\n      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,\n      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,\n      volatile uint8_t *ucsrc, volatile uint8_t *udr);\n    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }\n    void begin(unsigned long, uint8_t);\n    void end();\n    virtual int available(void);\n    virtual int peek(void);\n    virtual int read(void);\n    virtual int availableForWrite(void);\n    virtual void flush(void);\n    virtual size_t write(uint8_t);\n    inline size_t write(unsigned long n) { return write((uint8_t)n); }\n    inline size_t write(long n) { return write((uint8_t)n); }\n    inline size_t write(unsigned int n) { return write((uint8_t)n); }\n    inline size_t write(int n) { return write((uint8_t)n); }\n    using Print::write; // pull in write(str) and write(buf, size) from Print\n    operator bool() { return true; }\n\n    // Interrupt handlers - Not intended to be called externally\n    inline void _rx_complete_irq(void);\n    void _tx_udr_empty_irq(void);\n};\n\n#if defined(UBRRH) || defined(UBRR0H)\n  extern HardwareSerial Serial;\n  #define HAVE_HWSERIAL0\n#endif\n#if defined(UBRR1H)\n  extern HardwareSerial Serial1;\n  #define HAVE_HWSERIAL1\n#endif\n#if defined(UBRR2H)\n  extern HardwareSerial Serial2;\n  #define HAVE_HWSERIAL2\n#endif\n#if defined(UBRR3H)\n  extern HardwareSerial Serial3;\n  #define HAVE_HWSERIAL3\n#endif\n\nextern void serialEventRun(void) __attribute__((weak));\n\n#endif\n"}}}Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}}}
>>>
Content-Length: 201

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 262

{"jsonrpc":"2.0","id":88,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":13,"character":9}}}
>>>
Content-Length: 310

{"id":88,"result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"start":{"line":20,"character":2},"end":{"line":20,"character":9}}},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":89,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":223},"contentChanges":[{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":20}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":90,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":11,"character":21},"end":{"line":11,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":90,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":223}}}Content-Length: 336

{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":91,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":92,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":1},"end":{"line":13,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":92,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":26},"end":{"line":13,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":93,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":224},"contentChanges":[{"range":{"start":{"line":13,"character":26},"end":{"line":13,"character":26}},"rangeLength":0,"text":"\n  "}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":224}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":225},"contentChanges":[{"range":{"start":{"line":13,"character":26},"end":{"line":14,"character":2}},"rangeLength":3,"text":""}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":94,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":26},"end":{"line":13,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":94,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":225}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":226},"contentChanges":[{"range":{"start":{"line":13,"character":26},"end":{"line":13,"character":26}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":13,"character":27},"end":{"line":13,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":95,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":226}}}Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":227},"contentChanges":[{"range":{"start":{"line":13,"character":27},"end":{"line":13,"character":27}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":228},"contentChanges":[{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":2}},"rangeLength":0,"text":" pinMode(trigPin, OUTPUT)"}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":96,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":27},"end":{"line":14,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":96,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":228}}}
>>>
Content-Length: 117

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"jsonrpc":"2.0","id":13,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":229},"contentChanges":[{"range":{"start":{"line":14,"character":27},"end":{"line":14,"character":27}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":28},"end":{"line":14,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":97,"result":[],"jsonrpc":"2.0"}Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":229}}}Content-Length: 337

{"jsonrpc":"2.0","id":98,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":28},"end":{"line":14,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":98,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":99,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 319

{"id":99,"result":[{"range":{"start":{"line":13,"character":27},"end":{"line":14,"character":3}},"newText":"\n  "},{"range":{"start":{"line":18,"character":48},"end":{"line":20,"character":0}},"newText":"\n"},{"range":{"start":{"line":20,"character":1},"end":{"line":22,"character":0}},"newText":"\n"}],"jsonrpc":"2.0"}
<<<
Content-Length: 462

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":230},"contentChanges":[{"range":{"start":{"line":19,"character":0},"end":{"line":20,"character":0}},"rangeLength":1,"text":""},{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":3}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 112

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"jsonrpc":"2.0","id":14,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":100,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":27},"end":{"line":14,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":100,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":230}}}Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":231},"contentChanges":[{"range":{"start":{"line":14,"character":27},"end":{"line":14,"character":27}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":231}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":232},"contentChanges":[{"range":{"start":{"line":14,"character":27},"end":{"line":15,"character":2}},"rangeLength":3,"text":""}]}}Content-Length: 338

{"jsonrpc":"2.0","id":101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":27},"end":{"line":14,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":101,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":232}}}Content-Length: 338

{"jsonrpc":"2.0","id":102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":26},"end":{"line":14,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":102,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":103,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":14,"character":25}}}
>>>
Content-Length: 211

{"id":103,"result":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"kind":1},{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":14,"character":17}}}
>>>
Content-Length: 211

{"id":104,"result":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"kind":1},{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":105,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":106,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":233},"contentChanges":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":14}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 756

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'triPin'; did you mean 'trigPin'? (fix available)\n\nsketch_may25a.ino.cpp:3:11: note: 'trigPin' declared here"},{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}},"severity":3,"message":"'trigPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'triPin'; did you mean 'trigPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":234},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":13}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 416

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'trPin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":235},"contentChanges":[{"range":{"start":{"line":14,"character":11},"end":{"line":14,"character":12}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 415

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'tPin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":236},"contentChanges":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":11}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Pin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":237},"contentChanges":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":10}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 415

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ePin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":238},"contentChanges":[{"range":{"start":{"line":14,"character":11},"end":{"line":14,"character":11}},"rangeLength":0,"text":"h"}]}}
>>>
Content-Length: 750

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":15}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ehPin'; did you mean 'redPin'? (fix available)\n\nsketch_may25a.ino.cpp:6:11: note: 'redPin' declared here"},{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"severity":3,"message":"'redPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'ehPin'; did you mean 'redPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":239},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":12}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 756

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ehcPin'; did you mean 'echoPin'? (fix available)\n\nsketch_may25a.ino.cpp:4:11: note: 'echoPin' declared here"},{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"severity":3,"message":"'echoPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'ehcPin'; did you mean 'echoPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":240},"contentChanges":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 758

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":17}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ehcoPin'; did you mean 'echoPin'? (fix available)\n\nsketch_may25a.ino.cpp:4:11: note: 'echoPin' declared here"},{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"severity":3,"message":"'echoPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'ehcoPin'; did you mean 'echoPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 636

{"jsonrpc":"2.0","id":107,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":17}},"message":"Use of undeclared identifier 'ehcoPin'; did you mean 'echoPin'? (fix available)\n\nsketch_may25a.ino.cpp:4:11: note: 'echoPin' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":107,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":240}}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":241},"contentChanges":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":14}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 756

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ehcPin'; did you mean 'echoPin'? (fix available)\n\nsketch_may25a.ino.cpp:4:11: note: 'echoPin' declared here"},{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"severity":3,"message":"'echoPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'ehcPin'; did you mean 'echoPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":242},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":13}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 750

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":15}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ehPin'; did you mean 'redPin'? (fix available)\n\nsketch_may25a.ino.cpp:6:11: note: 'redPin' declared here"},{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"severity":3,"message":"'redPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'ehPin'; did you mean 'redPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":243},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":12}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 756

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ehcPin'; did you mean 'echoPin'? (fix available)\n\nsketch_may25a.ino.cpp:4:11: note: 'echoPin' declared here"},{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"severity":3,"message":"'echoPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'ehcPin'; did you mean 'echoPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":244},"contentChanges":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"rangeLength":0,"text":"h"}]}}
>>>
Content-Length: 758

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":17}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ehchPin'; did you mean 'echoPin'? (fix available)\n\nsketch_may25a.ino.cpp:4:11: note: 'echoPin' declared here"},{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"severity":3,"message":"'echoPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'ehchPin'; did you mean 'echoPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 636

{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":17}},"message":"Use of undeclared identifier 'ehchPin'; did you mean 'echoPin'? (fix available)\n\nsketch_may25a.ino.cpp:4:11: note: 'echoPin' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":108,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":245},"contentChanges":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":14}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 756

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ehcPin'; did you mean 'echoPin'? (fix available)\n\nsketch_may25a.ino.cpp:4:11: note: 'echoPin' declared here"},{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"severity":3,"message":"'echoPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'ehcPin'; did you mean 'echoPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":246},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":13}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 750

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":15}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ehPin'; did you mean 'redPin'? (fix available)\n\nsketch_may25a.ino.cpp:6:11: note: 'redPin' declared here"},{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"severity":3,"message":"'redPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'ehPin'; did you mean 'redPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":247},"contentChanges":[{"range":{"start":{"line":14,"character":11},"end":{"line":14,"character":12}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 415

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ePin'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":248},"contentChanges":[{"range":{"start":{"line":14,"character":11},"end":{"line":14,"character":11}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 750

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":15}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ecPin'; did you mean 'redPin'? (fix available)\n\nsketch_may25a.ino.cpp:6:11: note: 'redPin' declared here"},{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"severity":3,"message":"'redPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'ecPin'; did you mean 'redPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":249},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":12}},"rangeLength":0,"text":"h"}]}}
>>>
Content-Length: 756

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'echPin'; did you mean 'echoPin'? (fix available)\n\nsketch_may25a.ino.cpp:4:11: note: 'echoPin' declared here"},{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"severity":3,"message":"'echoPin' declared here\n\nsketch_may25a.ino.cpp:22:11: error: use of undeclared identifier 'echPin'; did you mean 'echoPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":250},"contentChanges":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":109,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":14,"character":15}}}
>>>
Content-Length: 213

{"id":110,"result":[{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}},"kind":1},{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":17}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":250}}}Content-Length: 338

{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":111,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":112,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":14,"character":19}}}
>>>
Content-Length: 38

{"id":112,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":113,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":25},"end":{"line":14,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 420

{"id":113,"result":[{"title":"Expand macro 'OUTPUT'","kind":"refactor","command":{"title":"Expand macro 'OUTPUT'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server091364670/sketch/sketch_may25a.ino.cpp","selection":{"start":{"line":21,"character":25},"end":{"line":21,"character":25}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":22},"end":{"line":14,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 420

{"id":114,"result":[{"title":"Expand macro 'OUTPUT'","kind":"refactor","command":{"title":"Expand macro 'OUTPUT'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server091364670/sketch/sketch_may25a.ino.cpp","selection":{"start":{"line":21,"character":22},"end":{"line":21,"character":22}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":251},"contentChanges":[{"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":22}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 416

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUPUT'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":252},"contentChanges":[{"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":21}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 415

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OPUT'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":253},"contentChanges":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":20}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'PUT'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 522

{"jsonrpc":"2.0","id":115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":22}},"message":"Use of undeclared identifier 'PUT'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":115,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":253}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":254},"contentChanges":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":19}},"rangeLength":0,"text":"I"}]}}
>>>
Content-Length: 415

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'IPUT'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":255},"contentChanges":[{"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":20}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 416

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'InPUT'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 524

{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":24}},"message":"Use of undeclared identifier 'InPUT'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":116,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":255}}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":256},"contentChanges":[{"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":21}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 415

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'IPUT'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 523

{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":19},"end":{"line":14,"character":23}},"message":"Use of undeclared identifier 'IPUT'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":117,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":256}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":257},"contentChanges":[{"range":{"start":{"line":14,"character":20},"end":{"line":14,"character":20}},"rangeLength":0,"text":"N"}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 418

{"id":118,"result":[{"title":"Expand macro 'INPUT'","kind":"refactor","command":{"title":"Expand macro 'INPUT'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server091364670/sketch/sketch_may25a.ino.cpp","selection":{"start":{"line":21,"character":21},"end":{"line":21,"character":21}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":257}}}Content-Length: 276

{"jsonrpc":"2.0","id":119,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":14,"character":22}}}
>>>
Content-Length: 38

{"id":119,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":120,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":24},"end":{"line":14,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 418

{"id":120,"result":[{"title":"Expand macro 'INPUT'","kind":"refactor","command":{"title":"Expand macro 'INPUT'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server091364670/sketch/sketch_may25a.ino.cpp","selection":{"start":{"line":21,"character":24},"end":{"line":21,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":26},"end":{"line":14,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":121,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":258},"contentChanges":[{"range":{"start":{"line":14,"character":26},"end":{"line":14,"character":26}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 466

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":259},"contentChanges":[{"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":260},"contentChanges":[{"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":2}},"rangeLength":0,"text":" pinMode(trigPin, OUTPUT)"}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":16,"character":27},"end":{"line":16,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":122,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":260}}}
>>>
Content-Length: 117

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"jsonrpc":"2.0","id":15,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":123,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 228

{"id":123,"result":[{"range":{"start":{"line":14,"character":26},"end":{"line":16,"character":3}},"newText":"\n\n  "},{"range":{"start":{"line":21,"character":1},"end":{"line":23,"character":0}},"newText":"\n"}],"jsonrpc":"2.0"}Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":261},"contentChanges":[{"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":3}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":124,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":261}}}Content-Length: 276

{"jsonrpc":"2.0","id":125,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":16,"character":25}}}
>>>
Content-Length: 298

{"id":125,"result":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"kind":1},{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":9}},"kind":1},{"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":16,"character":25},"end":{"line":16,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 420

{"id":126,"result":[{"title":"Expand macro 'OUTPUT'","kind":"refactor","command":{"title":"Expand macro 'OUTPUT'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server091364670/sketch/sketch_may25a.ino.cpp","selection":{"start":{"line":23,"character":25},"end":{"line":23,"character":25}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":127,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":16,"character":17}}}
>>>
Content-Length: 298

{"id":127,"result":[{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":9}},"kind":1},{"range":{"start":{"line":14,"character":2},"end":{"line":14,"character":9}},"kind":1},{"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":128,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":128,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":129,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":16,"character":19}}}
>>>
Content-Length: 38

{"id":129,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 535

{"jsonrpc":"2.0","id":130,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":17,"character":1},"end":{"line":17,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":1}},"message":"Expected ';' after expression (fix available)","severity":1,"code":"expected_semi_after_expr","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":130,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":131,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":131,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":262},"contentChanges":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 112

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"jsonrpc":"2.0","id":16,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":263},"contentChanges":[{"range":{"start":{"line":16,"character":27},"end":{"line":16,"character":27}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":264},"contentChanges":[{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":2}},"rangeLength":0,"text":" pinMode(trigPin, OUTPUT)"}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":265},"contentChanges":[{"range":{"start":{"line":17,"character":27},"end":{"line":17,"character":27}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 365

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":266},"contentChanges":[{"range":{"start":{"line":17,"character":28},"end":{"line":17,"character":28}},"rangeLength":0,"text":"\n   "}]}}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":267},"contentChanges":[{"range":{"start":{"line":18,"character":3},"end":{"line":18,"character":3}},"rangeLength":0,"text":" pinMode(trigPin, OUTPUT)"}]}}
>>>
Content-Length: 429

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":132,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":132,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":268},"contentChanges":[{"range":{"start":{"line":18,"character":28},"end":{"line":18,"character":28}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":133,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":18,"character":29},"end":{"line":18,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":133,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":268}}}Content-Length: 276

{"jsonrpc":"2.0","id":134,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":16,"character":14}}}
>>>
Content-Length: 480

{"id":134,"result":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}},"kind":1},{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":17}},"kind":2},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":17}},"kind":2},{"range":{"start":{"line":17,"character":11},"end":{"line":17,"character":18}},"kind":2},{"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":19}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":135,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":135,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"jsonrpc":"2.0","id":136,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":17,"character":8}}}
>>>
Content-Length: 312

{"id":136,"result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"start":{"line":24,"character":3},"end":{"line":24,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":269},"contentChanges":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":17}},"rangeLength":7,"text":"r"}]}}
>>>
Content-Length: 412

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'r'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":270},"contentChanges":[{"range":{"start":{"line":16,"character":11},"end":{"line":16,"character":11}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 413

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 're'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":271},"contentChanges":[{"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":12}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'red'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 522

{"jsonrpc":"2.0","id":137,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}},"message":"Use of undeclared identifier 'red'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":137,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":271}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":272},"contentChanges":[{"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":13}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 415

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'redP'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 523

{"jsonrpc":"2.0","id":138,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":16,"character":14},"end":{"line":16,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}},"message":"Use of undeclared identifier 'redP'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":138,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":273},"contentChanges":[{"range":{"start":{"line":16,"character":14},"end":{"line":16,"character":14}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 750

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":15}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'redPi'; did you mean 'redPin'? (fix available)\n\nsketch_may25a.ino.cpp:6:11: note: 'redPin' declared here"},{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"severity":3,"message":"'redPin' declared here\n\nsketch_may25a.ino.cpp:24:11: error: use of undeclared identifier 'redPi'; did you mean 'redPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":274},"contentChanges":[{"range":{"start":{"line":16,"character":15},"end":{"line":16,"character":15}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":16,"character":16},"end":{"line":16,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":139,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":274}}}Content-Length: 275

{"jsonrpc":"2.0","id":140,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":4,"character":14}}}
>>>
Content-Length: 124

{"id":140,"result":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":18}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 268

{"jsonrpc":"2.0","id":141,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":4,"character":14}}}
>>>
Content-Length: 257

{"id":141,"result":[{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","range":{"start":{"line":4,"character":10},"end":{"line":4,"character":18}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 268

{"jsonrpc":"2.0","id":142,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":5,"character":13}}}
>>>
Content-Length: 257

{"id":142,"result":[{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":143,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":143,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":144,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":16,"character":12}}}
>>>
Content-Length: 257

{"id":144,"result":[{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":145,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":18,"character":13}}}
>>>
Content-Length: 391

{"id":145,"result":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}},"kind":1},{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":17}},"kind":2},{"range":{"start":{"line":17,"character":11},"end":{"line":17,"character":18}},"kind":2},{"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":19}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":146,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":146,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":147,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":17,"character":12}}}
>>>
Content-Length: 309

{"id":147,"result":{"contents":{"kind":"markdown","value":"### variable `trigPin`  \n\n---\nType: `const int`  \nValue = `11`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int trigPin = 11\n```"},"range":{"start":{"line":24,"character":11},"end":{"line":24,"character":18}}},"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":148,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":17,"character":13}}}
>>>
Content-Length: 257

{"id":148,"result":[{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":149,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":17,"character":11},"end":{"line":17,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":149,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":150,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":13,"character":13}}}
>>>
Content-Length: 257

{"id":150,"result":[{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 368

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":275},"contentChanges":[{"range":{"start":{"line":17,"character":11},"end":{"line":17,"character":18}},"rangeLength":7,"text":"greenPin"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":151,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":17,"character":19},"end":{"line":17,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":151,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":275}}}Content-Length: 268

{"jsonrpc":"2.0","id":152,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":7,"character":14}}}
>>>
Content-Length: 256

{"id":152,"result":[{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":153,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":5,"character":13}}}
>>>
Content-Length: 124

{"id":153,"result":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":154,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":154,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":155,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":14,"character":13}}}
>>>
Content-Length: 257

{"id":155,"result":[{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":156,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":17,"character":13}}}
>>>
Content-Length: 257

{"id":156,"result":[{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","range":{"start":{"line":4,"character":10},"end":{"line":4,"character":18}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":157,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":18,"character":14}}}
>>>
Content-Length: 257

{"id":157,"result":[{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":158,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":18,"character":14}}}
>>>
Content-Length: 309

{"id":158,"result":{"contents":{"kind":"markdown","value":"### variable `trigPin`  \n\n---\nType: `const int`  \nValue = `11`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int trigPin = 11\n```"},"range":{"start":{"line":25,"character":12},"end":{"line":25,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":159,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":14,"character":26},"end":{"line":14,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":159,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":19,"character":1},"end":{"line":19,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":160,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":161,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":18,"character":15}}}
>>>
Content-Length: 302

{"id":161,"result":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}},"kind":1},{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":17}},"kind":2},{"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":19}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":162,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":18,"character":15}}}
>>>
Content-Length: 257

{"id":162,"result":[{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":163,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":163,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":164,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":17,"character":26}}}
>>>
Content-Length: 222

{"id":164,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","range":{"start":{"line":43,"character":8},"end":{"line":43,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 367

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":276},"contentChanges":[{"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":19}},"rangeLength":7,"text":"bluePin"}]}}Content-Length: 8117

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 184

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}}
>>>
Content-Length: 194

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":165,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":18,"character":19},"end":{"line":18,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":165,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":276}}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":276}}}Content-Length: 338

{"jsonrpc":"2.0","id":166,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":21,"character":13},"end":{"line":21,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":166,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":167,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":22,"character":48},"end":{"line":22,"character":48}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":167,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":277},"contentChanges":[{"range":{"start":{"line":22,"character":48},"end":{"line":22,"character":48}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":277}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":278},"contentChanges":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":2}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 410

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'd'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":279},"contentChanges":[{"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":3}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 411

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'di'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":280},"contentChanges":[{"range":{"start":{"line":23,"character":4},"end":{"line":23,"character":4}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 641

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":5}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'dis'; did you mean 'div'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/bin/../lib/gcc/avr/7.3.0/../../../../avr/include/stdlib.h:162:14:\nnote: 'div' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":281},"contentChanges":[{"range":{"start":{"line":23,"character":5},"end":{"line":23,"character":5}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 413

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'dist'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 519

{"jsonrpc":"2.0","id":168,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":23,"character":6},"end":{"line":23,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":6}},"message":"Use of undeclared identifier 'dist'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":168,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":281}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":282},"contentChanges":[{"range":{"start":{"line":23,"character":6},"end":{"line":23,"character":6}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'dista'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":283},"contentChanges":[{"range":{"start":{"line":23,"character":7},"end":{"line":23,"character":7}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 415

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'distan'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 521

{"jsonrpc":"2.0","id":169,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":23,"character":8},"end":{"line":23,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":8}},"message":"Use of undeclared identifier 'distan'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":169,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":283}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":284},"contentChanges":[{"range":{"start":{"line":23,"character":8},"end":{"line":23,"character":8}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 758

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'distanc'; did you mean 'distance'? (fix available)\n\nsketch_may25a.ino.cpp:10:7: note: 'distance' declared here"},{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}},"severity":3,"message":"'distance' declared here\n\nsketch_may25a.ino.cpp:31:3: error: use of undeclared identifier 'distanc'; did you mean 'distance'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":285},"contentChanges":[{"range":{"start":{"line":23,"character":9},"end":{"line":23,"character":9}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 230

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":170,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":23,"character":10},"end":{"line":23,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":170,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":285}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":286},"contentChanges":[{"range":{"start":{"line":23,"character":10},"end":{"line":23,"character":10}},"rangeLength":0,"text":" "}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":287},"contentChanges":[{"range":{"start":{"line":23,"character":11},"end":{"line":23,"character":11}},"rangeLength":0,"text":"="}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":288},"contentChanges":[{"range":{"start":{"line":23,"character":12},"end":{"line":23,"character":12}},"rangeLength":0,"text":" "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":288}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":289},"contentChanges":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":13}},"rangeLength":0,"text":"g"}]}}
>>>
Content-Length: 412

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'g'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":290},"contentChanges":[{"range":{"start":{"line":23,"character":14},"end":{"line":23,"character":14}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 413

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ge'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":291},"contentChanges":[{"range":{"start":{"line":23,"character":15},"end":{"line":23,"character":15}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'get'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 522

{"jsonrpc":"2.0","id":171,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":23,"character":16},"end":{"line":23,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":16}},"message":"Use of undeclared identifier 'get'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":171,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":292},"contentChanges":[{"range":{"start":{"line":23,"character":16},"end":{"line":23,"character":16}},"rangeLength":0,"text":"D"}]}}
>>>
Content-Length: 415

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getD'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":293},"contentChanges":[{"range":{"start":{"line":23,"character":17},"end":{"line":23,"character":17}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 416

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":294},"contentChanges":[{"range":{"start":{"line":23,"character":18},"end":{"line":23,"character":18}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 417

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDis'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 525

{"jsonrpc":"2.0","id":172,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":23,"character":19},"end":{"line":23,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":19}},"message":"Use of undeclared identifier 'getDis'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":172,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":295},"contentChanges":[{"range":{"start":{"line":23,"character":19},"end":{"line":23,"character":19}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 418

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDist'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":296},"contentChanges":[{"range":{"start":{"line":23,"character":20},"end":{"line":23,"character":20}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 419

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDista'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":297},"contentChanges":[{"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":21}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 420

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistan'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":298},"contentChanges":[{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":22}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 421

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistanc'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":299},"contentChanges":[{"range":{"start":{"line":23,"character":23},"end":{"line":23,"character":23}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 769

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'getDistance'; did you mean 'distance'? (fix available)\n\nsketch_may25a.ino.cpp:10:7: note: 'distance' declared here"},{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}},"severity":3,"message":"'distance' declared here\n\nsketch_may25a.ino.cpp:31:14: error: use of undeclared identifier 'getDistance'; did you mean 'distance'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 642

{"jsonrpc":"2.0","id":173,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":23,"character":24},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'; did you mean 'distance'? (fix available)\n\nsketch_may25a.ino.cpp:10:7: note: 'distance' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":173,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":299}}}Content-Length: 362

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":300},"contentChanges":[{"range":{"start":{"line":23,"character":24},"end":{"line":23,"character":24}},"rangeLength":0,"text":"()"}]}}
>>>
Content-Length: 422

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":174,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":23,"character":25},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 93

{"id":174,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":300}}}Content-Length: 338

{"jsonrpc":"2.0","id":175,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":23,"character":26},"end":{"line":23,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":175,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":301},"contentChanges":[{"range":{"start":{"line":23,"character":26},"end":{"line":23,"character":26}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 422

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":176,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":23,"character":27},"end":{"line":23,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":176,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":302},"contentChanges":[{"range":{"start":{"line":23,"character":27},"end":{"line":23,"character":27}},"rangeLength":0,"text":"\n  "}]}}
>>>
Content-Length: 422

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":302}}}Content-Length: 466

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":303},"contentChanges":[{"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":304},"contentChanges":[{"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":2}},"rangeLength":0,"text":"S"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":305},"contentChanges":[{"range":{"start":{"line":25,"character":3},"end":{"line":25,"character":3}},"rangeLength":0,"text":"e"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":306},"contentChanges":[{"range":{"start":{"line":25,"character":4},"end":{"line":25,"character":4}},"rangeLength":0,"text":"r"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":307},"contentChanges":[{"range":{"start":{"line":25,"character":5},"end":{"line":25,"character":5}},"rangeLength":0,"text":"i"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":308},"contentChanges":[{"range":{"start":{"line":25,"character":6},"end":{"line":25,"character":6}},"rangeLength":0,"text":"a"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":309},"contentChanges":[{"range":{"start":{"line":25,"character":7},"end":{"line":25,"character":7}},"rangeLength":0,"text":"l"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":310},"contentChanges":[{"range":{"start":{"line":25,"character":8},"end":{"line":25,"character":8}},"rangeLength":0,"text":"."}]}}Content-Length: 319

{"jsonrpc":"2.0","id":177,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":25,"character":9},"context":{"triggerKind":2,"triggerCharacter":"."}}}
>>>
Content-Length: 230

{"id":177,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":311},"contentChanges":[{"range":{"start":{"line":25,"character":9},"end":{"line":25,"character":9}},"rangeLength":0,"text":"p"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":178,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":25,"character":10},"end":{"line":25,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":178,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":312},"contentChanges":[{"range":{"start":{"line":25,"character":10},"end":{"line":25,"character":10}},"rangeLength":0,"text":"r"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":179,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":25,"character":11},"end":{"line":25,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":179,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":313},"contentChanges":[{"range":{"start":{"line":25,"character":11},"end":{"line":25,"character":11}},"rangeLength":0,"text":"i"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":314},"contentChanges":[{"range":{"start":{"line":25,"character":12},"end":{"line":25,"character":12}},"rangeLength":0,"text":"n"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":315},"contentChanges":[{"range":{"start":{"line":25,"character":13},"end":{"line":25,"character":13}},"rangeLength":0,"text":"t"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":180,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":25,"character":14},"end":{"line":25,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":180,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":315}}}Content-Length: 362

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":316},"contentChanges":[{"range":{"start":{"line":25,"character":14},"end":{"line":25,"character":14}},"rangeLength":0,"text":"()"}]}}Content-Length: 343

{"jsonrpc":"2.0","id":181,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":25,"character":15},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 230

{"id":181,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":182,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":182,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":317},"contentChanges":[{"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":15}},"rangeLength":0,"text":"d"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":318},"contentChanges":[{"range":{"start":{"line":25,"character":16},"end":{"line":25,"character":16}},"rangeLength":0,"text":"i"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":183,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":25,"character":17},"end":{"line":25,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":183,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":318}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":319},"contentChanges":[{"range":{"start":{"line":25,"character":17},"end":{"line":25,"character":17}},"rangeLength":0,"text":"s"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":320},"contentChanges":[{"range":{"start":{"line":25,"character":18},"end":{"line":25,"character":18}},"rangeLength":0,"text":"t"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":321},"contentChanges":[{"range":{"start":{"line":25,"character":19},"end":{"line":25,"character":19}},"rangeLength":0,"text":"a"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":322},"contentChanges":[{"range":{"start":{"line":25,"character":20},"end":{"line":25,"character":20}},"rangeLength":0,"text":"n"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":323},"contentChanges":[{"range":{"start":{"line":25,"character":21},"end":{"line":25,"character":21}},"rangeLength":0,"text":"c"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":324},"contentChanges":[{"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"rangeLength":0,"text":"e"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":184,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":25,"character":24},"end":{"line":25,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":184,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":325},"contentChanges":[{"range":{"start":{"line":25,"character":24},"end":{"line":25,"character":24}},"rangeLength":0,"text":"l"}]}}Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":326},"contentChanges":[{"range":{"start":{"line":25,"character":25},"end":{"line":25,"character":25}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":327},"contentChanges":[{"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":328},"contentChanges":[{"range":{"start":{"line":25,"character":25},"end":{"line":26,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 338

{"jsonrpc":"2.0","id":185,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":25,"character":25},"end":{"line":25,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":185,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":328}}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":329},"contentChanges":[{"range":{"start":{"line":25,"character":24},"end":{"line":25,"character":25}},"rangeLength":1,"text":""}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":330},"contentChanges":[{"range":{"start":{"line":25,"character":24},"end":{"line":25,"character":24}},"rangeLength":0,"text":";"}]}}Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":331},"contentChanges":[{"range":{"start":{"line":25,"character":25},"end":{"line":25,"character":25}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":331}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":332},"contentChanges":[{"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":2}},"rangeLength":0,"text":"S"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":333},"contentChanges":[{"range":{"start":{"line":26,"character":3},"end":{"line":26,"character":3}},"rangeLength":0,"text":"e"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":334},"contentChanges":[{"range":{"start":{"line":26,"character":4},"end":{"line":26,"character":4}},"rangeLength":0,"text":"r"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":335},"contentChanges":[{"range":{"start":{"line":26,"character":5},"end":{"line":26,"character":5}},"rangeLength":0,"text":"i"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":336},"contentChanges":[{"range":{"start":{"line":26,"character":6},"end":{"line":26,"character":6}},"rangeLength":0,"text":"a"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":337},"contentChanges":[{"range":{"start":{"line":26,"character":7},"end":{"line":26,"character":7}},"rangeLength":0,"text":"l"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":338},"contentChanges":[{"range":{"start":{"line":26,"character":8},"end":{"line":26,"character":8}},"rangeLength":0,"text":"."}]}}Content-Length: 319

{"jsonrpc":"2.0","id":186,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":26,"character":9},"context":{"triggerKind":2,"triggerCharacter":"."}}}
>>>
Content-Length: 230

{"id":186,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":187,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":26,"character":9},"end":{"line":26,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":187,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":338}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":339},"contentChanges":[{"range":{"start":{"line":26,"character":9},"end":{"line":26,"character":9}},"rangeLength":0,"text":"p"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":188,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":188,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":340},"contentChanges":[{"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":10}},"rangeLength":0,"text":"i"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":189,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":26,"character":11},"end":{"line":26,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":189,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":341},"contentChanges":[{"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":342},"contentChanges":[{"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":10}},"rangeLength":0,"text":"r"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":343},"contentChanges":[{"range":{"start":{"line":26,"character":11},"end":{"line":26,"character":11}},"rangeLength":0,"text":"i"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":344},"contentChanges":[{"range":{"start":{"line":26,"character":12},"end":{"line":26,"character":12}},"rangeLength":0,"text":"n"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":345},"contentChanges":[{"range":{"start":{"line":26,"character":13},"end":{"line":26,"character":13}},"rangeLength":0,"text":"t"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":190,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":26,"character":14},"end":{"line":26,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":190,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":346},"contentChanges":[{"range":{"start":{"line":26,"character":14},"end":{"line":26,"character":14}},"rangeLength":0,"text":"l"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":191,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":26,"character":15},"end":{"line":26,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":191,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":347},"contentChanges":[{"range":{"start":{"line":26,"character":15},"end":{"line":26,"character":15}},"rangeLength":0,"text":"n"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":192,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":26,"character":16},"end":{"line":26,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":192,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 362

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":348},"contentChanges":[{"range":{"start":{"line":26,"character":16},"end":{"line":26,"character":16}},"rangeLength":0,"text":"()"}]}}Content-Length: 343

{"jsonrpc":"2.0","id":193,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":26,"character":17},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 230

{"id":193,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":26,"character":17},"end":{"line":26,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":194,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":348}}}Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":349},"contentChanges":[{"range":{"start":{"line":26,"character":17},"end":{"line":26,"character":17}},"rangeLength":0,"text":"\"\""}]}}Content-Length: 338

{"jsonrpc":"2.0","id":195,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":26,"character":18},"end":{"line":26,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":195,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":349}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":350},"contentChanges":[{"range":{"start":{"line":26,"character":18},"end":{"line":26,"character":18}},"rangeLength":0,"text":" "}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":351},"contentChanges":[{"range":{"start":{"line":26,"character":19},"end":{"line":26,"character":19}},"rangeLength":0,"text":"i"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":352},"contentChanges":[{"range":{"start":{"line":26,"character":20},"end":{"line":26,"character":20}},"rangeLength":0,"text":"n"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":196,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":26,"character":21},"end":{"line":26,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":196,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":352}}}Content-Length: 338

{"jsonrpc":"2.0","id":197,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":26,"character":23},"end":{"line":26,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":197,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 364

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":353},"contentChanges":[{"range":{"start":{"line":26,"character":23},"end":{"line":26,"character":23}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 466

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":354},"contentChanges":[{"range":{"start":{"line":27,"character":2},"end":{"line":27,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":355},"contentChanges":[{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":2}},"rangeLength":0,"text":"o"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":356},"contentChanges":[{"range":{"start":{"line":28,"character":3},"end":{"line":28,"character":3}},"rangeLength":0,"text":"f"}]}}Content-Length: 336

{"jsonrpc":"2.0","id":198,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":198,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":357},"contentChanges":[{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":4}},"rangeLength":0,"text":"()"}]}}Content-Length: 342

{"jsonrpc":"2.0","id":199,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":28,"character":5},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 230

{"id":199,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":200,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":28,"character":5},"end":{"line":28,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":200,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":357}}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":358},"contentChanges":[{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":6}},"rangeLength":2,"text":""}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":359},"contentChanges":[{"range":{"start":{"line":28,"character":3},"end":{"line":28,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":360},"contentChanges":[{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":360}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":361},"contentChanges":[{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":2}},"rangeLength":0,"text":"i"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":362},"contentChanges":[{"range":{"start":{"line":28,"character":3},"end":{"line":28,"character":3}},"rangeLength":0,"text":"f"}]}}Content-Length: 336

{"jsonrpc":"2.0","id":201,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":201,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":362}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":363},"contentChanges":[{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":4}},"rangeLength":0,"text":" "}]}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":364},"contentChanges":[{"range":{"start":{"line":28,"character":5},"end":{"line":28,"character":5}},"rangeLength":0,"text":"()"}]}}Content-Length: 342

{"jsonrpc":"2.0","id":202,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":28,"character":6},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 230

{"id":202,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":203,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":203,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":364}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":365},"contentChanges":[{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":6}},"rangeLength":0,"text":"d"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":366},"contentChanges":[{"range":{"start":{"line":28,"character":7},"end":{"line":28,"character":7}},"rangeLength":0,"text":"i"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":367},"contentChanges":[{"range":{"start":{"line":28,"character":8},"end":{"line":28,"character":8}},"rangeLength":0,"text":"s"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":368},"contentChanges":[{"range":{"start":{"line":28,"character":9},"end":{"line":28,"character":9}},"rangeLength":0,"text":"t"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":204,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":28,"character":10},"end":{"line":28,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":204,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":369},"contentChanges":[{"range":{"start":{"line":28,"character":10},"end":{"line":28,"character":10}},"rangeLength":0,"text":"a"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":370},"contentChanges":[{"range":{"start":{"line":28,"character":11},"end":{"line":28,"character":11}},"rangeLength":0,"text":"n"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":371},"contentChanges":[{"range":{"start":{"line":28,"character":12},"end":{"line":28,"character":12}},"rangeLength":0,"text":"c"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":372},"contentChanges":[{"range":{"start":{"line":28,"character":13},"end":{"line":28,"character":13}},"rangeLength":0,"text":"e"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":205,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":28,"character":14},"end":{"line":28,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":205,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":372}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":373},"contentChanges":[{"range":{"start":{"line":28,"character":14},"end":{"line":28,"character":14}},"rangeLength":0,"text":" "}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":374},"contentChanges":[{"range":{"start":{"line":28,"character":15},"end":{"line":28,"character":15}},"rangeLength":0,"text":"<"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":206,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":28,"character":16},"end":{"line":28,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":206,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":375},"contentChanges":[{"range":{"start":{"line":28,"character":16},"end":{"line":28,"character":16}},"rangeLength":0,"text":"="}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":376},"contentChanges":[{"range":{"start":{"line":28,"character":17},"end":{"line":28,"character":17}},"rangeLength":0,"text":" "}]}}Content-Length: 338

{"jsonrpc":"2.0","id":207,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":28,"character":18},"end":{"line":28,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":207,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":376}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":377},"contentChanges":[{"range":{"start":{"line":28,"character":18},"end":{"line":28,"character":18}},"rangeLength":0,"text":"1"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":378},"contentChanges":[{"range":{"start":{"line":28,"character":19},"end":{"line":28,"character":19}},"rangeLength":0,"text":"0"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":208,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":28,"character":20},"end":{"line":28,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":208,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":378}}}Content-Length: 264

{"jsonrpc":"2.0","id":209,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":14,"character":19}}}
>>>
Content-Length: 215

{"id":209,"result":{"contents":{"kind":"markdown","value":"### macro `INPUT`  \n\n---\n```cpp\n#define INPUT 0x0\n```"},"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":24}}},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":210,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":28,"character":21},"end":{"line":28,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":210,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":379},"contentChanges":[{"range":{"start":{"line":28,"character":21},"end":{"line":28,"character":21}},"rangeLength":0,"text":" "}]}}Content-Length: 362

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":380},"contentChanges":[{"range":{"start":{"line":28,"character":22},"end":{"line":28,"character":22}},"rangeLength":0,"text":"{}"}]}}Content-Length: 370

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":381},"contentChanges":[{"range":{"start":{"line":28,"character":23},"end":{"line":28,"character":23}},"rangeLength":0,"text":"\n    \n  "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":381}}}Content-Length: 264

{"jsonrpc":"2.0","id":211,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":28,"character":14}}}
>>>
Content-Length: 230

{"id":211,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 263

{"jsonrpc":"2.0","id":212,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":28,"character":8}}}
>>>
Content-Length: 230

{"id":212,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":382},"contentChanges":[{"range":{"start":{"line":29,"character":4},"end":{"line":29,"character":4}},"rangeLength":0,"text":" "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":382}}}Content-Length: 365

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":383},"contentChanges":[{"range":{"start":{"line":29,"character":5},"end":{"line":29,"character":5}},"rangeLength":0,"text":"\n     "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":383}}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":383}}}Content-Length: 275

{"jsonrpc":"2.0","id":213,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 40

{"id":213,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":384},"contentChanges":[{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":385},"contentChanges":[{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":4}},"rangeLength":2,"text":""}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":386},"contentChanges":[{"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":387},"contentChanges":[{"range":{"start":{"line":29,"character":5},"end":{"line":30,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":387}}}Content-Length: 365

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":388},"contentChanges":[{"range":{"start":{"line":29,"character":5},"end":{"line":29,"character":5}},"rangeLength":0,"text":"\n     "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":388}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":389},"contentChanges":[{"range":{"start":{"line":30,"character":5},"end":{"line":30,"character":5}},"rangeLength":0,"text":"a"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":390},"contentChanges":[{"range":{"start":{"line":30,"character":6},"end":{"line":30,"character":6}},"rangeLength":0,"text":"n"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":391},"contentChanges":[{"range":{"start":{"line":30,"character":7},"end":{"line":30,"character":7}},"rangeLength":0,"text":"a"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":392},"contentChanges":[{"range":{"start":{"line":30,"character":8},"end":{"line":30,"character":8}},"rangeLength":0,"text":"l"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":393},"contentChanges":[{"range":{"start":{"line":30,"character":9},"end":{"line":30,"character":9}},"rangeLength":0,"text":"o"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":394},"contentChanges":[{"range":{"start":{"line":30,"character":10},"end":{"line":30,"character":10}},"rangeLength":0,"text":"g"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":214,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":11},"end":{"line":30,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":214,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":394}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":395},"contentChanges":[{"range":{"start":{"line":30,"character":11},"end":{"line":30,"character":11}},"rangeLength":0,"text":"W"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":215,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":12},"end":{"line":30,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":215,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":396},"contentChanges":[{"range":{"start":{"line":30,"character":12},"end":{"line":30,"character":12}},"rangeLength":0,"text":"r"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":397},"contentChanges":[{"range":{"start":{"line":30,"character":13},"end":{"line":30,"character":13}},"rangeLength":0,"text":"i"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":398},"contentChanges":[{"range":{"start":{"line":30,"character":14},"end":{"line":30,"character":14}},"rangeLength":0,"text":"t"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":399},"contentChanges":[{"range":{"start":{"line":30,"character":15},"end":{"line":30,"character":15}},"rangeLength":0,"text":"e"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":216,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":216,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":399}}}Content-Length: 362

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":400},"contentChanges":[{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":16}},"rangeLength":0,"text":"()"}]}}Content-Length: 343

{"jsonrpc":"2.0","id":217,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":30,"character":17},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 230

{"id":217,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":401},"contentChanges":[{"range":{"start":{"line":30,"character":17},"end":{"line":30,"character":17}},"rangeLength":0,"text":"r"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":18},"end":{"line":30,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":218,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":401}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":402},"contentChanges":[{"range":{"start":{"line":30,"character":18},"end":{"line":30,"character":18}},"rangeLength":0,"text":"e"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":403},"contentChanges":[{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":19}},"rangeLength":0,"text":"d"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":219,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":20},"end":{"line":30,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":219,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":404},"contentChanges":[{"range":{"start":{"line":30,"character":20},"end":{"line":30,"character":20}},"rangeLength":0,"text":"P"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":220,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":220,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":405},"contentChanges":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":21}},"rangeLength":0,"text":"i"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":406},"contentChanges":[{"range":{"start":{"line":30,"character":22},"end":{"line":30,"character":22}},"rangeLength":0,"text":"n"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":221,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":23},"end":{"line":30,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":221,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":406}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":407},"contentChanges":[{"range":{"start":{"line":30,"character":23},"end":{"line":30,"character":23}},"rangeLength":0,"text":","}]}}Content-Length: 343

{"jsonrpc":"2.0","id":222,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":30,"character":24},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 230

{"id":222,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":408},"contentChanges":[{"range":{"start":{"line":30,"character":24},"end":{"line":30,"character":24}},"rangeLength":0,"text":" "}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":409},"contentChanges":[{"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":25}},"rangeLength":0,"text":"2"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":410},"contentChanges":[{"range":{"start":{"line":30,"character":26},"end":{"line":30,"character":26}},"rangeLength":0,"text":"5"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":411},"contentChanges":[{"range":{"start":{"line":30,"character":27},"end":{"line":30,"character":27}},"rangeLength":0,"text":"5"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":223,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":29},"end":{"line":30,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":223,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":411}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":412},"contentChanges":[{"range":{"start":{"line":30,"character":29},"end":{"line":30,"character":29}},"rangeLength":0,"text":"l"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":224,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":30},"end":{"line":30,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":224,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":413},"contentChanges":[{"range":{"start":{"line":30,"character":29},"end":{"line":30,"character":30}},"rangeLength":1,"text":""}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":414},"contentChanges":[{"range":{"start":{"line":30,"character":29},"end":{"line":30,"character":29}},"rangeLength":0,"text":";"}]}}Content-Length: 367

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":415},"contentChanges":[{"range":{"start":{"line":30,"character":30},"end":{"line":30,"character":30}},"rangeLength":0,"text":"\n     "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":415}}}Content-Length: 263

{"jsonrpc":"2.0","id":225,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":26,"character":9}}}
>>>
Content-Length: 230

{"id":225,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":226,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":26,"character":10}}}
>>>
Content-Length: 230

{"id":226,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":416},"contentChanges":[{"range":{"start":{"line":30,"character":30},"end":{"line":31,"character":5}},"rangeLength":6,"text":""}]}}Content-Length: 338

{"jsonrpc":"2.0","id":227,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":30},"end":{"line":30,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":227,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":416}}}Content-Length: 336

{"jsonrpc":"2.0","id":228,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":31,"character":3},"end":{"line":31,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":228,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":229,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":30,"character":12}}}
>>>
Content-Length: 230

{"id":229,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":230,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":230,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":231,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":231,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":232,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":12},"end":{"line":30,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":232,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":233,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":30,"character":16}}}
>>>
Content-Length: 230

{"id":233,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":234,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":5},"end":{"line":30,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":234,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":235,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":30,"character":12}}}
>>>
Content-Length: 230

{"id":235,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":236,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":30,"character":21}}}
>>>
Content-Length: 230

{"id":236,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":237,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":5},"end":{"line":30,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":237,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 268

{"jsonrpc":"2.0","id":238,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":30,"character":6}}}
>>>
Content-Length: 230

{"id":238,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":239,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":30,"character":26}}}
>>>
Content-Length: 230

{"id":239,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":240,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":30},"end":{"line":30,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":240,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 367

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":417},"contentChanges":[{"range":{"start":{"line":30,"character":30},"end":{"line":30,"character":30}},"rangeLength":0,"text":"\n     "}]}}Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":418},"contentChanges":[{"range":{"start":{"line":31,"character":5},"end":{"line":31,"character":5}},"rangeLength":0,"text":"analogWrite(redPin, 255);"}]}}Content-Length: 367

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":419},"contentChanges":[{"range":{"start":{"line":31,"character":30},"end":{"line":31,"character":30}},"rangeLength":0,"text":"\n     "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":419}}}Content-Length: 269

{"jsonrpc":"2.0","id":241,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":22,"character":45}}}
>>>
Content-Length: 38

{"id":241,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":242,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":22,"character":45}}}
>>>
Content-Length: 40

{"id":242,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":420},"contentChanges":[{"range":{"start":{"line":32,"character":5},"end":{"line":32,"character":5}},"rangeLength":0,"text":"analogWrite(redPin, 255);"}]}}Content-Length: 269

{"jsonrpc":"2.0","id":243,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":32,"character":17}}}
>>>
Content-Length: 230

{"id":243,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":244,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":32,"character":30},"end":{"line":32,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":244,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":245,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":32,"character":17}}}
>>>
Content-Length: 230

{"id":245,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":420}}}Content-Length: 276

{"jsonrpc":"2.0","id":246,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":31,"character":27}}}
>>>
Content-Length: 230

{"id":246,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":247,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":247,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":248,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":31,"character":26}}}
>>>
Content-Length: 230

{"id":248,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":421},"contentChanges":[{"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":28}},"rangeLength":3,"text":"5"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":422},"contentChanges":[{"range":{"start":{"line":31,"character":26},"end":{"line":31,"character":26}},"rangeLength":0,"text":"0"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":249,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":31,"character":27},"end":{"line":31,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":249,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":250,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":32,"character":27}}}
>>>
Content-Length: 230

{"id":250,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":422}}}Content-Length: 338

{"jsonrpc":"2.0","id":251,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":32,"character":27},"end":{"line":32,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":251,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":252,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":32,"character":28},"end":{"line":32,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":252,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":423},"contentChanges":[{"range":{"start":{"line":32,"character":27},"end":{"line":32,"character":28}},"rangeLength":1,"text":""}]}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":424},"contentChanges":[{"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":27}},"rangeLength":1,"text":""}]}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":425},"contentChanges":[{"range":{"start":{"line":32,"character":25},"end":{"line":32,"character":26}},"rangeLength":1,"text":""}]}}Content-Length: 338

{"jsonrpc":"2.0","id":253,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":32,"character":25},"end":{"line":32,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":253,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":425}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":426},"contentChanges":[{"range":{"start":{"line":32,"character":25},"end":{"line":32,"character":25}},"rangeLength":0,"text":"0"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":254,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":254,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":426}}}Content-Length: 264

{"jsonrpc":"2.0","id":255,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":32,"character":25}}}
>>>
Content-Length: 230

{"id":255,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":256,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":31,"character":25}}}
>>>
Content-Length: 230

{"id":256,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":257,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":257,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":258,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":31,"character":25}}}
>>>
Content-Length: 230

{"id":258,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":427},"contentChanges":[{"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":27}},"rangeLength":2,"text":"0"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":259,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":31,"character":26},"end":{"line":31,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":259,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":427}}}Content-Length: 336

{"jsonrpc":"2.0","id":260,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":260,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":428},"contentChanges":[{"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"rangeLength":0,"text":" "}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":429},"contentChanges":[{"range":{"start":{"line":33,"character":4},"end":{"line":33,"character":4}},"rangeLength":0,"text":"e"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":430},"contentChanges":[{"range":{"start":{"line":33,"character":5},"end":{"line":33,"character":5}},"rangeLength":0,"text":"l"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":431},"contentChanges":[{"range":{"start":{"line":33,"character":6},"end":{"line":33,"character":6}},"rangeLength":0,"text":"s"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":432},"contentChanges":[{"range":{"start":{"line":33,"character":7},"end":{"line":33,"character":7}},"rangeLength":0,"text":"e"}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":433},"contentChanges":[{"range":{"start":{"line":33,"character":8},"end":{"line":33,"character":8}},"rangeLength":0,"text":" "}]}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":434},"contentChanges":[{"range":{"start":{"line":33,"character":9},"end":{"line":33,"character":9}},"rangeLength":0,"text":"i"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":435},"contentChanges":[{"range":{"start":{"line":33,"character":10},"end":{"line":33,"character":10}},"rangeLength":0,"text":"f"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":261,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":11},"end":{"line":33,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":261,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":435}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":436},"contentChanges":[{"range":{"start":{"line":33,"character":11},"end":{"line":33,"character":11}},"rangeLength":0,"text":" "}]}}Content-Length: 362

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":437},"contentChanges":[{"range":{"start":{"line":33,"character":12},"end":{"line":33,"character":12}},"rangeLength":0,"text":"()"}]}}Content-Length: 343

{"jsonrpc":"2.0","id":262,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":33,"character":13},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 230

{"id":262,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":263,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":13},"end":{"line":33,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":263,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":437}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":438},"contentChanges":[{"range":{"start":{"line":33,"character":13},"end":{"line":33,"character":13}},"rangeLength":0,"text":"d"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":439},"contentChanges":[{"range":{"start":{"line":33,"character":14},"end":{"line":33,"character":14}},"rangeLength":0,"text":"i"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":440},"contentChanges":[{"range":{"start":{"line":33,"character":15},"end":{"line":33,"character":15}},"rangeLength":0,"text":"s"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":441},"contentChanges":[{"range":{"start":{"line":33,"character":16},"end":{"line":33,"character":16}},"rangeLength":0,"text":"t"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":264,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":17},"end":{"line":33,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":264,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":442},"contentChanges":[{"range":{"start":{"line":33,"character":17},"end":{"line":33,"character":17}},"rangeLength":0,"text":"a"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":443},"contentChanges":[{"range":{"start":{"line":33,"character":18},"end":{"line":33,"character":18}},"rangeLength":0,"text":"n"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":444},"contentChanges":[{"range":{"start":{"line":33,"character":19},"end":{"line":33,"character":19}},"rangeLength":0,"text":"c"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":445},"contentChanges":[{"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":20}},"rangeLength":0,"text":"e"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":265,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":21},"end":{"line":33,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":265,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":445}}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":446},"contentChanges":[{"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":21}},"rangeLength":1,"text":""}]}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":447},"contentChanges":[{"range":{"start":{"line":33,"character":19},"end":{"line":33,"character":20}},"rangeLength":1,"text":""}]}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":448},"contentChanges":[{"range":{"start":{"line":33,"character":18},"end":{"line":33,"character":19}},"rangeLength":1,"text":""}]}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":449},"contentChanges":[{"range":{"start":{"line":33,"character":17},"end":{"line":33,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":450},"contentChanges":[{"range":{"start":{"line":33,"character":16},"end":{"line":33,"character":17}},"rangeLength":1,"text":""}]}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":451},"contentChanges":[{"range":{"start":{"line":33,"character":15},"end":{"line":33,"character":16}},"rangeLength":1,"text":""}]}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":452},"contentChanges":[{"range":{"start":{"line":33,"character":14},"end":{"line":33,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":453},"contentChanges":[{"range":{"start":{"line":33,"character":13},"end":{"line":33,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 338

{"jsonrpc":"2.0","id":266,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":13},"end":{"line":33,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":266,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":453}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":454},"contentChanges":[{"range":{"start":{"line":33,"character":13},"end":{"line":33,"character":13}},"rangeLength":0,"text":"1"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":455},"contentChanges":[{"range":{"start":{"line":33,"character":14},"end":{"line":33,"character":14}},"rangeLength":0,"text":"-"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":267,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":15},"end":{"line":33,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":267,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":455}}}Content-Length: 360

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":456},"contentChanges":[{"range":{"start":{"line":33,"character":14},"end":{"line":33,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":457},"contentChanges":[{"range":{"start":{"line":33,"character":14},"end":{"line":33,"character":14}},"rangeLength":0,"text":"0"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":268,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":15},"end":{"line":33,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":268,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":457}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":458},"contentChanges":[{"range":{"start":{"line":33,"character":15},"end":{"line":33,"character":15}},"rangeLength":0,"text":" "}]}}Content-Length: 338

{"jsonrpc":"2.0","id":269,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":16},"end":{"line":33,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":269,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":459},"contentChanges":[{"range":{"start":{"line":33,"character":16},"end":{"line":33,"character":16}},"rangeLength":0,"text":"<"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":270,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":17},"end":{"line":33,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":270,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":460},"contentChanges":[{"range":{"start":{"line":33,"character":17},"end":{"line":33,"character":17}},"rangeLength":0,"text":" "}]}}Content-Length: 338

{"jsonrpc":"2.0","id":271,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":18},"end":{"line":33,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":271,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":460}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":461},"contentChanges":[{"range":{"start":{"line":33,"character":18},"end":{"line":33,"character":18}},"rangeLength":0,"text":"d"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":462},"contentChanges":[{"range":{"start":{"line":33,"character":19},"end":{"line":33,"character":19}},"rangeLength":0,"text":"i"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":463},"contentChanges":[{"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":20}},"rangeLength":0,"text":"s"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":464},"contentChanges":[{"range":{"start":{"line":33,"character":21},"end":{"line":33,"character":21}},"rangeLength":0,"text":"t"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":465},"contentChanges":[{"range":{"start":{"line":33,"character":22},"end":{"line":33,"character":22}},"rangeLength":0,"text":"a"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":466},"contentChanges":[{"range":{"start":{"line":33,"character":23},"end":{"line":33,"character":23}},"rangeLength":0,"text":"n"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":467},"contentChanges":[{"range":{"start":{"line":33,"character":24},"end":{"line":33,"character":24}},"rangeLength":0,"text":"c"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":468},"contentChanges":[{"range":{"start":{"line":33,"character":25},"end":{"line":33,"character":25}},"rangeLength":0,"text":"e"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":272,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":26},"end":{"line":33,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":272,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":468}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":469},"contentChanges":[{"range":{"start":{"line":33,"character":26},"end":{"line":33,"character":26}},"rangeLength":0,"text":" "}]}}Content-Length: 338

{"jsonrpc":"2.0","id":273,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":27},"end":{"line":33,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":273,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":469}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":470},"contentChanges":[{"range":{"start":{"line":33,"character":27},"end":{"line":33,"character":27}},"rangeLength":0,"text":"&"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":274,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":28},"end":{"line":33,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":274,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":470}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":471},"contentChanges":[{"range":{"start":{"line":33,"character":28},"end":{"line":33,"character":28}},"rangeLength":0,"text":"&"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":275,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":29},"end":{"line":33,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":275,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":471}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":472},"contentChanges":[{"range":{"start":{"line":33,"character":29},"end":{"line":33,"character":29}},"rangeLength":0,"text":" "}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":473},"contentChanges":[{"range":{"start":{"line":33,"character":30},"end":{"line":33,"character":30}},"rangeLength":0,"text":"d"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":474},"contentChanges":[{"range":{"start":{"line":33,"character":31},"end":{"line":33,"character":31}},"rangeLength":0,"text":"i"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":475},"contentChanges":[{"range":{"start":{"line":33,"character":32},"end":{"line":33,"character":32}},"rangeLength":0,"text":"s"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":476},"contentChanges":[{"range":{"start":{"line":33,"character":33},"end":{"line":33,"character":33}},"rangeLength":0,"text":"t"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":276,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":34},"end":{"line":33,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":276,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":477},"contentChanges":[{"range":{"start":{"line":33,"character":34},"end":{"line":33,"character":34}},"rangeLength":0,"text":"a"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":478},"contentChanges":[{"range":{"start":{"line":33,"character":35},"end":{"line":33,"character":35}},"rangeLength":0,"text":"n"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":479},"contentChanges":[{"range":{"start":{"line":33,"character":36},"end":{"line":33,"character":36}},"rangeLength":0,"text":"c"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":480},"contentChanges":[{"range":{"start":{"line":33,"character":37},"end":{"line":33,"character":37}},"rangeLength":0,"text":"e"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":277,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":38},"end":{"line":33,"character":38}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":277,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":480}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":481},"contentChanges":[{"range":{"start":{"line":33,"character":38},"end":{"line":33,"character":38}},"rangeLength":0,"text":" "}]}}Content-Length: 338

{"jsonrpc":"2.0","id":278,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":39},"end":{"line":33,"character":39}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":278,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":481}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":482},"contentChanges":[{"range":{"start":{"line":33,"character":39},"end":{"line":33,"character":39}},"rangeLength":0,"text":"<"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":483},"contentChanges":[{"range":{"start":{"line":33,"character":40},"end":{"line":33,"character":40}},"rangeLength":0,"text":" "}]}}Content-Length: 338

{"jsonrpc":"2.0","id":279,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":41},"end":{"line":33,"character":41}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":279,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":483}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":484},"contentChanges":[{"range":{"start":{"line":33,"character":41},"end":{"line":33,"character":41}},"rangeLength":0,"text":"2"}]}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":485},"contentChanges":[{"range":{"start":{"line":33,"character":42},"end":{"line":33,"character":42}},"rangeLength":0,"text":"0"}]}}Content-Length: 338

{"jsonrpc":"2.0","id":280,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":43},"end":{"line":33,"character":43}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":280,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":485}}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":485}}}Content-Length: 338

{"jsonrpc":"2.0","id":281,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":33,"character":44},"end":{"line":33,"character":44}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":281,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 362

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":486},"contentChanges":[{"range":{"start":{"line":33,"character":44},"end":{"line":33,"character":44}},"rangeLength":0,"text":"{}"}]}}Content-Length: 370

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":487},"contentChanges":[{"range":{"start":{"line":33,"character":45},"end":{"line":33,"character":45}},"rangeLength":0,"text":"\n    \n  "}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":487}}}Content-Length: 359

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":488},"contentChanges":[{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":4}},"rangeLength":0,"text":"n"}]}}Content-Length: 336

{"jsonrpc":"2.0","id":282,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":34,"character":5},"end":{"line":34,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":282,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":489},"contentChanges":[{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 358

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":490},"contentChanges":[{"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":4}},"rangeLength":2,"text":""}]}}Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":490}}}Content-Length: 264

{"jsonrpc":"2.0","id":283,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":32,"character":28}}}
>>>
Content-Length: 230

{"id":283,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 337

{"jsonrpc":"2.0","id":284,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":30,"character":5},"end":{"line":32,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":284,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 268

{"jsonrpc":"2.0","id":285,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":30,"character":5}}}
>>>
Content-Length: 230

{"id":285,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 443

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":491},"contentChanges":[{"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":2}},"rangeLength":0,"text":"analogWrite(redPin, 255);\n     analogWrite(redPin, 0);\n     analogWrite(redPin, 0);"}]}}Content-Length: 269

{"jsonrpc":"2.0","id":286,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":35,"character":14}}}
>>>
Content-Length: 230

{"id":286,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":287,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":35,"character":17}}}
>>>
Content-Length: 230

{"id":287,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":288,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":36,"character":28},"end":{"line":36,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":288,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":491}}}Content-Length: 264

{"jsonrpc":"2.0","id":289,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":35,"character":24}}}
>>>
Content-Length: 230

{"id":289,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":290,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 40

{"id":290,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":291,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":35,"character":23}}}
>>>
Content-Length: 230

{"id":291,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":292,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":35,"character":24}}}
>>>
Content-Length: 230

{"id":292,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 338

{"jsonrpc":"2.0","id":293,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"range":{"start":{"line":35,"character":28},"end":{"line":35,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":293,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":294,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":35,"character":26}}}
>>>
Content-Length: 230

{"id":294,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":295,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":35,"character":16}}}
>>>
Content-Length: 230

{"id":295,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 268

{"jsonrpc":"2.0","id":296,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":34,"character":8}}}
>>>
Content-Length: 230

{"id":296,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 268

{"jsonrpc":"2.0","id":297,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino"},"position":{"line":34,"character":5}}}
>>>
Content-Length: 230

{"id":297,"error":{"code":0,"message":"Document is not available: file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/.arduinoIDE-unsaved2021425-77249-11qvndu.vval/sketch_may25a/sketch_may25a.ino","version":491}}}






Started logging.

<<<
Content-Length: 3069

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":79719,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"/Users/lalit/Desktop/Coding/Arduino/DistanceSensor","rootUri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","name":"DistanceSensor"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1012

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","languageId":"cpp","version":1,"text":"const int trigPin = 11;\nconst int echoPin = 12;\n\nconst int redPin = 3;\nconst int greenPin = 5;\nconst int bluePin = 6;\n\nfloat distance = 0;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(9600);\n\n  pinMode(trigPin, OUTPUT);\n  pinMode(echoPin, INPUT);\n\n  pinMode(redPin, OUTPUT);\n   pinMode(greenPin, OUTPUT);\n    pinMode(bluePin, OUTPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  distance = getDistance();\n\n  Serial.print(distance);\n  Serial.println(\" in\")\n\n  if (distance <= 10) {\n     \n     analogWrite(redPin, 255);\n     analogWrite(redPin, 0);\n     analogWrite(redPin, 0);\n  } else if (10 < distance && distance < 20){\n  analogWrite(redPin, 255);\n     analogWrite(redPin, 0);\n     analogWrite(redPin, 0);\n  }\n}\n"}}}Content-Length: 275

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 565

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":4}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/27","percentage":3.7037037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/27","percentage":7.407407407407407,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/27","percentage":7.407407407407407,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":23}}}
>>>
Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/27","percentage":11.11111111111111,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/27","percentage":11.11111111111111,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/27","percentage":14.814814814814815,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/27","percentage":18.51851851851852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/27","percentage":22.22222222222222,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/27","percentage":22.22222222222222,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/27","percentage":25.925925925925927,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/27","percentage":25.925925925925927,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/27","percentage":29.62962962962963,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/27","percentage":29.62962962962963,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/27","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/27","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/27","percentage":37.03703703703704,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/27","percentage":40.74074074074074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/27","percentage":40.74074074074074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/27","percentage":44.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":28},"end":{"line":35,"character":28}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 205

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":28}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}
>>>
Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":4,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":1}}}
>>>
Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/27","percentage":48.148148148148145,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":29}}}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/27","percentage":51.851851851851855,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/27","percentage":51.851851851851855,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/27","percentage":55.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/27","percentage":55.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/27","percentage":59.25925925925926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/27","percentage":59.25925925925926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/27","percentage":62.96296296296296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/27","percentage":62.96296296296296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/27","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/27","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/27","percentage":70.37037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/27","percentage":70.37037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/27","percentage":74.07407407407408,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/27","percentage":77.77777777777777,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/27","percentage":81.48148148148148,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/27","percentage":85.18518518518519,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/27","percentage":88.88888888888889,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":6,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/27","percentage":92.5925925925926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 1199

{"id":6,"result":[{"range":{"start":{"line":16,"character":26},"end":{"line":17,"character":3}},"newText":"\n  "},{"range":{"start":{"line":17,"character":29},"end":{"line":18,"character":4}},"newText":"\n  "},{"range":{"start":{"line":26,"character":23},"end":{"line":28,"character":2}},"newText":"\n\n    "},{"range":{"start":{"line":28,"character":23},"end":{"line":30,"character":5}},"newText":"\n\n    "},{"range":{"start":{"line":30,"character":30},"end":{"line":31,"character":5}},"newText":"\n    "},{"range":{"start":{"line":31,"character":28},"end":{"line":32,"character":5}},"newText":"\n    "},{"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":4}},"newText":"\n  "},{"range":{"start":{"line":33,"character":44},"end":{"line":33,"character":44}},"newText":" "},{"range":{"start":{"line":33,"character":45},"end":{"line":34,"character":2}},"newText":"\n    "},{"range":{"start":{"line":34,"character":27},"end":{"line":35,"character":5}},"newText":"\n    "},{"range":{"start":{"line":35,"character":28},"end":{"line":36,"character":5}},"newText":"\n    "},{"range":{"start":{"line":38,"character":1},"end":{"line":40,"character":0}},"newText":"\n"}],"jsonrpc":"2.0"}
<<<
Content-Length: 1453

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":2},"contentChanges":[{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":5}},"rangeLength":1,"text":""},{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":5}},"rangeLength":1,"text":""},{"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":2}},"rangeLength":0,"text":"  "},{"range":{"start":{"line":33,"character":44},"end":{"line":33,"character":44}},"rangeLength":0,"text":" "},{"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"rangeLength":0,"text":"\n "},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":5}},"rangeLength":1,"text":""},{"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":5}},"rangeLength":1,"text":""},{"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":1}},"rangeLength":1,"text":""},{"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":5}},"rangeLength":5,"text":""},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":2}},"rangeLength":0,"text":"  "},{"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":4}},"rangeLength":2,"text":""},{"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":3}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/27","percentage":96.29629629629629,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 790

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":6}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":6}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Different indentation for 'if' and corresponding 'else'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":36,"character":27},"end":{"line":36,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":7,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":2}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":2}}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":32,"character":27},"end":{"line":32,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":8,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":9,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":21}}}
>>>
Content-Length: 197

{"id":9,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":2}}}Content-Length: 205

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":28,"character":4}}}
>>>
Content-Length: 39

{"id":10,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 497

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":6}},"message":"Expected ';' after expression (fix available)","severity":1,"code":"expected_semi_after_expr","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 189

{"id":11,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":23},"end":{"line":26,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":12,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":3},"contentChanges":[{"range":{"start":{"line":26,"character":23},"end":{"line":26,"character":23}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 590

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":6}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Different indentation for 'if' and corresponding 'else'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":24},"end":{"line":26,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":13,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":3}}}Content-Length: 211

{"jsonrpc":"2.0","id":14,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":30,"character":27}}}
>>>
Content-Length: 229

{"id":14,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":3}}}Content-Length: 211

{"jsonrpc":"2.0","id":15,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":16}}}
>>>
Content-Length: 199

{"id":15,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":16,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":9}}}
>>>
Content-Length: 229

{"id":16,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":17,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":8}}}
>>>
Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":3}}}
>>>
Content-Length: 39

{"id":18,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":2}}}
>>>
Content-Length: 37

{"id":19,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 502

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":6}},"message":"Different indentation for 'if' and corresponding 'else'","severity":2,"code":"readability-misleading-indentation","source":"clang-tidy"}]}}}
>>>
Content-Length: 37

{"id":20,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":4},"contentChanges":[{"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":2}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 590

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":4}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Different indentation for 'if' and corresponding 'else'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":5},"contentChanges":[{"range":{"start":{"line":33,"character":3},"end":{"line":34,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":21,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":5}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":6},"contentChanges":[{"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":33,"character":4},"end":{"line":33,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":22,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":6}}}Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":6}}}Content-Length: 217

{"jsonrpc":"2.0","id":23,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 227

{"id":23,"result":[{"range":{"start":{"line":26,"character":24},"end":{"line":28,"character":4}},"newText":"\n\n  "},{"range":{"start":{"line":38,"character":1},"end":{"line":40,"character":0}},"newText":"\n"}],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7},"contentChanges":[{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":4}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":33,"character":4},"end":{"line":33,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":24,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7}}}Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7}}}Content-Length: 280

{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":34,"character":29},"end":{"line":34,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":25,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":27},"end":{"line":35,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":26,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":36,"character":27},"end":{"line":36,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":27,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":1},"end":{"line":38,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":28,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":29,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":8},"contentChanges":[{"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":8}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":9},"contentChanges":[{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":4}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 546

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'e'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 458

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":5}},"message":"Use of undeclared identifier 'e'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":10},"contentChanges":[{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":5}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 547

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'el'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":11},"contentChanges":[{"range":{"start":{"line":37,"character":6},"end":{"line":37,"character":6}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 548

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'els'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":12},"contentChanges":[{"range":{"start":{"line":37,"character":7},"end":{"line":37,"character":7}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 532

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":13},"contentChanges":[{"range":{"start":{"line":37,"character":8},"end":{"line":37,"character":8}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 532

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":14},"contentChanges":[{"range":{"start":{"line":37,"character":9},"end":{"line":37,"character":9}},"rangeLength":0,"text":"{}"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":15},"contentChanges":[{"range":{"start":{"line":37,"character":10},"end":{"line":37,"character":10}},"rangeLength":0,"text":"\n    \n  "}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":15}}}Content-Length: 205

{"jsonrpc":"2.0","id":31,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":6}}}
>>>
Content-Length: 309

{"id":31,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":32,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":4}}}
>>>
Content-Length: 309

{"id":32,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":4}}}
>>>
Content-Length: 564

{"id":33,"result":[{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":15}},"kind":1},{"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":15}},"kind":1},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":15}},"kind":1},{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":15}},"kind":1},{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":34,"character":4},"end":{"line":37,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":34,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 419

{"id":35,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server411883416/sketch/DistanceSensor.ino.cpp","selection":{"start":{"line":41,"character":4},"end":{"line":43,"character":27}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 383

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":16},"contentChanges":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":4}},"rangeLength":0,"text":"analogWrite(redPin, 255);\n    analogWrite(redPin, 0);\n    analogWrite(redPin, 0);"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":36,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":17}}}
>>>
Content-Length: 199

{"id":36,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":37,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":16}}}
>>>
Content-Length: 304

{"id":37,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":45,"character":16},"end":{"line":45,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":27},"end":{"line":40,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":38,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":39,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":15}}}
>>>
Content-Length: 229

{"id":39,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":16}}}Content-Length: 211

{"jsonrpc":"2.0","id":40,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":17}}}
>>>
Content-Length: 199

{"id":40,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":41,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":22}}}
>>>
Content-Length: 310

{"id":41,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":45,"character":16},"end":{"line":45,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":42,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":23}}}
>>>
Content-Length: 310

{"id":42,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":45,"character":22},"end":{"line":45,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":43,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":25}}}
>>>
Content-Length: 39

{"id":43,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":24}}}
>>>
Content-Length: 37

{"id":44,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":24},"end":{"line":39,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 398

{"id":45,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":39,"character":24},"end":{"line":39,"character":25}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":46,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":24}}}
>>>
Content-Length: 39

{"id":46,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":47,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":24}}}
>>>
Content-Length: 37

{"id":47,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":48,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":28},"end":{"line":38,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":49,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":27}}}
>>>
Content-Length: 828

{"id":50,"result":[{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":15}},"kind":1},{"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":15}},"kind":1},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":15}},"kind":1},{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":15}},"kind":1},{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":15}},"kind":1},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":15}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":51,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":17},"contentChanges":[{"range":{"start":{"line":38,"character":26},"end":{"line":38,"character":27}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":18},"contentChanges":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":26}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":19},"contentChanges":[{"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":25}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 536

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":25}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 450

{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":25}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":52,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":19}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":20},"contentChanges":[{"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":24}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":53,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":53,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":25}}}
>>>
Content-Length: 828

{"id":54,"result":[{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":15}},"kind":1},{"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":15}},"kind":1},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":15}},"kind":1},{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":15}},"kind":1},{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":15}},"kind":1},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":15}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":20}}}Content-Length: 280

{"jsonrpc":"2.0","id":55,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":25},"end":{"line":39,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":55,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21},"contentChanges":[{"range":{"start":{"line":39,"character":24},"end":{"line":39,"character":25}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 536

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":39,"character":24},"end":{"line":39,"character":25}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":22},"contentChanges":[{"range":{"start":{"line":39,"character":24},"end":{"line":39,"character":24}},"rangeLength":0,"text":"2"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":23},"contentChanges":[{"range":{"start":{"line":39,"character":25},"end":{"line":39,"character":25}},"rangeLength":0,"text":"5"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":24},"contentChanges":[{"range":{"start":{"line":39,"character":26},"end":{"line":39,"character":26}},"rangeLength":0,"text":"5"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":27},"end":{"line":39,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":56,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":24}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":24}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":24}}}Content-Length: 211

{"jsonrpc":"2.0","id":57,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":28,"character":11}}}
>>>
Content-Length: 198

{"id":57,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":58,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":14}}}
>>>
Content-Length: 224

{"id":58,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","range":{"start":{"line":108,"character":14},"end":{"line":108,"character":19}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5951

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","languageId":"cpp","version":1,"text":"/*\n Print.cpp - Base class that provides print() and println()\n Copyright (c) 2008 David A. Mellis.  All right reserved.\n \n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n \n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n \n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n \n Modified 23 November 2006 by David A. Mellis\n Modified 03 August 2015 by Chuck Todd\n */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include \"Arduino.h\"\n\n#include \"Print.h\"\n\n// Public Methods //////////////////////////////////////////////////////////////\n\n/* default implementation: may be overridden */\nsize_t Print::write(const uint8_t *buffer, size_t size)\n{\n  size_t n = 0;\n  while (size--) {\n    if (write(*buffer++)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const __FlashStringHelper *ifsh)\n{\n  PGM_P p = reinterpret_cast<PGM_P>(ifsh);\n  size_t n = 0;\n  while (1) {\n    unsigned char c = pgm_read_byte(p++);\n    if (c == 0) break;\n    if (write(c)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const String &s)\n{\n  return write(s.c_str(), s.length());\n}\n\nsize_t Print::print(const char str[])\n{\n  return write(str);\n}\n\nsize_t Print::print(char c)\n{\n  return write(c);\n}\n\nsize_t Print::print(unsigned char b, int base)\n{\n  return print((unsigned long) b, base);\n}\n\nsize_t Print::print(int n, int base)\n{\n  return print((long) n, base);\n}\n\nsize_t Print::print(unsigned int n, int base)\n{\n  return print((unsigned long) n, base);\n}\n\nsize_t Print::print(long n, int base)\n{\n  if (base == 0) {\n    return write(n);\n  } else if (base == 10) {\n    if (n < 0) {\n      int t = print('-');\n      n = -n;\n      return printNumber(n, 10) + t;\n    }\n    return printNumber(n, 10);\n  } else {\n    return printNumber(n, base);\n  }\n}\n\nsize_t Print::print(unsigned long n, int base)\n{\n  if (base == 0) return write(n);\n  else return printNumber(n, base);\n}\n\nsize_t Print::print(double n, int digits)\n{\n  return printFloat(n, digits);\n}\n\nsize_t Print::println(const __FlashStringHelper *ifsh)\n{\n  size_t n = print(ifsh);\n  n += println();\n  return n;\n}\n\nsize_t Print::print(const Printable& x)\n{\n  return x.printTo(*this);\n}\n\nsize_t Print::println(void)\n{\n  return write(\"\\r\\n\");\n}\n\nsize_t Print::println(const String &s)\n{\n  size_t n = print(s);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const char c[])\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(char c)\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned char b, int base)\n{\n  size_t n = print(b, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(double num, int digits)\n{\n  size_t n = print(num, digits);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const Printable& x)\n{\n  size_t n = print(x);\n  n += println();\n  return n;\n}\n\n// Private Methods /////////////////////////////////////////////////////////////\n\nsize_t Print::printNumber(unsigned long n, uint8_t base)\n{\n  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.\n  char *str = &buf[sizeof(buf) - 1];\n\n  *str = '\\0';\n\n  // prevent crash if called with base == 1\n  if (base < 2) base = 10;\n\n  do {\n    char c = n % base;\n    n /= base;\n\n    *--str = c < 10 ? c + '0' : c + 'A' - 10;\n  } while(n);\n\n  return write(str);\n}\n\nsize_t Print::printFloat(double number, uint8_t digits) \n{ \n  size_t n = 0;\n  \n  if (isnan(number)) return print(\"nan\");\n  if (isinf(number)) return print(\"inf\");\n  if (number > 4294967040.0) return print (\"ovf\");  // constant determined empirically\n  if (number <-4294967040.0) return print (\"ovf\");  // constant determined empirically\n  \n  // Handle negative numbers\n  if (number < 0.0)\n  {\n     n += print('-');\n     number = -number;\n  }\n\n  // Round correctly so that print(1.999, 2) prints as \"2.00\"\n  double rounding = 0.5;\n  for (uint8_t i=0; i<digits; ++i)\n    rounding /= 10.0;\n  \n  number += rounding;\n\n  // Extract the integer part of the number and print it\n  unsigned long int_part = (unsigned long)number;\n  double remainder = number - (double)int_part;\n  n += print(int_part);\n\n  // Print the decimal point, but only if there are digits beyond\n  if (digits > 0) {\n    n += print('.'); \n  }\n\n  // Extract digits from the remainder one at a time\n  while (digits-- > 0)\n  {\n    remainder *= 10.0;\n    unsigned int toPrint = (unsigned int)(remainder);\n    n += print(toPrint);\n    remainder -= toPrint; \n  } \n  \n  return n;\n}\n"}}}Content-Length: 184

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}}}
>>>
Content-Length: 194

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":59,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":15}}}
>>>
Content-Length: 37

{"id":59,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":60,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":15}}}
>>>
Content-Length: 39

{"id":60,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 492

{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 398

{"id":61,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":62,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":63,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":12}}}
>>>
Content-Length: 309

{"id":63,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":25},"contentChanges":[{"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":3}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 408

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":26},"contentChanges":[{"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":2}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":27},"contentChanges":[{"range":{"start":{"line":43,"character":2},"end":{"line":43,"character":2}},"rangeLength":0,"text":"d"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":28},"contentChanges":[{"range":{"start":{"line":43,"character":3},"end":{"line":43,"character":3}},"rangeLength":0,"text":"e"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29},"contentChanges":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":4}},"rangeLength":0,"text":"l"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":30},"contentChanges":[{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":5}},"rangeLength":0,"text":"a"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":31},"contentChanges":[{"range":{"start":{"line":43,"character":6},"end":{"line":43,"character":6}},"rangeLength":0,"text":"y"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":64,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":7},"end":{"line":43,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":64,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":31}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":32},"contentChanges":[{"range":{"start":{"line":43,"character":7},"end":{"line":43,"character":7}},"rangeLength":0,"text":"()"}]}}Content-Length: 284

{"jsonrpc":"2.0","id":65,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":43,"character":8},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 172

{"id":65,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":8},"end":{"line":43,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":66,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":32}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":33},"contentChanges":[{"range":{"start":{"line":43,"character":8},"end":{"line":43,"character":8}},"rangeLength":0,"text":"5"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":34},"contentChanges":[{"range":{"start":{"line":43,"character":9},"end":{"line":43,"character":9}},"rangeLength":0,"text":"0"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":67,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":34}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":35},"contentChanges":[{"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":10}},"rangeLength":0,"text":"å"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":11},"end":{"line":43,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":68,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":35}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":36},"contentChanges":[{"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 280

{"jsonrpc":"2.0","id":69,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":69,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":36}}}Content-Length: 278

{"jsonrpc":"2.0","id":70,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":1},"end":{"line":44,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":70,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":71,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":11},"end":{"line":43,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":71,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37},"contentChanges":[{"range":{"start":{"line":43,"character":11},"end":{"line":43,"character":11}},"rangeLength":0,"text":";"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":12},"end":{"line":43,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":72,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 211

{"jsonrpc":"2.0","id":73,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":16}}}
>>>
Content-Length: 37

{"id":73,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":74,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":15}}}
>>>
Content-Length: 39

{"id":74,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":75,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":16}}}
>>>
Content-Length: 37

{"id":75,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":76,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":16}}}
>>>
Content-Length: 37

{"id":76,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 472

{"jsonrpc":"2.0","id":77,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":16},"end":{"line":23,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":77,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":78,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":24}}}
>>>
Content-Length: 37

{"id":78,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 472

{"jsonrpc":"2.0","id":79,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":24},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":79,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":80,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":18}}}
>>>
Content-Length: 39

{"id":80,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":81,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":17}}}
>>>
Content-Length: 39

{"id":81,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 492

{"jsonrpc":"2.0","id":82,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 398

{"id":82,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":83,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":17,"character":22}}}
>>>
Content-Length: 221

{"id":83,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","range":{"start":{"line":43,"character":8},"end":{"line":43,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8117

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 184

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}}
>>>
Content-Length: 194

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":84,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":11,"character":12}}}
>>>
Content-Length: 230

{"id":84,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","range":{"start":{"line":120,"character":9},"end":{"line":120,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5658

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial.h - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#ifndef HardwareSerial_h\n#define HardwareSerial_h\n\n#include <inttypes.h>\n\n#include \"Stream.h\"\n\n// Define constants and variables for buffering incoming serial data.  We're\n// using a ring buffer (I think), in which head is the index of the location\n// to which to write the next incoming character and tail is the index of the\n// location from which to read.\n// NOTE: a \"power of 2\" buffer size is reccomended to dramatically\n//       optimize all the modulo operations for ring buffers.\n// WARNING: When buffer sizes are increased to > 256, the buffer index\n// variables are automatically increased in size, but the extra\n// atomicity guards needed for that are not implemented. This will\n// often work, but occasionally a race condition can occur that makes\n// Serial behave erratically. See https://github.com/arduino/Arduino/issues/2405\n#if !defined(SERIAL_TX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) < 1023)\n#define SERIAL_TX_BUFFER_SIZE 16\n#else\n#define SERIAL_TX_BUFFER_SIZE 64\n#endif\n#endif\n#if !defined(SERIAL_RX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) < 1023)\n#define SERIAL_RX_BUFFER_SIZE 16\n#else\n#define SERIAL_RX_BUFFER_SIZE 64\n#endif\n#endif\n#if (SERIAL_TX_BUFFER_SIZE>256)\ntypedef uint16_t tx_buffer_index_t;\n#else\ntypedef uint8_t tx_buffer_index_t;\n#endif\n#if  (SERIAL_RX_BUFFER_SIZE>256)\ntypedef uint16_t rx_buffer_index_t;\n#else\ntypedef uint8_t rx_buffer_index_t;\n#endif\n\n// Define config for Serial.begin(baud, config);\n#define SERIAL_5N1 0x00\n#define SERIAL_6N1 0x02\n#define SERIAL_7N1 0x04\n#define SERIAL_8N1 0x06\n#define SERIAL_5N2 0x08\n#define SERIAL_6N2 0x0A\n#define SERIAL_7N2 0x0C\n#define SERIAL_8N2 0x0E\n#define SERIAL_5E1 0x20\n#define SERIAL_6E1 0x22\n#define SERIAL_7E1 0x24\n#define SERIAL_8E1 0x26\n#define SERIAL_5E2 0x28\n#define SERIAL_6E2 0x2A\n#define SERIAL_7E2 0x2C\n#define SERIAL_8E2 0x2E\n#define SERIAL_5O1 0x30\n#define SERIAL_6O1 0x32\n#define SERIAL_7O1 0x34\n#define SERIAL_8O1 0x36\n#define SERIAL_5O2 0x38\n#define SERIAL_6O2 0x3A\n#define SERIAL_7O2 0x3C\n#define SERIAL_8O2 0x3E\n\nclass HardwareSerial : public Stream\n{\n  protected:\n    volatile uint8_t * const _ubrrh;\n    volatile uint8_t * const _ubrrl;\n    volatile uint8_t * const _ucsra;\n    volatile uint8_t * const _ucsrb;\n    volatile uint8_t * const _ucsrc;\n    volatile uint8_t * const _udr;\n    // Has any byte been written to the UART since begin()\n    bool _written;\n\n    volatile rx_buffer_index_t _rx_buffer_head;\n    volatile rx_buffer_index_t _rx_buffer_tail;\n    volatile tx_buffer_index_t _tx_buffer_head;\n    volatile tx_buffer_index_t _tx_buffer_tail;\n\n    // Don't put any members after these buffers, since only the first\n    // 32 bytes of this struct can be accessed quickly using the ldd\n    // instruction.\n    unsigned char _rx_buffer[SERIAL_RX_BUFFER_SIZE];\n    unsigned char _tx_buffer[SERIAL_TX_BUFFER_SIZE];\n\n  public:\n    inline HardwareSerial(\n      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,\n      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,\n      volatile uint8_t *ucsrc, volatile uint8_t *udr);\n    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }\n    void begin(unsigned long, uint8_t);\n    void end();\n    virtual int available(void);\n    virtual int peek(void);\n    virtual int read(void);\n    virtual int availableForWrite(void);\n    virtual void flush(void);\n    virtual size_t write(uint8_t);\n    inline size_t write(unsigned long n) { return write((uint8_t)n); }\n    inline size_t write(long n) { return write((uint8_t)n); }\n    inline size_t write(unsigned int n) { return write((uint8_t)n); }\n    inline size_t write(int n) { return write((uint8_t)n); }\n    using Print::write; // pull in write(str) and write(buf, size) from Print\n    operator bool() { return true; }\n\n    // Interrupt handlers - Not intended to be called externally\n    inline void _rx_complete_irq(void);\n    void _tx_udr_empty_irq(void);\n};\n\n#if defined(UBRRH) || defined(UBRR0H)\n  extern HardwareSerial Serial;\n  #define HAVE_HWSERIAL0\n#endif\n#if defined(UBRR1H)\n  extern HardwareSerial Serial1;\n  #define HAVE_HWSERIAL1\n#endif\n#if defined(UBRR2H)\n  extern HardwareSerial Serial2;\n  #define HAVE_HWSERIAL2\n#endif\n#if defined(UBRR3H)\n  extern HardwareSerial Serial3;\n  #define HAVE_HWSERIAL3\n#endif\n\nextern void serialEventRun(void) __attribute__((weak));\n\n#endif\n"}}}Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}}}
>>>
Content-Length: 201

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 209

{"jsonrpc":"2.0","id":85,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":5,"character":1}}}
>>>
Content-Length: 199

{"id":85,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 209

{"jsonrpc":"2.0","id":86,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":5,"character":1}}}
>>>
Content-Length: 199

{"id":86,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":87,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 39

{"id":87,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":88,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":0,"character":9}}}
>>>
Content-Length: 39

{"id":88,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":89,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","languageId":"cpp","version":1,"text":""}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":2},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":2}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":3},"contentChanges":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"rangeLength":0,"text":"f"}]}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":4},"contentChanges":[{"range":{"start":{"line":1,"character":1},"end":{"line":1,"character":1}},"rangeLength":0,"text":"l"}]}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":5},"contentChanges":[{"range":{"start":{"line":1,"character":2},"end":{"line":1,"character":2}},"rangeLength":0,"text":"o"}]}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":6},"contentChanges":[{"range":{"start":{"line":1,"character":3},"end":{"line":1,"character":3}},"rangeLength":0,"text":"a"}]}}Content-Length: 273

{"jsonrpc":"2.0","id":90,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":90,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":6}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":7},"contentChanges":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":4}},"rangeLength":0,"text":"t"}]}}Content-Length: 273

{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":1,"character":5},"end":{"line":1,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":91,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":8},"contentChanges":[{"range":{"start":{"line":1,"character":5},"end":{"line":1,"character":5}},"rangeLength":0,"text":" "}]}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":9},"contentChanges":[{"range":{"start":{"line":1,"character":6},"end":{"line":1,"character":6}},"rangeLength":0,"text":"g"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":10},"contentChanges":[{"range":{"start":{"line":1,"character":7},"end":{"line":1,"character":7}},"rangeLength":0,"text":"e"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":11},"contentChanges":[{"range":{"start":{"line":1,"character":8},"end":{"line":1,"character":8}},"rangeLength":0,"text":"t"}]}}Content-Length: 273

{"jsonrpc":"2.0","id":92,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":92,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":12},"contentChanges":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":9}},"rangeLength":0,"text":"D"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":13},"contentChanges":[{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":10}},"rangeLength":0,"text":"i"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":14},"contentChanges":[{"range":{"start":{"line":1,"character":11},"end":{"line":1,"character":11}},"rangeLength":0,"text":"s"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":15},"contentChanges":[{"range":{"start":{"line":1,"character":12},"end":{"line":1,"character":12}},"rangeLength":0,"text":"t"}]}}Content-Length: 275

{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":1,"character":13},"end":{"line":1,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":93,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":16},"contentChanges":[{"range":{"start":{"line":1,"character":13},"end":{"line":1,"character":13}},"rangeLength":0,"text":"n"}]}}Content-Length: 275

{"jsonrpc":"2.0","id":94,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":1,"character":14},"end":{"line":1,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":94,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":17},"contentChanges":[{"range":{"start":{"line":1,"character":13},"end":{"line":1,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":18},"contentChanges":[{"range":{"start":{"line":1,"character":13},"end":{"line":1,"character":13}},"rangeLength":0,"text":"a"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":19},"contentChanges":[{"range":{"start":{"line":1,"character":14},"end":{"line":1,"character":14}},"rangeLength":0,"text":"n"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":20},"contentChanges":[{"range":{"start":{"line":1,"character":15},"end":{"line":1,"character":15}},"rangeLength":0,"text":"c"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":21},"contentChanges":[{"range":{"start":{"line":1,"character":16},"end":{"line":1,"character":16}},"rangeLength":0,"text":"e"}]}}Content-Length: 275

{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":1,"character":17},"end":{"line":1,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":95,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":21}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":22},"contentChanges":[{"range":{"start":{"line":1,"character":17},"end":{"line":1,"character":17}},"rangeLength":0,"text":")"}]}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":23},"contentChanges":[{"range":{"start":{"line":1,"character":18},"end":{"line":1,"character":18}},"rangeLength":0,"text":"()"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":96,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"position":{"line":1,"character":19},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 169

{"id":96,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":1,"character":19},"end":{"line":1,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":97,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":24},"contentChanges":[{"range":{"start":{"line":1,"character":18},"end":{"line":1,"character":20}},"rangeLength":2,"text":""}]}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":25},"contentChanges":[{"range":{"start":{"line":1,"character":17},"end":{"line":1,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 275

{"jsonrpc":"2.0","id":98,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":1,"character":17},"end":{"line":1,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":98,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":25}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":26},"contentChanges":[{"range":{"start":{"line":1,"character":17},"end":{"line":1,"character":17}},"rangeLength":0,"text":"()"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":99,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"position":{"line":1,"character":18},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 169

{"id":99,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":100,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":1,"character":18},"end":{"line":1,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":100,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":26}}}Content-Length: 276

{"jsonrpc":"2.0","id":101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":1,"character":19},"end":{"line":1,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":101,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":27},"contentChanges":[{"range":{"start":{"line":1,"character":19},"end":{"line":1,"character":19}},"rangeLength":0,"text":"{}"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":28},"contentChanges":[{"range":{"start":{"line":1,"character":20},"end":{"line":1,"character":20}},"rangeLength":0,"text":"\n  \n"}]}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":28}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":29},"contentChanges":[{"range":{"start":{"line":2,"character":2},"end":{"line":2,"character":2}},"rangeLength":0,"text":"f"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":30},"contentChanges":[{"range":{"start":{"line":2,"character":3},"end":{"line":2,"character":3}},"rangeLength":0,"text":"l"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":31},"contentChanges":[{"range":{"start":{"line":2,"character":4},"end":{"line":2,"character":4}},"rangeLength":0,"text":"o"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":32},"contentChanges":[{"range":{"start":{"line":2,"character":5},"end":{"line":2,"character":5}},"rangeLength":0,"text":"a"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":33},"contentChanges":[{"range":{"start":{"line":2,"character":6},"end":{"line":2,"character":6}},"rangeLength":0,"text":"t"}]}}Content-Length: 274

{"jsonrpc":"2.0","id":102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":2,"character":7},"end":{"line":2,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":102,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":33}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":34},"contentChanges":[{"range":{"start":{"line":2,"character":7},"end":{"line":2,"character":7}},"rangeLength":0,"text":" "}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":35},"contentChanges":[{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":8}},"rangeLength":0,"text":"e"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":36},"contentChanges":[{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":9}},"rangeLength":0,"text":"c"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":37},"contentChanges":[{"range":{"start":{"line":2,"character":10},"end":{"line":2,"character":10}},"rangeLength":0,"text":"h"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":38},"contentChanges":[{"range":{"start":{"line":2,"character":11},"end":{"line":2,"character":11}},"rangeLength":0,"text":"o"}]}}Content-Length: 276

{"jsonrpc":"2.0","id":103,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":103,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":39},"contentChanges":[{"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":12}},"rangeLength":0,"text":"T"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":40},"contentChanges":[{"range":{"start":{"line":2,"character":13},"end":{"line":2,"character":13}},"rangeLength":0,"text":"i"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":41},"contentChanges":[{"range":{"start":{"line":2,"character":14},"end":{"line":2,"character":14}},"rangeLength":0,"text":"m"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":42},"contentChanges":[{"range":{"start":{"line":2,"character":15},"end":{"line":2,"character":15}},"rangeLength":0,"text":"e"}]}}Content-Length: 276

{"jsonrpc":"2.0","id":104,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":2,"character":16},"end":{"line":2,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":104,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":42}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":43},"contentChanges":[{"range":{"start":{"line":2,"character":16},"end":{"line":2,"character":16}},"rangeLength":0,"text":";"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":44},"contentChanges":[{"range":{"start":{"line":2,"character":17},"end":{"line":2,"character":17}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":44}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":45},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},"rangeLength":0,"text":"f"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":46},"contentChanges":[{"range":{"start":{"line":3,"character":3},"end":{"line":3,"character":3}},"rangeLength":0,"text":"l"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":47},"contentChanges":[{"range":{"start":{"line":3,"character":4},"end":{"line":3,"character":4}},"rangeLength":0,"text":"o"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":48},"contentChanges":[{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":5}},"rangeLength":0,"text":"a"}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":49},"contentChanges":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":6}},"rangeLength":0,"text":"t"}]}}Content-Length: 274

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":3,"character":7},"end":{"line":3,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":105,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":49}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":50},"contentChanges":[{"range":{"start":{"line":3,"character":7},"end":{"line":3,"character":7}},"rangeLength":0,"text":" "}]}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":51},"contentChanges":[{"range":{"start":{"line":3,"character":8},"end":{"line":3,"character":8}},"rangeLength":0,"text":"c"}]}}Content-Length: 274

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":106,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":52},"contentChanges":[{"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}},"rangeLength":0,"text":"a"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":53},"contentChanges":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":10}},"rangeLength":0,"text":"l"}]}}Content-Length: 276

{"jsonrpc":"2.0","id":107,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":3,"character":11},"end":{"line":3,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":107,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":53}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":54},"contentChanges":[{"range":{"start":{"line":3,"character":11},"end":{"line":3,"character":11}},"rangeLength":0,"text":"c"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":55},"contentChanges":[{"range":{"start":{"line":3,"character":12},"end":{"line":3,"character":12}},"rangeLength":0,"text":"u"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":56},"contentChanges":[{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":13}},"rangeLength":0,"text":"l"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":57},"contentChanges":[{"range":{"start":{"line":3,"character":14},"end":{"line":3,"character":14}},"rangeLength":0,"text":"a"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":58},"contentChanges":[{"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}},"rangeLength":0,"text":"t"}]}}Content-Length: 276

{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":3,"character":16},"end":{"line":3,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":108,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":58}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":59},"contentChanges":[{"range":{"start":{"line":3,"character":16},"end":{"line":3,"character":16}},"rangeLength":0,"text":"e"}]}}Content-Length: 276

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":109,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":60},"contentChanges":[{"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"rangeLength":0,"text":"T"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":61},"contentChanges":[{"range":{"start":{"line":3,"character":18},"end":{"line":3,"character":18}},"rangeLength":0,"text":"i"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":62},"contentChanges":[{"range":{"start":{"line":3,"character":19},"end":{"line":3,"character":19}},"rangeLength":0,"text":"m"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":63},"contentChanges":[{"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":20}},"rangeLength":0,"text":"e"}]}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":64},"contentChanges":[{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"rangeLength":0,"text":";"}]}}Content-Length: 276

{"jsonrpc":"2.0","id":110,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":3,"character":22},"end":{"line":3,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":110,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":64}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":64}}}Content-Length: 274

{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":4,"character":1},"end":{"line":4,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":111,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":64}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 279

{"jsonrpc":"2.0","id":112,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":9,"character":14},"end":{"line":9,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":112,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":113,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":17}}}
>>>
Content-Length: 38

{"id":113,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":64}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 207

{"jsonrpc":"2.0","id":114,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":17}}}
>>>
Content-Length: 40

{"id":114,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":115,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":18}}}
>>>
Content-Length: 38

{"id":115,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":116,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":18}}}
>>>
Content-Length: 40

{"id":116,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 493

{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 399

{"id":117,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":118,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":19}}}Content-Length: 212

{"jsonrpc":"2.0","id":119,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":19}}}
>>>
Content-Length: 38

{"id":118,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":119,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 473

{"jsonrpc":"2.0","id":120,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":19},"end":{"line":23,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":120,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":121,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":21}}}
>>>
Content-Length: 40

{"id":121,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 473

{"jsonrpc":"2.0","id":122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 399

{"id":122,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":64}}}Content-Length: 281

{"jsonrpc":"2.0","id":123,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":123,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":124,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":17}}}
>>>
Content-Length: 38

{"id":124,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 473

{"jsonrpc":"2.0","id":125,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 399

{"id":125,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":126,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":18,"character":22}}}
>>>
Content-Length: 217

{"id":126,"result":{"contents":{"kind":"markdown","value":"### macro `OUTPUT`  \n\n---\n```cpp\n#define OUTPUT 0x1\n```"},"range":{"start":{"line":25,"character":19},"end":{"line":25,"character":25}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":127,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":18,"character":23}}}
>>>
Content-Length: 222

{"id":127,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","range":{"start":{"line":43,"character":8},"end":{"line":43,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8117

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 184

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}}
>>>
Content-Length: 194

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":128,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":3,"character":15}}}
>>>
Content-Length: 200

{"id":128,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":129,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":1,"character":9}}}
>>>
Content-Length: 38

{"id":129,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":130,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"position":{"line":1,"character":13}}}
>>>
Content-Length: 170

{"id":130,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 208

{"jsonrpc":"2.0","id":131,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"position":{"line":1,"character":13}}}
>>>
Content-Length: 170

{"id":131,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 308

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":65},"contentChanges":[{"range":{"start":{"line":1,"character":6},"end":{"line":1,"character":17}},"rangeLength":11,"text":"getDistance"}]}}Content-Length: 276

{"jsonrpc":"2.0","id":132,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":1,"character":17},"end":{"line":1,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":132,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":65}}}Content-Length: 207

{"jsonrpc":"2.0","id":133,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"position":{"line":1,"character":2}}}
>>>
Content-Length: 170

{"id":133,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":134,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":30,"character":21}}}
>>>
Content-Length: 200

{"id":134,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":135,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":11,"character":13}}}
>>>
Content-Length: 231

{"id":135,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","range":{"start":{"line":120,"character":9},"end":{"line":120,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5658

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial.h - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#ifndef HardwareSerial_h\n#define HardwareSerial_h\n\n#include <inttypes.h>\n\n#include \"Stream.h\"\n\n// Define constants and variables for buffering incoming serial data.  We're\n// using a ring buffer (I think), in which head is the index of the location\n// to which to write the next incoming character and tail is the index of the\n// location from which to read.\n// NOTE: a \"power of 2\" buffer size is reccomended to dramatically\n//       optimize all the modulo operations for ring buffers.\n// WARNING: When buffer sizes are increased to > 256, the buffer index\n// variables are automatically increased in size, but the extra\n// atomicity guards needed for that are not implemented. This will\n// often work, but occasionally a race condition can occur that makes\n// Serial behave erratically. See https://github.com/arduino/Arduino/issues/2405\n#if !defined(SERIAL_TX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) < 1023)\n#define SERIAL_TX_BUFFER_SIZE 16\n#else\n#define SERIAL_TX_BUFFER_SIZE 64\n#endif\n#endif\n#if !defined(SERIAL_RX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) < 1023)\n#define SERIAL_RX_BUFFER_SIZE 16\n#else\n#define SERIAL_RX_BUFFER_SIZE 64\n#endif\n#endif\n#if (SERIAL_TX_BUFFER_SIZE>256)\ntypedef uint16_t tx_buffer_index_t;\n#else\ntypedef uint8_t tx_buffer_index_t;\n#endif\n#if  (SERIAL_RX_BUFFER_SIZE>256)\ntypedef uint16_t rx_buffer_index_t;\n#else\ntypedef uint8_t rx_buffer_index_t;\n#endif\n\n// Define config for Serial.begin(baud, config);\n#define SERIAL_5N1 0x00\n#define SERIAL_6N1 0x02\n#define SERIAL_7N1 0x04\n#define SERIAL_8N1 0x06\n#define SERIAL_5N2 0x08\n#define SERIAL_6N2 0x0A\n#define SERIAL_7N2 0x0C\n#define SERIAL_8N2 0x0E\n#define SERIAL_5E1 0x20\n#define SERIAL_6E1 0x22\n#define SERIAL_7E1 0x24\n#define SERIAL_8E1 0x26\n#define SERIAL_5E2 0x28\n#define SERIAL_6E2 0x2A\n#define SERIAL_7E2 0x2C\n#define SERIAL_8E2 0x2E\n#define SERIAL_5O1 0x30\n#define SERIAL_6O1 0x32\n#define SERIAL_7O1 0x34\n#define SERIAL_8O1 0x36\n#define SERIAL_5O2 0x38\n#define SERIAL_6O2 0x3A\n#define SERIAL_7O2 0x3C\n#define SERIAL_8O2 0x3E\n\nclass HardwareSerial : public Stream\n{\n  protected:\n    volatile uint8_t * const _ubrrh;\n    volatile uint8_t * const _ubrrl;\n    volatile uint8_t * const _ucsra;\n    volatile uint8_t * const _ucsrb;\n    volatile uint8_t * const _ucsrc;\n    volatile uint8_t * const _udr;\n    // Has any byte been written to the UART since begin()\n    bool _written;\n\n    volatile rx_buffer_index_t _rx_buffer_head;\n    volatile rx_buffer_index_t _rx_buffer_tail;\n    volatile tx_buffer_index_t _tx_buffer_head;\n    volatile tx_buffer_index_t _tx_buffer_tail;\n\n    // Don't put any members after these buffers, since only the first\n    // 32 bytes of this struct can be accessed quickly using the ldd\n    // instruction.\n    unsigned char _rx_buffer[SERIAL_RX_BUFFER_SIZE];\n    unsigned char _tx_buffer[SERIAL_TX_BUFFER_SIZE];\n\n  public:\n    inline HardwareSerial(\n      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,\n      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,\n      volatile uint8_t *ucsrc, volatile uint8_t *udr);\n    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }\n    void begin(unsigned long, uint8_t);\n    void end();\n    virtual int available(void);\n    virtual int peek(void);\n    virtual int read(void);\n    virtual int availableForWrite(void);\n    virtual void flush(void);\n    virtual size_t write(uint8_t);\n    inline size_t write(unsigned long n) { return write((uint8_t)n); }\n    inline size_t write(long n) { return write((uint8_t)n); }\n    inline size_t write(unsigned int n) { return write((uint8_t)n); }\n    inline size_t write(int n) { return write((uint8_t)n); }\n    using Print::write; // pull in write(str) and write(buf, size) from Print\n    operator bool() { return true; }\n\n    // Interrupt handlers - Not intended to be called externally\n    inline void _rx_complete_irq(void);\n    void _tx_udr_empty_irq(void);\n};\n\n#if defined(UBRRH) || defined(UBRR0H)\n  extern HardwareSerial Serial;\n  #define HAVE_HWSERIAL0\n#endif\n#if defined(UBRR1H)\n  extern HardwareSerial Serial1;\n  #define HAVE_HWSERIAL1\n#endif\n#if defined(UBRR2H)\n  extern HardwareSerial Serial2;\n  #define HAVE_HWSERIAL2\n#endif\n#if defined(UBRR3H)\n  extern HardwareSerial Serial3;\n  #define HAVE_HWSERIAL3\n#endif\n\nextern void serialEventRun(void) __attribute__((weak));\n\n#endif\n"}}}Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}}}
>>>
Content-Length: 201

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":136,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":0,"character":2}}}
>>>
Content-Length: 265

{"id":136,"result":{"contents":{"kind":"markdown","value":"### variable `trigPin`  \n\n---\nType: `const int`  \nValue = `11`  \n\n---\n```cpp\nconst int trigPin = 11\n```"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":5}}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":137,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":0,"character":1}}}
>>>
Content-Length: 265

{"id":137,"result":{"contents":{"kind":"markdown","value":"### variable `trigPin`  \n\n---\nType: `const int`  \nValue = `11`  \n\n---\n```cpp\nconst int trigPin = 11\n```"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":5}}},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":138,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":9,"character":14},"end":{"line":9,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":138,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":139,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":4,"character":22}}}
>>>
Content-Length: 38

{"id":139,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":140,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":1,"character":10}}}
>>>
Content-Length: 200

{"id":140,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":1,"character":10},"end":{"line":1,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":141,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":4,"character":1},"end":{"line":4,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":141,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":65}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":65}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":65}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":65}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":65}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 207

{"jsonrpc":"2.0","id":142,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":37}}}
>>>
Content-Length: 272

{"id":142,"result":{"contents":{"kind":"markdown","value":"### variable `distance`  \n\n---\nType: `float`  \nValue = `0.000000e+00`  \n\n---\n```cpp\nfloat distance = 0\n```"},"range":{"start":{"line":40,"character":30},"end":{"line":40,"character":38}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":143,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":37}}}
>>>
Content-Length: 199

{"id":143,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":144,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":36}}}
>>>
Content-Length: 199

{"id":144,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":145,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":11,"character":3}}}
>>>
Content-Length: 233

{"id":145,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp","range":{"start":{"line":69,"character":17},"end":{"line":69,"character":23}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 2931

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial0.cpp - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 23 November 2006 by David A. Mellis\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#include \"Arduino.h\"\n#include \"HardwareSerial.h\"\n#include \"HardwareSerial_private.h\"\n\n// Each HardwareSerial is defined in its own file, since the linker pulls\n// in the entire file when any element inside is used. --gc-sections can\n// additionally cause unused symbols to be dropped, but ISRs have the\n// \"used\" attribute so are never dropped and they keep the\n// HardwareSerial instance in as well. Putting each instance in its own\n// file prevents the linker from pulling in any unused instances in the\n// first place.\n\n#if defined(HAVE_HWSERIAL0)\n\n#if defined(USART_RX_vect)\n  ISR(USART_RX_vect)\n#elif defined(USART0_RX_vect)\n  ISR(USART0_RX_vect)\n#elif defined(USART_RXC_vect)\n  ISR(USART_RXC_vect) // ATmega8\n#else\n  #error \"Don't know what the Data Received vector is called for Serial\"\n#endif\n  {\n    Serial._rx_complete_irq();\n  }\n\n#if defined(UART0_UDRE_vect)\nISR(UART0_UDRE_vect)\n#elif defined(UART_UDRE_vect)\nISR(UART_UDRE_vect)\n#elif defined(USART0_UDRE_vect)\nISR(USART0_UDRE_vect)\n#elif defined(USART_UDRE_vect)\nISR(USART_UDRE_vect)\n#else\n  #error \"Don't know what the Data Register Empty vector is called for Serial\"\n#endif\n{\n  Serial._tx_udr_empty_irq();\n}\n\n#if defined(UBRRH) && defined(UBRRL)\n  HardwareSerial Serial(&UBRRH, &UBRRL, &UCSRA, &UCSRB, &UCSRC, &UDR);\n#else\n  HardwareSerial Serial(&UBRR0H, &UBRR0L, &UCSR0A, &UCSR0B, &UCSR0C, &UDR0);\n#endif\n\n// Function that can be weakly referenced by serialEventRun to prevent\n// pulling in this file if it's not otherwise used.\nbool Serial0_available() {\n  return Serial.available();\n}\n\n#endif // HAVE_HWSERIAL0\n"}}}Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}}}
>>>
Content-Length: 204

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":146,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":4,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":146,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":4,"character":1}},"rangeLength":64,"text":""}]}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":38},"contentChanges":[{"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 368

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":39},"contentChanges":[{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":0}},"rangeLength":0,"text":"\nfloat getDistance(){\n  float echoTime;\n  float calculateTime;\n}"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":147,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":50,"character":1},"end":{"line":50,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":147,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":39}}}Content-Length: 207

{"jsonrpc":"2.0","id":148,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":19}}}
>>>
Content-Length: 173

{"id":148,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":40},"contentChanges":[{"range":{"start":{"line":47,"character":19},"end":{"line":47,"character":19}},"rangeLength":0,"text":" "}]}}Content-Length: 281

{"jsonrpc":"2.0","id":149,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":20},"end":{"line":47,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":149,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":40}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":40}}}Content-Length: 279

{"jsonrpc":"2.0","id":150,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":1},"end":{"line":44,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":150,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":40}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":40}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":40}}}Content-Length: 212

{"jsonrpc":"2.0","id":151,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":24}}}
>>>
Content-Length: 38

{"id":151,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":152,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":27}}}
>>>
Content-Length: 38

{"id":152,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":153,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":18,"character":27},"end":{"line":18,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":153,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":154,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":7,"character":11}}}
>>>
Content-Length: 199

{"id":154,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":40}}}Content-Length: 212

{"jsonrpc":"2.0","id":155,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":17,"character":17}}}
>>>
Content-Length: 200

{"id":155,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":4,"character":10},"end":{"line":4,"character":18}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":156,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":19}}}
>>>
Content-Length: 40

{"id":156,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 493

{"jsonrpc":"2.0","id":157,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 399

{"id":157,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":158,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":27},"end":{"line":40,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":158,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":159,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":50,"character":1},"end":{"line":50,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":159,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":40}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":40}}}Content-Length: 281

{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":22},"end":{"line":49,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":160,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":161,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":17}}}
>>>
Content-Length: 40

{"id":161,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 493

{"jsonrpc":"2.0","id":162,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 399

{"id":162,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":163,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":21}}}
>>>
Content-Length: 173

{"id":163,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":164,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":21},"end":{"line":49,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":164,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":41},"contentChanges":[{"range":{"start":{"line":49,"character":20},"end":{"line":49,"character":21}},"rangeLength":1,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":42},"contentChanges":[{"range":{"start":{"line":49,"character":19},"end":{"line":49,"character":20}},"rangeLength":1,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":43},"contentChanges":[{"range":{"start":{"line":49,"character":18},"end":{"line":49,"character":19}},"rangeLength":1,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":44},"contentChanges":[{"range":{"start":{"line":49,"character":17},"end":{"line":49,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":45},"contentChanges":[{"range":{"start":{"line":49,"character":17},"end":{"line":49,"character":17}},"rangeLength":0,"text":"d"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":165,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":18},"end":{"line":49,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":165,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":45}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":46},"contentChanges":[{"range":{"start":{"line":49,"character":18},"end":{"line":49,"character":18}},"rangeLength":0,"text":"D"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":166,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":19},"end":{"line":49,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":166,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":47},"contentChanges":[{"range":{"start":{"line":49,"character":19},"end":{"line":49,"character":19}},"rangeLength":0,"text":"i"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":48},"contentChanges":[{"range":{"start":{"line":49,"character":20},"end":{"line":49,"character":20}},"rangeLength":0,"text":"t"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":167,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":21},"end":{"line":49,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":167,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":49},"contentChanges":[{"range":{"start":{"line":49,"character":20},"end":{"line":49,"character":21}},"rangeLength":1,"text":""}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":50},"contentChanges":[{"range":{"start":{"line":49,"character":20},"end":{"line":49,"character":20}},"rangeLength":0,"text":"s"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":51},"contentChanges":[{"range":{"start":{"line":49,"character":21},"end":{"line":49,"character":21}},"rangeLength":0,"text":"t"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":168,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":22},"end":{"line":49,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":168,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":51}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":52},"contentChanges":[{"range":{"start":{"line":49,"character":22},"end":{"line":49,"character":22}},"rangeLength":0,"text":"a"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":53},"contentChanges":[{"range":{"start":{"line":49,"character":23},"end":{"line":49,"character":23}},"rangeLength":0,"text":"n"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":54},"contentChanges":[{"range":{"start":{"line":49,"character":24},"end":{"line":49,"character":24}},"rangeLength":0,"text":"c"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":55},"contentChanges":[{"range":{"start":{"line":49,"character":25},"end":{"line":49,"character":25}},"rangeLength":0,"text":"e"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":169,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":27},"end":{"line":49,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":169,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":55}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":55}}}Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":56},"contentChanges":[{"range":{"start":{"line":49,"character":27},"end":{"line":49,"character":27}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 408

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":57},"contentChanges":[{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":57}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":58},"contentChanges":[{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":2}},"rangeLength":0,"text":"d"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":59},"contentChanges":[{"range":{"start":{"line":51,"character":3},"end":{"line":51,"character":3}},"rangeLength":0,"text":"i"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":60},"contentChanges":[{"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":4}},"rangeLength":0,"text":"g"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":61},"contentChanges":[{"range":{"start":{"line":51,"character":5},"end":{"line":51,"character":5}},"rangeLength":0,"text":"i"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":62},"contentChanges":[{"range":{"start":{"line":51,"character":6},"end":{"line":51,"character":6}},"rangeLength":0,"text":"t"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":170,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":7},"end":{"line":51,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":170,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":63},"contentChanges":[{"range":{"start":{"line":51,"character":7},"end":{"line":51,"character":7}},"rangeLength":0,"text":"a"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":64},"contentChanges":[{"range":{"start":{"line":51,"character":8},"end":{"line":51,"character":8}},"rangeLength":0,"text":"l"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":171,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":9},"end":{"line":51,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":171,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":64}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":65},"contentChanges":[{"range":{"start":{"line":51,"character":9},"end":{"line":51,"character":9}},"rangeLength":0,"text":"W"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":172,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":10},"end":{"line":51,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":172,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":66},"contentChanges":[{"range":{"start":{"line":51,"character":10},"end":{"line":51,"character":10}},"rangeLength":0,"text":"r"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":67},"contentChanges":[{"range":{"start":{"line":51,"character":11},"end":{"line":51,"character":11}},"rangeLength":0,"text":"i"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":173,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":12},"end":{"line":51,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":173,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":68},"contentChanges":[{"range":{"start":{"line":51,"character":12},"end":{"line":51,"character":12}},"rangeLength":0,"text":"t"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":69},"contentChanges":[{"range":{"start":{"line":51,"character":13},"end":{"line":51,"character":13}},"rangeLength":0,"text":"e"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":174,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":14},"end":{"line":51,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":174,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":69}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":70},"contentChanges":[{"range":{"start":{"line":51,"character":14},"end":{"line":51,"character":14}},"rangeLength":0,"text":"()"}]}}Content-Length: 286

{"jsonrpc":"2.0","id":175,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":15},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 173

{"id":175,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":176,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":15},"end":{"line":51,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":176,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":71},"contentChanges":[{"range":{"start":{"line":51,"character":15},"end":{"line":51,"character":15}},"rangeLength":0,"text":"t"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":72},"contentChanges":[{"range":{"start":{"line":51,"character":16},"end":{"line":51,"character":16}},"rangeLength":0,"text":"r"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":73},"contentChanges":[{"range":{"start":{"line":51,"character":17},"end":{"line":51,"character":17}},"rangeLength":0,"text":"i"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":74},"contentChanges":[{"range":{"start":{"line":51,"character":18},"end":{"line":51,"character":18}},"rangeLength":0,"text":"g"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":177,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":19},"end":{"line":51,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":177,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":74}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":75},"contentChanges":[{"range":{"start":{"line":51,"character":19},"end":{"line":51,"character":19}},"rangeLength":0,"text":"P"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":178,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":20},"end":{"line":51,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":178,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":75}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":76},"contentChanges":[{"range":{"start":{"line":51,"character":20},"end":{"line":51,"character":20}},"rangeLength":0,"text":"n"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":179,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":21},"end":{"line":51,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":179,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":76}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":77},"contentChanges":[{"range":{"start":{"line":51,"character":21},"end":{"line":51,"character":21}},"rangeLength":0,"text":","}]}}Content-Length: 286

{"jsonrpc":"2.0","id":180,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":22},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 173

{"id":180,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":78},"contentChanges":[{"range":{"start":{"line":51,"character":22},"end":{"line":51,"character":22}},"rangeLength":0,"text":" "}]}}Content-Length: 281

{"jsonrpc":"2.0","id":181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":23},"end":{"line":51,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":181,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":79},"contentChanges":[{"range":{"start":{"line":51,"character":23},"end":{"line":51,"character":23}},"rangeLength":0,"text":"H"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":182,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":24},"end":{"line":51,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":182,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":80},"contentChanges":[{"range":{"start":{"line":51,"character":24},"end":{"line":51,"character":24}},"rangeLength":0,"text":"I"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":183,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":25},"end":{"line":51,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":183,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":81},"contentChanges":[{"range":{"start":{"line":51,"character":25},"end":{"line":51,"character":25}},"rangeLength":0,"text":"G"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":82},"contentChanges":[{"range":{"start":{"line":51,"character":26},"end":{"line":51,"character":26}},"rangeLength":0,"text":"H"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":83},"contentChanges":[{"range":{"start":{"line":51,"character":27},"end":{"line":51,"character":27}},"rangeLength":0,"text":"T"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":184,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":28},"end":{"line":51,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":184,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":83}}}Content-Length: 281

{"jsonrpc":"2.0","id":185,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":29},"end":{"line":51,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":185,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":83}}}Content-Length: 219

{"jsonrpc":"2.0","id":186,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":28}}}
>>>
Content-Length: 173

{"id":186,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":187,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":28},"end":{"line":51,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":187,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":84},"contentChanges":[{"range":{"start":{"line":51,"character":28},"end":{"line":51,"character":28}},"rangeLength":0,"text":"\\"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":85},"contentChanges":[{"range":{"start":{"line":51,"character":28},"end":{"line":51,"character":29}},"rangeLength":1,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":188,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":28},"end":{"line":51,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":188,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":86},"contentChanges":[{"range":{"start":{"line":51,"character":27},"end":{"line":51,"character":28}},"rangeLength":1,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":189,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":27},"end":{"line":51,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":189,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":86}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":87},"contentChanges":[{"range":{"start":{"line":51,"character":27},"end":{"line":51,"character":27}},"rangeLength":0,"text":"g"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":190,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":28},"end":{"line":51,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":190,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":87}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":88},"contentChanges":[{"range":{"start":{"line":51,"character":27},"end":{"line":51,"character":28}},"rangeLength":1,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":191,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":27},"end":{"line":51,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":191,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":89},"contentChanges":[{"range":{"start":{"line":51,"character":27},"end":{"line":51,"character":27}},"rangeLength":0,"text":"G"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":192,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":28},"end":{"line":51,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":192,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":89}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":90},"contentChanges":[{"range":{"start":{"line":51,"character":27},"end":{"line":51,"character":28}},"rangeLength":1,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":193,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":27},"end":{"line":51,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":193,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":90}}}Content-Length: 219

{"jsonrpc":"2.0","id":194,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":26}}}
>>>
Content-Length: 173

{"id":194,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":195,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":21}}}
>>>
Content-Length: 173

{"id":195,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":196,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":21},"end":{"line":51,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":196,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":197,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":20},"end":{"line":51,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":197,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":91},"contentChanges":[{"range":{"start":{"line":51,"character":20},"end":{"line":51,"character":20}},"rangeLength":0,"text":"i"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":198,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":21},"end":{"line":51,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":198,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":91}}}Content-Length: 219

{"jsonrpc":"2.0","id":199,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":22}}}
>>>
Content-Length: 173

{"id":199,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":200,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":22},"end":{"line":51,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":200,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":201,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":24}}}
>>>
Content-Length: 173

{"id":201,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":202,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":202,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":203,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":29},"end":{"line":51,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":203,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":92},"contentChanges":[{"range":{"start":{"line":51,"character":29},"end":{"line":51,"character":29}},"rangeLength":0,"text":";"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":204,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":30},"end":{"line":51,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":204,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":92}}}Content-Length: 281

{"jsonrpc":"2.0","id":205,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":29},"end":{"line":51,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":205,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":206,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":3},"end":{"line":51,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":206,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":207,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":207,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":208,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":30},"end":{"line":51,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":208,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":209,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":1},"end":{"line":52,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":209,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":210,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":210,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":211,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":30},"end":{"line":51,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":211,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":93},"contentChanges":[{"range":{"start":{"line":51,"character":30},"end":{"line":51,"character":30}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 328

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":94},"contentChanges":[{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":2}},"rangeLength":0,"text":"digitalWrite(trigPin, HIGH);"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":212,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":30},"end":{"line":52,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":212,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":94}}}Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":95},"contentChanges":[{"range":{"start":{"line":52,"character":30},"end":{"line":52,"character":30}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 328

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":96},"contentChanges":[{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":2}},"rangeLength":0,"text":"digitalWrite(trigPin, HIGH);"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":213,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":53,"character":30},"end":{"line":53,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":213,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":96}}}Content-Length: 281

{"jsonrpc":"2.0","id":214,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":53,"character":29},"end":{"line":53,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":214,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":97},"contentChanges":[{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":30}},"rangeLength":28,"text":""}]}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":97}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":98},"contentChanges":[{"range":{"start":{"line":52,"character":30},"end":{"line":53,"character":2}},"rangeLength":3,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":215,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":30},"end":{"line":52,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":215,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":98}}}Content-Length: 281

{"jsonrpc":"2.0","id":216,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":30},"end":{"line":51,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":216,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":99},"contentChanges":[{"range":{"start":{"line":51,"character":30},"end":{"line":51,"character":30}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":99}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":100},"contentChanges":[{"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 207

{"jsonrpc":"2.0","id":217,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":53,"character":23}}}
>>>
Content-Length: 173

{"id":217,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":218,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":53,"character":26}}}
>>>
Content-Length: 173

{"id":218,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":219,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":53,"character":24},"end":{"line":53,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":219,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":101},"contentChanges":[{"range":{"start":{"line":53,"character":24},"end":{"line":53,"character":28}},"rangeLength":4,"text":"L"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":102},"contentChanges":[{"range":{"start":{"line":53,"character":25},"end":{"line":53,"character":25}},"rangeLength":0,"text":"O"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":103},"contentChanges":[{"range":{"start":{"line":53,"character":26},"end":{"line":53,"character":26}},"rangeLength":0,"text":"W"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":220,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":53,"character":27},"end":{"line":53,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":220,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":103}}}Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":104},"contentChanges":[{"range":{"start":{"line":52,"character":0},"end":{"line":53,"character":0}},"rangeLength":1,"text":"  \n"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":105},"contentChanges":[{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":2}},"rangeLength":0,"text":"d"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":221,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":3},"end":{"line":52,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":221,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":106},"contentChanges":[{"range":{"start":{"line":52,"character":3},"end":{"line":52,"character":3}},"rangeLength":0,"text":"e"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":107},"contentChanges":[{"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"rangeLength":0,"text":"l"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":108},"contentChanges":[{"range":{"start":{"line":52,"character":5},"end":{"line":52,"character":5}},"rangeLength":0,"text":"a"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":109},"contentChanges":[{"range":{"start":{"line":52,"character":6},"end":{"line":52,"character":6}},"rangeLength":0,"text":"y"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":222,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":7},"end":{"line":52,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":222,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":110},"contentChanges":[{"range":{"start":{"line":52,"character":7},"end":{"line":52,"character":7}},"rangeLength":0,"text":"M"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":111},"contentChanges":[{"range":{"start":{"line":52,"character":8},"end":{"line":52,"character":8}},"rangeLength":0,"text":"i"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":112},"contentChanges":[{"range":{"start":{"line":52,"character":9},"end":{"line":52,"character":9}},"rangeLength":0,"text":"c"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":113},"contentChanges":[{"range":{"start":{"line":52,"character":10},"end":{"line":52,"character":10}},"rangeLength":0,"text":"r"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":114},"contentChanges":[{"range":{"start":{"line":52,"character":11},"end":{"line":52,"character":11}},"rangeLength":0,"text":"o"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":223,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":12},"end":{"line":52,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":223,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":114}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":115},"contentChanges":[{"range":{"start":{"line":52,"character":12},"end":{"line":52,"character":12}},"rangeLength":0,"text":"s"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":224,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":13},"end":{"line":52,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":224,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":116},"contentChanges":[{"range":{"start":{"line":52,"character":13},"end":{"line":52,"character":13}},"rangeLength":0,"text":"e"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":225,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":14},"end":{"line":52,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":225,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":116}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":117},"contentChanges":[{"range":{"start":{"line":52,"character":14},"end":{"line":52,"character":14}},"rangeLength":0,"text":"c"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":118},"contentChanges":[{"range":{"start":{"line":52,"character":15},"end":{"line":52,"character":15}},"rangeLength":0,"text":"o"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":119},"contentChanges":[{"range":{"start":{"line":52,"character":16},"end":{"line":52,"character":16}},"rangeLength":0,"text":"n"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":226,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":17},"end":{"line":52,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":226,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":120},"contentChanges":[{"range":{"start":{"line":52,"character":17},"end":{"line":52,"character":17}},"rangeLength":0,"text":"d"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":227,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":18},"end":{"line":52,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":227,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":121},"contentChanges":[{"range":{"start":{"line":52,"character":18},"end":{"line":52,"character":18}},"rangeLength":0,"text":"s"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":228,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":19},"end":{"line":52,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":228,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":121}}}Content-Length: 207

{"jsonrpc":"2.0","id":229,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":10}}}
>>>
Content-Length: 173

{"id":229,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":230,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":12}}}
>>>
Content-Length: 173

{"id":230,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":231,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":12}}}
>>>
Content-Length: 173

{"id":231,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":232,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":6},"end":{"line":47,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":232,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":233,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":12}}}
>>>
Content-Length: 230

{"id":233,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":234,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":21}}}
>>>
Content-Length: 38

{"id":234,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":235,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":20}}}
>>>
Content-Length: 38

{"id":235,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":236,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":20}}}
>>>
Content-Length: 40

{"id":236,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":237,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":20}}}
>>>
Content-Length: 38

{"id":237,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":238,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":20}}}
>>>
Content-Length: 38

{"id":238,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 473

{"jsonrpc":"2.0","id":239,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 399

{"id":239,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":121}}}Content-Length: 281

{"jsonrpc":"2.0","id":240,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":17},"end":{"line":48,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":240,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":241,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":21}}}
>>>
Content-Length: 40

{"id":241,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":242,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":20}}}
>>>
Content-Length: 38

{"id":242,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 473

{"jsonrpc":"2.0","id":243,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":20},"end":{"line":23,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":243,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":244,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":19}}}
>>>
Content-Length: 40

{"id":244,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 493

{"jsonrpc":"2.0","id":245,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 399

{"id":245,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 473

{"jsonrpc":"2.0","id":246,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 399

{"id":246,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":247,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":18}}}
>>>
Content-Length: 38

{"id":247,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":122},"contentChanges":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"rangeLength":11,"text":"getDistance"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":248,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":15}}}
>>>
Content-Length: 38

{"id":248,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":249,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":9}}}
>>>
Content-Length: 199

{"id":249,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 473

{"jsonrpc":"2.0","id":250,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":24},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":250,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":251,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":5}}}
>>>
Content-Length: 38

{"id":251,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":122}}}Content-Length: 206

{"jsonrpc":"2.0","id":252,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":2}}}
>>>
Content-Length: 40

{"id":252,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":253,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":5}}}
>>>
Content-Length: 38

{"id":253,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":254,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":19}}}
>>>
Content-Length: 38

{"id":254,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":122}}}Content-Length: 281

{"jsonrpc":"2.0","id":255,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":12},"end":{"line":43,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":255,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":256,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":17},"end":{"line":48,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":256,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":257,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":28}}}
>>>
Content-Length: 173

{"id":257,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":258,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":28}}}
>>>
Content-Length: 173

{"id":258,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":259,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":28},"end":{"line":51,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":259,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":260,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":28}}}
>>>
Content-Length: 173

{"id":260,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":261,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":52,"character":19}}}
>>>
Content-Length: 173

{"id":261,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":262,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":19},"end":{"line":52,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":262,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":123},"contentChanges":[{"range":{"start":{"line":52,"character":19},"end":{"line":52,"character":19}},"rangeLength":0,"text":"()"}]}}Content-Length: 286

{"jsonrpc":"2.0","id":263,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":52,"character":20},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 173

{"id":263,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":264,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":20},"end":{"line":52,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":264,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":123}}}Content-Length: 219

{"jsonrpc":"2.0","id":265,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":53,"character":20}}}
>>>
Content-Length: 173

{"id":265,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":266,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":53,"character":20},"end":{"line":53,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":266,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":267,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":54,"character":1},"end":{"line":54,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":267,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":268,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":53,"character":20}}}
>>>
Content-Length: 173

{"id":268,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":269,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":53,"character":20},"end":{"line":53,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":269,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":270,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":20}}}
>>>
Content-Length: 173

{"id":270,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":271,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":20}}}
>>>
Content-Length: 173

{"id":271,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":272,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":20},"end":{"line":47,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":272,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":273,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":17},"end":{"line":48,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":273,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":274,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":20},"end":{"line":47,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":274,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":275,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":20}}}
>>>
Content-Length: 1014

{"id":275,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":276,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":20}}}
>>>
Content-Length: 1014

{"id":276,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":277,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":20}}}
>>>
Content-Length: 1014

{"id":277,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":278,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":20}}}
>>>
Content-Length: 1014

{"id":278,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":279,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":20}}}
>>>
Content-Length: 1014

{"id":279,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":280,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":20}}}
>>>
Content-Length: 1014

{"id":280,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":281,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":20}}}
>>>
Content-Length: 566

{"id":281,"result":[{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}},"kind":1},{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":10}},"kind":3},{"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":23}},"kind":2},{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":14}},"kind":2},{"range":{"start":{"line":33,"character":18},"end":{"line":33,"character":26}},"kind":2},{"range":{"start":{"line":33,"character":30},"end":{"line":33,"character":38}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":282,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":32,"character":20}}}
>>>
Content-Length: 1014

{"id":282,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":283,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":20}}}
>>>
Content-Length: 1014

{"id":283,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":284,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":30,"character":20}}}
>>>
Content-Length: 1014

{"id":284,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":285,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":28,"character":20}}}
>>>
Content-Length: 38

{"id":285,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":286,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":20}}}
>>>
Content-Length: 38

{"id":286,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":287,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":20}}}
>>>
Content-Length: 566

{"id":287,"result":[{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}},"kind":1},{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":10}},"kind":3},{"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":23}},"kind":2},{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":14}},"kind":2},{"range":{"start":{"line":33,"character":18},"end":{"line":33,"character":26}},"kind":2},{"range":{"start":{"line":33,"character":30},"end":{"line":33,"character":38}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":288,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":20}}}
>>>
Content-Length: 38

{"id":288,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":289,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":20}}}
>>>
Content-Length: 38

{"id":289,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":290,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":21,"character":13},"end":{"line":21,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":290,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":291,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":20}}}
>>>
Content-Length: 38

{"id":291,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":292,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":22,"character":20},"end":{"line":22,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":292,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":293,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":20}}}
>>>
Content-Length: 38

{"id":293,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":294,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":20}}}
>>>
Content-Length: 566

{"id":294,"result":[{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}},"kind":1},{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":10}},"kind":3},{"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":23}},"kind":2},{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":14}},"kind":2},{"range":{"start":{"line":33,"character":18},"end":{"line":33,"character":26}},"kind":2},{"range":{"start":{"line":33,"character":30},"end":{"line":33,"character":38}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":295,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":20}}}
>>>
Content-Length: 38

{"id":295,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":296,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":28,"character":20}}}
>>>
Content-Length: 38

{"id":296,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":297,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":30,"character":20}}}
>>>
Content-Length: 1014

{"id":297,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":298,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":20}}}
>>>
Content-Length: 1014

{"id":298,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":299,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":32,"character":20}}}
>>>
Content-Length: 1014

{"id":299,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":300,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":20}}}
>>>
Content-Length: 566

{"id":300,"result":[{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}},"kind":1},{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":10}},"kind":3},{"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":23}},"kind":2},{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":14}},"kind":2},{"range":{"start":{"line":33,"character":18},"end":{"line":33,"character":26}},"kind":2},{"range":{"start":{"line":33,"character":30},"end":{"line":33,"character":38}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":301,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":20}}}
>>>
Content-Length: 1014

{"id":301,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":302,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":20}}}
>>>
Content-Length: 1014

{"id":302,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":303,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":20}}}
>>>
Content-Length: 1014

{"id":303,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":304,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":20}}}
>>>
Content-Length: 1014

{"id":304,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":305,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":20}}}
>>>
Content-Length: 1014

{"id":305,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":306,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":20}}}
>>>
Content-Length: 1014

{"id":306,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":307,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":20}}}
>>>
Content-Length: 173

{"id":307,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":308,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":20}}}
>>>
Content-Length: 173

{"id":308,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":309,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":53,"character":20}}}
>>>
Content-Length: 173

{"id":309,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":310,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":53,"character":20},"end":{"line":53,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":310,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":311,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":54,"character":1},"end":{"line":54,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":311,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":312,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":53,"character":20}}}
>>>
Content-Length: 173

{"id":312,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":313,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":53,"character":20},"end":{"line":53,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":313,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":314,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":20},"end":{"line":52,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":314,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":315,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":16}}}
>>>
Content-Length: 40

{"id":315,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":316,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":16}}}
>>>
Content-Length: 40

{"id":316,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 493

{"jsonrpc":"2.0","id":317,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 399

{"id":317,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":318,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":318,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":123}}}Content-Length: 281

{"jsonrpc":"2.0","id":319,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":21},"end":{"line":52,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":319,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":320,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":52,"character":21}}}
>>>
Content-Length: 173

{"id":320,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":321,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":52,"character":20}}}
>>>
Content-Length: 173

{"id":321,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":322,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":20},"end":{"line":52,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":322,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":124},"contentChanges":[{"range":{"start":{"line":52,"character":20},"end":{"line":52,"character":20}},"rangeLength":0,"text":"1"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":125},"contentChanges":[{"range":{"start":{"line":52,"character":21},"end":{"line":52,"character":21}},"rangeLength":0,"text":"0"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":323,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":22},"end":{"line":52,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":323,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":125}}}Content-Length: 281

{"jsonrpc":"2.0","id":324,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":23},"end":{"line":52,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":324,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":126},"contentChanges":[{"range":{"start":{"line":52,"character":23},"end":{"line":52,"character":23}},"rangeLength":0,"text":";"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":325,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":24},"end":{"line":52,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":325,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":126}}}Content-Length: 219

{"jsonrpc":"2.0","id":326,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":53,"character":24}}}
>>>
Content-Length: 173

{"id":326,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":327,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":53,"character":25},"end":{"line":53,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":327,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":328,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":53,"character":28},"end":{"line":53,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":328,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":329,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":53,"character":29},"end":{"line":53,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":329,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":127},"contentChanges":[{"range":{"start":{"line":53,"character":29},"end":{"line":53,"character":29}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 409

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":128},"contentChanges":[{"range":{"start":{"line":54,"character":2},"end":{"line":54,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":54,"character":0},"end":{"line":54,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":129},"contentChanges":[{"range":{"start":{"line":55,"character":2},"end":{"line":55,"character":2}},"rangeLength":0,"text":"e"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":130},"contentChanges":[{"range":{"start":{"line":55,"character":3},"end":{"line":55,"character":3}},"rangeLength":0,"text":"c"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":131},"contentChanges":[{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":4}},"rangeLength":0,"text":"h"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":132},"contentChanges":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":5}},"rangeLength":0,"text":"o"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":133},"contentChanges":[{"range":{"start":{"line":55,"character":6},"end":{"line":55,"character":6}},"rangeLength":0,"text":"t"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":330,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":7},"end":{"line":55,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":330,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":134},"contentChanges":[{"range":{"start":{"line":55,"character":7},"end":{"line":55,"character":7}},"rangeLength":0,"text":"T"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":135},"contentChanges":[{"range":{"start":{"line":55,"character":8},"end":{"line":55,"character":8}},"rangeLength":0,"text":"i"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":136},"contentChanges":[{"range":{"start":{"line":55,"character":9},"end":{"line":55,"character":9}},"rangeLength":0,"text":"m"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":137},"contentChanges":[{"range":{"start":{"line":55,"character":9},"end":{"line":55,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":138},"contentChanges":[{"range":{"start":{"line":55,"character":8},"end":{"line":55,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":139},"contentChanges":[{"range":{"start":{"line":55,"character":7},"end":{"line":55,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":140},"contentChanges":[{"range":{"start":{"line":55,"character":6},"end":{"line":55,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 279

{"jsonrpc":"2.0","id":331,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":6},"end":{"line":55,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":331,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":141},"contentChanges":[{"range":{"start":{"line":55,"character":6},"end":{"line":55,"character":6}},"rangeLength":0,"text":"T"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":142},"contentChanges":[{"range":{"start":{"line":55,"character":7},"end":{"line":55,"character":7}},"rangeLength":0,"text":"i"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":143},"contentChanges":[{"range":{"start":{"line":55,"character":8},"end":{"line":55,"character":8}},"rangeLength":0,"text":"m"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":144},"contentChanges":[{"range":{"start":{"line":55,"character":9},"end":{"line":55,"character":9}},"rangeLength":0,"text":"e"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":332,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":10},"end":{"line":55,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":332,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":144}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":145},"contentChanges":[{"range":{"start":{"line":55,"character":10},"end":{"line":55,"character":10}},"rangeLength":0,"text":" "}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":146},"contentChanges":[{"range":{"start":{"line":55,"character":11},"end":{"line":55,"character":11}},"rangeLength":0,"text":"="}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":147},"contentChanges":[{"range":{"start":{"line":55,"character":12},"end":{"line":55,"character":12}},"rangeLength":0,"text":" "}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":148},"contentChanges":[{"range":{"start":{"line":55,"character":13},"end":{"line":55,"character":13}},"rangeLength":0,"text":"p"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":149},"contentChanges":[{"range":{"start":{"line":55,"character":14},"end":{"line":55,"character":14}},"rangeLength":0,"text":"u"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":150},"contentChanges":[{"range":{"start":{"line":55,"character":15},"end":{"line":55,"character":15}},"rangeLength":0,"text":"l"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":151},"contentChanges":[{"range":{"start":{"line":55,"character":16},"end":{"line":55,"character":16}},"rangeLength":0,"text":"s"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":152},"contentChanges":[{"range":{"start":{"line":55,"character":17},"end":{"line":55,"character":17}},"rangeLength":0,"text":"e"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":333,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":18},"end":{"line":55,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":333,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":153},"contentChanges":[{"range":{"start":{"line":55,"character":18},"end":{"line":55,"character":18}},"rangeLength":0,"text":"I"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":154},"contentChanges":[{"range":{"start":{"line":55,"character":19},"end":{"line":55,"character":19}},"rangeLength":0,"text":"n"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":334,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":20},"end":{"line":55,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":334,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":155},"contentChanges":[{"range":{"start":{"line":55,"character":20},"end":{"line":55,"character":20}},"rangeLength":0,"text":"()"}]}}Content-Length: 286

{"jsonrpc":"2.0","id":335,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":55,"character":21},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 173

{"id":335,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":336,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":21},"end":{"line":55,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":336,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":155}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":156},"contentChanges":[{"range":{"start":{"line":55,"character":21},"end":{"line":55,"character":21}},"rangeLength":0,"text":"e"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":157},"contentChanges":[{"range":{"start":{"line":55,"character":22},"end":{"line":55,"character":22}},"rangeLength":0,"text":"c"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":158},"contentChanges":[{"range":{"start":{"line":55,"character":23},"end":{"line":55,"character":23}},"rangeLength":0,"text":"h"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":159},"contentChanges":[{"range":{"start":{"line":55,"character":24},"end":{"line":55,"character":24}},"rangeLength":0,"text":"o"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":337,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":25},"end":{"line":55,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":337,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":159}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":160},"contentChanges":[{"range":{"start":{"line":55,"character":25},"end":{"line":55,"character":25}},"rangeLength":0,"text":"P"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":338,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":26},"end":{"line":55,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":338,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":161},"contentChanges":[{"range":{"start":{"line":55,"character":26},"end":{"line":55,"character":26}},"rangeLength":0,"text":"i"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":162},"contentChanges":[{"range":{"start":{"line":55,"character":27},"end":{"line":55,"character":27}},"rangeLength":0,"text":"n"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":339,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":28},"end":{"line":55,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":339,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":162}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":163},"contentChanges":[{"range":{"start":{"line":55,"character":28},"end":{"line":55,"character":28}},"rangeLength":0,"text":","}]}}Content-Length: 286

{"jsonrpc":"2.0","id":340,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":55,"character":29},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 173

{"id":340,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":164},"contentChanges":[{"range":{"start":{"line":55,"character":29},"end":{"line":55,"character":29}},"rangeLength":0,"text":" "}]}}Content-Length: 281

{"jsonrpc":"2.0","id":341,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":30},"end":{"line":55,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":341,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":165},"contentChanges":[{"range":{"start":{"line":55,"character":30},"end":{"line":55,"character":30}},"rangeLength":0,"text":"H"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":166},"contentChanges":[{"range":{"start":{"line":55,"character":31},"end":{"line":55,"character":31}},"rangeLength":0,"text":"I"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":342,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":32},"end":{"line":55,"character":32}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":342,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":166}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":167},"contentChanges":[{"range":{"start":{"line":55,"character":32},"end":{"line":55,"character":32}},"rangeLength":0,"text":"G"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":168},"contentChanges":[{"range":{"start":{"line":55,"character":33},"end":{"line":55,"character":33}},"rangeLength":0,"text":"H"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":343,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":34},"end":{"line":55,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":343,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":168}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":168}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 281

{"jsonrpc":"2.0","id":344,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":35},"end":{"line":55,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":344,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":345,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":55,"character":34}}}
>>>
Content-Length: 173

{"id":345,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":346,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":34},"end":{"line":55,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":346,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":347,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":35},"end":{"line":55,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":347,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":169},"contentChanges":[{"range":{"start":{"line":55,"character":35},"end":{"line":55,"character":35}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 409

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":170},"contentChanges":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":56,"character":0},"end":{"line":56,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":171},"contentChanges":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":171}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":172},"contentChanges":[{"range":{"start":{"line":56,"character":0},"end":{"line":57,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":172}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":173},"contentChanges":[{"range":{"start":{"line":56,"character":0},"end":{"line":56,"character":0}},"rangeLength":0,"text":"  "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":173}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":174},"contentChanges":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":2}},"rangeLength":0,"text":"c"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":348,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":3},"end":{"line":56,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":348,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":175},"contentChanges":[{"range":{"start":{"line":56,"character":3},"end":{"line":56,"character":3}},"rangeLength":0,"text":"a"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":176},"contentChanges":[{"range":{"start":{"line":56,"character":4},"end":{"line":56,"character":4}},"rangeLength":0,"text":"l"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":349,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":5},"end":{"line":56,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":349,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":176}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":177},"contentChanges":[{"range":{"start":{"line":56,"character":5},"end":{"line":56,"character":5}},"rangeLength":0,"text":"c"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":178},"contentChanges":[{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":6}},"rangeLength":0,"text":"u"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":350,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":350,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":179},"contentChanges":[{"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":7}},"rangeLength":0,"text":"l"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":180},"contentChanges":[{"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":8}},"rangeLength":0,"text":"a"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":181},"contentChanges":[{"range":{"start":{"line":56,"character":9},"end":{"line":56,"character":9}},"rangeLength":0,"text":"t"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":351,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":10},"end":{"line":56,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":351,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":182},"contentChanges":[{"range":{"start":{"line":56,"character":10},"end":{"line":56,"character":10}},"rangeLength":0,"text":"e"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":352,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":11},"end":{"line":56,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":352,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":183},"contentChanges":[{"range":{"start":{"line":56,"character":11},"end":{"line":56,"character":11}},"rangeLength":0,"text":"d"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":353,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":12},"end":{"line":56,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":353,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":184},"contentChanges":[{"range":{"start":{"line":56,"character":12},"end":{"line":56,"character":12}},"rangeLength":0,"text":"D"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":185},"contentChanges":[{"range":{"start":{"line":56,"character":13},"end":{"line":56,"character":13}},"rangeLength":0,"text":"i"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":354,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":14},"end":{"line":56,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":354,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":186},"contentChanges":[{"range":{"start":{"line":56,"character":14},"end":{"line":56,"character":14}},"rangeLength":0,"text":"s"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":355,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":355,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":187},"contentChanges":[{"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":15}},"rangeLength":0,"text":"t"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":356,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":356,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":188},"contentChanges":[{"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":16}},"rangeLength":0,"text":"a"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":189},"contentChanges":[{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":17}},"rangeLength":0,"text":"n"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":190},"contentChanges":[{"range":{"start":{"line":56,"character":18},"end":{"line":56,"character":18}},"rangeLength":0,"text":"c"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":191},"contentChanges":[{"range":{"start":{"line":56,"character":19},"end":{"line":56,"character":19}},"rangeLength":0,"text":"e"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":357,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":357,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":191}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":192},"contentChanges":[{"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":20}},"rangeLength":0,"text":" "}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":193},"contentChanges":[{"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":21}},"rangeLength":0,"text":"="}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":194},"contentChanges":[{"range":{"start":{"line":56,"character":22},"end":{"line":56,"character":22}},"rangeLength":0,"text":" "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":194}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":195},"contentChanges":[{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":23}},"rangeLength":0,"text":"e"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":196},"contentChanges":[{"range":{"start":{"line":56,"character":24},"end":{"line":56,"character":24}},"rangeLength":0,"text":"c"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":197},"contentChanges":[{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":25}},"rangeLength":0,"text":"h"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":198},"contentChanges":[{"range":{"start":{"line":56,"character":26},"end":{"line":56,"character":26}},"rangeLength":0,"text":"o"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":358,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":27},"end":{"line":56,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":358,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":199},"contentChanges":[{"range":{"start":{"line":56,"character":27},"end":{"line":56,"character":27}},"rangeLength":0,"text":"T"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":200},"contentChanges":[{"range":{"start":{"line":56,"character":28},"end":{"line":56,"character":28}},"rangeLength":0,"text":"i"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":201},"contentChanges":[{"range":{"start":{"line":56,"character":29},"end":{"line":56,"character":29}},"rangeLength":0,"text":"m"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":202},"contentChanges":[{"range":{"start":{"line":56,"character":30},"end":{"line":56,"character":30}},"rangeLength":0,"text":"e"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":359,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":31},"end":{"line":56,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":359,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":202}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":203},"contentChanges":[{"range":{"start":{"line":56,"character":31},"end":{"line":56,"character":31}},"rangeLength":0,"text":" "}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":204},"contentChanges":[{"range":{"start":{"line":56,"character":32},"end":{"line":56,"character":32}},"rangeLength":0,"text":"/"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":205},"contentChanges":[{"range":{"start":{"line":56,"character":33},"end":{"line":56,"character":33}},"rangeLength":0,"text":" "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":205}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":206},"contentChanges":[{"range":{"start":{"line":56,"character":34},"end":{"line":56,"character":34}},"rangeLength":0,"text":"1"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":360,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":35},"end":{"line":56,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":360,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":206}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":207},"contentChanges":[{"range":{"start":{"line":56,"character":35},"end":{"line":56,"character":35}},"rangeLength":0,"text":"4"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":208},"contentChanges":[{"range":{"start":{"line":56,"character":36},"end":{"line":56,"character":36}},"rangeLength":0,"text":"0"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":361,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":37},"end":{"line":56,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":361,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":209},"contentChanges":[{"range":{"start":{"line":56,"character":37},"end":{"line":56,"character":37}},"rangeLength":0,"text":"."}]}}Content-Length: 263

{"jsonrpc":"2.0","id":362,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":56,"character":38},"context":{"triggerKind":2,"triggerCharacter":"."}}}
>>>
Content-Length: 173

{"id":362,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":363,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":38},"end":{"line":56,"character":38}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":363,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":209}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":210},"contentChanges":[{"range":{"start":{"line":56,"character":37},"end":{"line":56,"character":38}},"rangeLength":1,"text":""}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":211},"contentChanges":[{"range":{"start":{"line":56,"character":36},"end":{"line":56,"character":37}},"rangeLength":1,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":364,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":36},"end":{"line":56,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":364,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":211}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":212},"contentChanges":[{"range":{"start":{"line":56,"character":36},"end":{"line":56,"character":36}},"rangeLength":0,"text":"8"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":365,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":37},"end":{"line":56,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":365,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":212}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":213},"contentChanges":[{"range":{"start":{"line":56,"character":37},"end":{"line":56,"character":37}},"rangeLength":0,"text":"."}]}}Content-Length: 263

{"jsonrpc":"2.0","id":366,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":56,"character":38},"context":{"triggerKind":2,"triggerCharacter":"."}}}
>>>
Content-Length: 173

{"id":366,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":214},"contentChanges":[{"range":{"start":{"line":56,"character":38},"end":{"line":56,"character":38}},"rangeLength":0,"text":"0"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":367,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":39},"end":{"line":56,"character":39}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":367,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":214}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":214}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":215},"contentChanges":[{"range":{"start":{"line":56,"character":39},"end":{"line":56,"character":39}},"rangeLength":0,"text":";"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":368,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":40},"end":{"line":56,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":368,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":216},"contentChanges":[{"range":{"start":{"line":56,"character":40},"end":{"line":56,"character":40}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 409

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":217},"contentChanges":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":218},"contentChanges":[{"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":2}},"rangeLength":0,"text":"r"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":219},"contentChanges":[{"range":{"start":{"line":58,"character":3},"end":{"line":58,"character":3}},"rangeLength":0,"text":"e"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":220},"contentChanges":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":4}},"rangeLength":0,"text":"t"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":221},"contentChanges":[{"range":{"start":{"line":58,"character":5},"end":{"line":58,"character":5}},"rangeLength":0,"text":"u"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":222},"contentChanges":[{"range":{"start":{"line":58,"character":6},"end":{"line":58,"character":6}},"rangeLength":0,"text":"r"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":223},"contentChanges":[{"range":{"start":{"line":58,"character":7},"end":{"line":58,"character":7}},"rangeLength":0,"text":"n"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":224},"contentChanges":[{"range":{"start":{"line":58,"character":8},"end":{"line":58,"character":8}},"rangeLength":0,"text":" "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":224}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":225},"contentChanges":[{"range":{"start":{"line":58,"character":8},"end":{"line":58,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 279

{"jsonrpc":"2.0","id":369,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":8},"end":{"line":58,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":369,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":225}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":226},"contentChanges":[{"range":{"start":{"line":58,"character":8},"end":{"line":58,"character":8}},"rangeLength":0,"text":" "}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":227},"contentChanges":[{"range":{"start":{"line":58,"character":9},"end":{"line":58,"character":9}},"rangeLength":0,"text":"c"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":370,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":10},"end":{"line":58,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":370,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":228},"contentChanges":[{"range":{"start":{"line":58,"character":10},"end":{"line":58,"character":10}},"rangeLength":0,"text":"a"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":229},"contentChanges":[{"range":{"start":{"line":58,"character":11},"end":{"line":58,"character":11}},"rangeLength":0,"text":"l"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":371,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":12},"end":{"line":58,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":371,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":229}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":230},"contentChanges":[{"range":{"start":{"line":58,"character":12},"end":{"line":58,"character":12}},"rangeLength":0,"text":"c"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":231},"contentChanges":[{"range":{"start":{"line":58,"character":13},"end":{"line":58,"character":13}},"rangeLength":0,"text":"u"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":372,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":14},"end":{"line":58,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":372,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":232},"contentChanges":[{"range":{"start":{"line":58,"character":14},"end":{"line":58,"character":14}},"rangeLength":0,"text":"l"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":233},"contentChanges":[{"range":{"start":{"line":58,"character":15},"end":{"line":58,"character":15}},"rangeLength":0,"text":"a"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":373,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":16},"end":{"line":58,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":373,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":233}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":234},"contentChanges":[{"range":{"start":{"line":58,"character":16},"end":{"line":58,"character":16}},"rangeLength":0,"text":"t"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":235},"contentChanges":[{"range":{"start":{"line":58,"character":17},"end":{"line":58,"character":17}},"rangeLength":0,"text":"e"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":236},"contentChanges":[{"range":{"start":{"line":58,"character":18},"end":{"line":58,"character":18}},"rangeLength":0,"text":"d"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":374,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":19},"end":{"line":58,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":374,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":237},"contentChanges":[{"range":{"start":{"line":58,"character":19},"end":{"line":58,"character":19}},"rangeLength":0,"text":"D"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":238},"contentChanges":[{"range":{"start":{"line":58,"character":20},"end":{"line":58,"character":20}},"rangeLength":0,"text":"i"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":239},"contentChanges":[{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":21}},"rangeLength":0,"text":"s"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":375,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":22},"end":{"line":58,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":375,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":240},"contentChanges":[{"range":{"start":{"line":58,"character":22},"end":{"line":58,"character":22}},"rangeLength":0,"text":"t"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":376,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":23},"end":{"line":58,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":376,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":241},"contentChanges":[{"range":{"start":{"line":58,"character":23},"end":{"line":58,"character":23}},"rangeLength":0,"text":"a"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":242},"contentChanges":[{"range":{"start":{"line":58,"character":24},"end":{"line":58,"character":24}},"rangeLength":0,"text":"n"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":243},"contentChanges":[{"range":{"start":{"line":58,"character":25},"end":{"line":58,"character":25}},"rangeLength":0,"text":"c"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":244},"contentChanges":[{"range":{"start":{"line":58,"character":26},"end":{"line":58,"character":26}},"rangeLength":0,"text":"e"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":245},"contentChanges":[{"range":{"start":{"line":58,"character":27},"end":{"line":58,"character":27}},"rangeLength":0,"text":"l"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":377,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":28},"end":{"line":58,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":377,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":245}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":246},"contentChanges":[{"range":{"start":{"line":58,"character":27},"end":{"line":58,"character":28}},"rangeLength":1,"text":""}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":247},"contentChanges":[{"range":{"start":{"line":58,"character":27},"end":{"line":58,"character":27}},"rangeLength":0,"text":";"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":378,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":28},"end":{"line":58,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":378,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":247}}}Content-Length: 207

{"jsonrpc":"2.0","id":379,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":56,"character":25}}}
>>>
Content-Length: 173

{"id":379,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":380,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":56,"character":17}}}
>>>
Content-Length: 173

{"id":380,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":381,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":381,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":382,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":21}}}
>>>
Content-Length: 173

{"id":382,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":383,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":21}}}
>>>
Content-Length: 173

{"id":383,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":384,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":21}}}
>>>
Content-Length: 173

{"id":384,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":248},"contentChanges":[{"range":{"start":{"line":58,"character":9},"end":{"line":58,"character":27}},"rangeLength":18,"text":"calculatedDistance"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":385,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":22}}}
>>>
Content-Length: 173

{"id":385,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":386,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":27},"end":{"line":58,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":386,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":248}}}Content-Length: 279

{"jsonrpc":"2.0","id":387,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":1},"end":{"line":44,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":387,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":388,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":36,"character":27},"end":{"line":36,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":388,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":248}}}Content-Length: 279

{"jsonrpc":"2.0","id":389,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":1},"end":{"line":44,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":389,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":390,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":19}}}
>>>
Content-Length: 173

{"id":390,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":391,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":12},"end":{"line":43,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":391,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":392,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":22}}}
>>>
Content-Length: 311

{"id":392,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":43,"character":16},"end":{"line":43,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":393,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":25}}}
>>>
Content-Length: 173

{"id":393,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":394,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":27},"end":{"line":49,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":394,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":395,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":17},"end":{"line":48,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":395,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":396,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":28},"end":{"line":58,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":396,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":397,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":40},"end":{"line":56,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":397,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":398,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":35},"end":{"line":55,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":398,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":249},"contentChanges":[{"range":{"start":{"line":55,"character":35},"end":{"line":55,"character":35}},"rangeLength":0,"text":";"}]}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":249}}}Content-Length: 281

{"jsonrpc":"2.0","id":399,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":36},"end":{"line":55,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":399,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":400,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":2}}}
>>>
Content-Length: 173

{"id":400,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":401,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":401,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":402,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":52,"character":14}}}
>>>
Content-Length: 173

{"id":402,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":403,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":52,"character":15}}}
>>>
Content-Length: 173

{"id":403,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":404,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":404,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":405,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":56,"character":9}}}
>>>
Content-Length: 173

{"id":405,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":406,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":56,"character":9}}}
>>>
Content-Length: 173

{"id":406,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":407,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":11}}}
>>>
Content-Length: 173

{"id":407,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":408,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":408,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":409,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":21},"end":{"line":47,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":409,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":410,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":410,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":411,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":25}}}
>>>
Content-Length: 230

{"id":411,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":249}}}Content-Length: 212

{"jsonrpc":"2.0","id":412,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":24}}}
>>>
Content-Length: 38

{"id":412,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":413,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":23}}}
>>>
Content-Length: 38

{"id":413,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":414,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":14}}}
>>>
Content-Length: 225

{"id":414,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","range":{"start":{"line":137,"character":14},"end":{"line":137,"character":21}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5951

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","languageId":"cpp","version":1,"text":"/*\n Print.cpp - Base class that provides print() and println()\n Copyright (c) 2008 David A. Mellis.  All right reserved.\n \n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n \n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n \n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n \n Modified 23 November 2006 by David A. Mellis\n Modified 03 August 2015 by Chuck Todd\n */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include \"Arduino.h\"\n\n#include \"Print.h\"\n\n// Public Methods //////////////////////////////////////////////////////////////\n\n/* default implementation: may be overridden */\nsize_t Print::write(const uint8_t *buffer, size_t size)\n{\n  size_t n = 0;\n  while (size--) {\n    if (write(*buffer++)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const __FlashStringHelper *ifsh)\n{\n  PGM_P p = reinterpret_cast<PGM_P>(ifsh);\n  size_t n = 0;\n  while (1) {\n    unsigned char c = pgm_read_byte(p++);\n    if (c == 0) break;\n    if (write(c)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const String &s)\n{\n  return write(s.c_str(), s.length());\n}\n\nsize_t Print::print(const char str[])\n{\n  return write(str);\n}\n\nsize_t Print::print(char c)\n{\n  return write(c);\n}\n\nsize_t Print::print(unsigned char b, int base)\n{\n  return print((unsigned long) b, base);\n}\n\nsize_t Print::print(int n, int base)\n{\n  return print((long) n, base);\n}\n\nsize_t Print::print(unsigned int n, int base)\n{\n  return print((unsigned long) n, base);\n}\n\nsize_t Print::print(long n, int base)\n{\n  if (base == 0) {\n    return write(n);\n  } else if (base == 10) {\n    if (n < 0) {\n      int t = print('-');\n      n = -n;\n      return printNumber(n, 10) + t;\n    }\n    return printNumber(n, 10);\n  } else {\n    return printNumber(n, base);\n  }\n}\n\nsize_t Print::print(unsigned long n, int base)\n{\n  if (base == 0) return write(n);\n  else return printNumber(n, base);\n}\n\nsize_t Print::print(double n, int digits)\n{\n  return printFloat(n, digits);\n}\n\nsize_t Print::println(const __FlashStringHelper *ifsh)\n{\n  size_t n = print(ifsh);\n  n += println();\n  return n;\n}\n\nsize_t Print::print(const Printable& x)\n{\n  return x.printTo(*this);\n}\n\nsize_t Print::println(void)\n{\n  return write(\"\\r\\n\");\n}\n\nsize_t Print::println(const String &s)\n{\n  size_t n = print(s);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const char c[])\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(char c)\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned char b, int base)\n{\n  size_t n = print(b, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(double num, int digits)\n{\n  size_t n = print(num, digits);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const Printable& x)\n{\n  size_t n = print(x);\n  n += println();\n  return n;\n}\n\n// Private Methods /////////////////////////////////////////////////////////////\n\nsize_t Print::printNumber(unsigned long n, uint8_t base)\n{\n  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.\n  char *str = &buf[sizeof(buf) - 1];\n\n  *str = '\\0';\n\n  // prevent crash if called with base == 1\n  if (base < 2) base = 10;\n\n  do {\n    char c = n % base;\n    n /= base;\n\n    *--str = c < 10 ? c + '0' : c + 'A' - 10;\n  } while(n);\n\n  return write(str);\n}\n\nsize_t Print::printFloat(double number, uint8_t digits) \n{ \n  size_t n = 0;\n  \n  if (isnan(number)) return print(\"nan\");\n  if (isinf(number)) return print(\"inf\");\n  if (number > 4294967040.0) return print (\"ovf\");  // constant determined empirically\n  if (number <-4294967040.0) return print (\"ovf\");  // constant determined empirically\n  \n  // Handle negative numbers\n  if (number < 0.0)\n  {\n     n += print('-');\n     number = -number;\n  }\n\n  // Round correctly so that print(1.999, 2) prints as \"2.00\"\n  double rounding = 0.5;\n  for (uint8_t i=0; i<digits; ++i)\n    rounding /= 10.0;\n  \n  number += rounding;\n\n  // Extract the integer part of the number and print it\n  unsigned long int_part = (unsigned long)number;\n  double remainder = number - (double)int_part;\n  n += print(int_part);\n\n  // Print the decimal point, but only if there are digits beyond\n  if (digits > 0) {\n    n += print('.'); \n  }\n\n  // Extract digits from the remainder one at a time\n  while (digits-- > 0)\n  {\n    remainder *= 10.0;\n    unsigned int toPrint = (unsigned int)(remainder);\n    n += print(toPrint);\n    remainder -= toPrint; \n  } \n  \n  return n;\n}\n"}}}Content-Length: 184

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}}}
>>>
Content-Length: 194

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":250},"contentChanges":[{"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":251},"contentChanges":[{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":0}},"rangeLength":0,"text":"c"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":252},"contentChanges":[{"range":{"start":{"line":46,"character":1},"end":{"line":46,"character":1}},"rangeLength":0,"text":"h"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":253},"contentChanges":[{"range":{"start":{"line":46,"character":2},"end":{"line":46,"character":2}},"rangeLength":0,"text":"a"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":415,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":3},"end":{"line":46,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":415,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":254},"contentChanges":[{"range":{"start":{"line":46,"character":3},"end":{"line":46,"character":3}},"rangeLength":0,"text":"t"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":416,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":416,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":254}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":255},"contentChanges":[{"range":{"start":{"line":46,"character":3},"end":{"line":46,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":256},"contentChanges":[{"range":{"start":{"line":46,"character":3},"end":{"line":46,"character":3}},"rangeLength":0,"text":"r"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":417,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":417,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":256}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":257},"contentChanges":[{"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":4}},"rangeLength":0,"text":" "}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":258},"contentChanges":[{"range":{"start":{"line":46,"character":5},"end":{"line":46,"character":5}},"rangeLength":0,"text":"i"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":259},"contentChanges":[{"range":{"start":{"line":46,"character":6},"end":{"line":46,"character":6}},"rangeLength":0,"text":"n"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":260},"contentChanges":[{"range":{"start":{"line":46,"character":7},"end":{"line":46,"character":7}},"rangeLength":0,"text":" "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":260}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":261},"contentChanges":[{"range":{"start":{"line":46,"character":8},"end":{"line":46,"character":8}},"rangeLength":0,"text":"="}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":262},"contentChanges":[{"range":{"start":{"line":46,"character":9},"end":{"line":46,"character":9}},"rangeLength":0,"text":" "}]}}Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":263},"contentChanges":[{"range":{"start":{"line":46,"character":10},"end":{"line":46,"character":10}},"rangeLength":0,"text":"\"\""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":418,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":11},"end":{"line":46,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":418,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":263}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":264},"contentChanges":[{"range":{"start":{"line":46,"character":11},"end":{"line":46,"character":11}},"rangeLength":0,"text":" "}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":265},"contentChanges":[{"range":{"start":{"line":46,"character":12},"end":{"line":46,"character":12}},"rangeLength":0,"text":"i"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":266},"contentChanges":[{"range":{"start":{"line":46,"character":13},"end":{"line":46,"character":13}},"rangeLength":0,"text":"n"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":419,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":14},"end":{"line":46,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":419,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":266}}}Content-Length: 281

{"jsonrpc":"2.0","id":420,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":15},"end":{"line":46,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":420,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":421,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":0}}}
>>>
Content-Length: 173

{"id":421,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":422,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":422,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":423,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":4}}}
>>>
Content-Length: 173

{"id":423,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":424,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":6}}}
>>>
Content-Length: 173

{"id":424,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":425,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":6}}}
>>>
Content-Length: 173

{"id":425,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":426,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":5},"end":{"line":46,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":426,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":427,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":24}}}
>>>
Content-Length: 38

{"id":427,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":428,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":25}}}
>>>
Content-Length: 230

{"id":428,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":429,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":24}}}
>>>
Content-Length: 40

{"id":429,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":430,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":20}}}
>>>
Content-Length: 38

{"id":430,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":431,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":19},"end":{"line":26,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":431,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":26,"character":19},"end":{"line":26,"character":21}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":432,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":21}}}
>>>
Content-Length: 40

{"id":432,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":433,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":433,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":434,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":22}}}
>>>
Content-Length: 315

{"id":434,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"start":{"line":33,"character":22},"end":{"line":33,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":435,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":20}}}
>>>
Content-Length: 40

{"id":435,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":436,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":16}}}
>>>
Content-Length: 314

{"id":436,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"start":{"line":33,"character":9},"end":{"line":33,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":437,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":17}}}
>>>
Content-Length: 40

{"id":437,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":438,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":17},"end":{"line":26,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":438,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":26,"character":17},"end":{"line":26,"character":21}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":439,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":17},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":439,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":26,"character":17},"end":{"line":26,"character":22}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":267},"contentChanges":[{"range":{"start":{"line":26,"character":17},"end":{"line":26,"character":22}},"rangeLength":5,"text":"in"}]}}
>>>
Content-Length: 549

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":26,"character":17},"end":{"line":26,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'in'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 464

{"jsonrpc":"2.0","id":440,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":19},"end":{"line":26,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":26,"character":17},"end":{"line":26,"character":19}},"message":"Use of undeclared identifier 'in'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":440,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":267}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 280

{"jsonrpc":"2.0","id":441,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":441,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":268},"contentChanges":[{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":15}},"rangeLength":15,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":269},"contentChanges":[{"range":{"start":{"line":45,"character":0},"end":{"line":46,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":270},"contentChanges":[{"range":{"start":{"line":44,"character":1},"end":{"line":45,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 279

{"jsonrpc":"2.0","id":442,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":1},"end":{"line":44,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":442,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":270}}}Content-Length: 281

{"jsonrpc":"2.0","id":443,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":21},"end":{"line":26,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":443,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":444,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":25,"character":25},"end":{"line":25,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":444,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":271},"contentChanges":[{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":0}},"rangeLength":0,"text":"\n"}]}}
>>>
Content-Length: 549

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":27,"character":17},"end":{"line":27,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'in'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 318

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":272},"contentChanges":[{"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":0}},"rangeLength":0,"text":"char in = \" in\""}]}}
>>>
Content-Length: 807

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":25,"character":5},"end":{"line":25,"character":7}},"severity":1,"code":"init_conversion_failed","source":"clang","message":"Cannot initialize a variable of type 'char' with an lvalue of type 'const char [4]'"},{"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":8}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":445,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":445,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":272}}}Content-Length: 219

{"jsonrpc":"2.0","id":446,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":14}}}
>>>
Content-Length: 38

{"id":446,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":447,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":25,"character":14},"end":{"line":25,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":447,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":448,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":448,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":273},"contentChanges":[{"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":15}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 601

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":25,"character":5},"end":{"line":25,"character":7}},"severity":1,"code":"init_conversion_failed","source":"clang","message":"Cannot initialize a variable of type 'char' with an lvalue of type 'const char [4]'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":273}}}Content-Length: 281

{"jsonrpc":"2.0","id":449,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":449,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":450,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":14}}}
>>>
Content-Length: 38

{"id":450,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":451,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":7}}}
>>>
Content-Length: 213

{"id":451,"result":[{"range":{"start":{"line":25,"character":5},"end":{"line":25,"character":7}},"kind":1},{"range":{"start":{"line":27,"character":17},"end":{"line":27,"character":19}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":452,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":4}}}
>>>
Content-Length: 38

{"id":452,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":274},"contentChanges":[{"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":0}},"rangeLength":0,"text":"  "}]}}
>>>
Content-Length: 601

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":25,"character":7},"end":{"line":25,"character":9}},"severity":1,"code":"init_conversion_failed","source":"clang","message":"Cannot initialize a variable of type 'char' with an lvalue of type 'const char [4]'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":453,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":453,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":274}}}Content-Length: 206

{"jsonrpc":"2.0","id":454,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":4}}}
>>>
Content-Length: 40

{"id":454,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":455,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":7}}}
>>>
Content-Length: 277

{"id":455,"result":{"contents":{"kind":"markdown","value":"### variable `in`  \n\n---\nType: `char`  \n\n---\n```cpp\n// In loop\nchar in = \u003crecovery - expr\u003e(\" in\")\n```"},"range":{"start":{"line":32,"character":7},"end":{"line":32,"character":9}}},"jsonrpc":"2.0"}
<<<
Content-Length: 534

{"jsonrpc":"2.0","id":456,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":25,"character":7},"end":{"line":25,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":25,"character":7},"end":{"line":25,"character":9}},"message":"Cannot initialize a variable of type 'char' with an lvalue of type 'const char [4]'","severity":1,"code":"init_conversion_failed","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":456,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":457,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":7}}}
>>>
Content-Length: 310

{"id":457,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":458,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":9}}}
>>>
Content-Length: 277

{"id":458,"result":{"contents":{"kind":"markdown","value":"### variable `in`  \n\n---\nType: `char`  \n\n---\n```cpp\n// In loop\nchar in = \u003crecovery - expr\u003e(\" in\")\n```"},"range":{"start":{"line":32,"character":7},"end":{"line":32,"character":9}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":459,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":25,"character":18},"end":{"line":25,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":459,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":275},"contentChanges":[{"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":2}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 601

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":25,"character":5},"end":{"line":25,"character":7}},"severity":1,"code":"init_conversion_failed","source":"clang","message":"Cannot initialize a variable of type 'char' with an lvalue of type 'const char [4]'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":276},"contentChanges":[{"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":16}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 807

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":25,"character":5},"end":{"line":25,"character":7}},"severity":1,"code":"init_conversion_failed","source":"clang","message":"Cannot initialize a variable of type 'char' with an lvalue of type 'const char [4]'"},{"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":8}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":460,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":25,"character":15},"end":{"line":25,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":460,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":277},"contentChanges":[{"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":15}},"rangeLength":15,"text":""}]}}
>>>
Content-Length: 549

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":27,"character":17},"end":{"line":27,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'in'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":278},"contentChanges":[{"range":{"start":{"line":24,"character":0},"end":{"line":25,"character":0}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 549

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":26,"character":17},"end":{"line":26,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'in'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":279},"contentChanges":[{"range":{"start":{"line":44,"character":1},"end":{"line":44,"character":1}},"rangeLength":0,"text":"\n"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":280},"contentChanges":[{"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 318

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":281},"contentChanges":[{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":0}},"rangeLength":0,"text":"char in = \" in\""}]}}Content-Length: 207

{"jsonrpc":"2.0","id":461,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":23}}}
>>>
Content-Length: 321

{"id":461,"result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\n→ `size_t`  \nParameters:  \n- `double`\n- `int = 2`\n\n---\n```cpp\n// In Print\npublic: size_t print(double, int = 2)\n```"},"range":{"start":{"line":32,"character":15},"end":{"line":32,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":282},"contentChanges":[{"range":{"start":{"line":26,"character":17},"end":{"line":26,"character":19}},"rangeLength":2,"text":"\" in\""}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":462,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":17},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":462,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":26,"character":17},"end":{"line":26,"character":22}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":463,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":23}}}
>>>
Content-Length: 321

{"id":463,"result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\n→ `size_t`  \nParameters:  \n- `double`\n- `int = 2`\n\n---\n```cpp\n// In Print\npublic: size_t print(double, int = 2)\n```"},"range":{"start":{"line":32,"character":15},"end":{"line":32,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 515

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":285},"contentChanges":[{"range":{"start":{"line":46,"character":13},"end":{"line":46,"character":14}},"rangeLength":1,"text":""},{"range":{"start":{"line":46,"character":12},"end":{"line":46,"character":13}},"rangeLength":1,"text":""},{"range":{"start":{"line":46,"character":11},"end":{"line":46,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 207

{"jsonrpc":"2.0","id":464,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":23}}}
>>>
Content-Length: 321

{"id":464,"result":{"contents":{"kind":"markdown","value":"### instance-method `print`  \n\n---\n→ `size_t`  \nParameters:  \n- `double`\n- `int = 2`\n\n---\n```cpp\n// In Print\npublic: size_t print(double, int = 2)\n```"},"range":{"start":{"line":32,"character":15},"end":{"line":32,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":465,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":11},"end":{"line":46,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":465,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":285}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":286},"contentChanges":[{"range":{"start":{"line":46,"character":10},"end":{"line":46,"character":12}},"rangeLength":2,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":287},"contentChanges":[{"range":{"start":{"line":46,"character":9},"end":{"line":46,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 405

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":289},"contentChanges":[{"range":{"start":{"line":46,"character":8},"end":{"line":46,"character":9}},"rangeLength":1,"text":""},{"range":{"start":{"line":46,"character":7},"end":{"line":46,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 509

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":292},"contentChanges":[{"range":{"start":{"line":46,"character":6},"end":{"line":46,"character":7}},"rangeLength":1,"text":""},{"range":{"start":{"line":46,"character":5},"end":{"line":46,"character":6}},"rangeLength":1,"text":""},{"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":293},"contentChanges":[{"range":{"start":{"line":46,"character":3},"end":{"line":46,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":294},"contentChanges":[{"range":{"start":{"line":46,"character":3},"end":{"line":46,"character":3}},"rangeLength":0,"text":"t"}]}}Content-Length: 279

{"jsonrpc":"2.0","id":466,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":466,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":294}}}Content-Length: 717

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":299},"contentChanges":[{"range":{"start":{"line":46,"character":3},"end":{"line":46,"character":4}},"rangeLength":1,"text":""},{"range":{"start":{"line":46,"character":2},"end":{"line":46,"character":3}},"rangeLength":1,"text":""},{"range":{"start":{"line":46,"character":1},"end":{"line":46,"character":2}},"rangeLength":1,"text":""},{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":1}},"rangeLength":1,"text":""},{"range":{"start":{"line":45,"character":0},"end":{"line":46,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":299}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":300},"contentChanges":[{"range":{"start":{"line":55,"character":35},"end":{"line":55,"character":36}},"rangeLength":1,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":467,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":35},"end":{"line":55,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":467,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":300}}}Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":301},"contentChanges":[{"range":{"start":{"line":58,"character":9},"end":{"line":58,"character":27}},"rangeLength":18,"text":"calculatedDistance"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":468,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":9},"end":{"line":58,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":468,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":301}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":301}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 207

{"jsonrpc":"2.0","id":469,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":15}}}
>>>
Content-Length: 40

{"id":469,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":470,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":30,"character":12}}}
>>>
Content-Length: 310

{"id":470,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":471,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":28,"character":10}}}
>>>
Content-Length: 271

{"id":471,"result":{"contents":{"kind":"markdown","value":"### variable `distance`  \n\n---\nType: `float`  \nValue = `0.000000e+00`  \n\n---\n```cpp\nfloat distance = 0\n```"},"range":{"start":{"line":35,"character":6},"end":{"line":35,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":472,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":27},"end":{"line":49,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":472,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":473,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":17},"end":{"line":48,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":473,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":474,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":35},"end":{"line":55,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":474,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":302},"contentChanges":[{"range":{"start":{"line":55,"character":35},"end":{"line":55,"character":35}},"rangeLength":0,"text":";"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":475,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":55,"character":36},"end":{"line":55,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":475,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":302}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 207

{"jsonrpc":"2.0","id":476,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":10}}}
>>>
Content-Length: 173

{"id":476,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":477,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":9}}}
>>>
Content-Length: 173

{"id":477,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":478,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":9},"end":{"line":58,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":478,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":303},"contentChanges":[{"range":{"start":{"line":58,"character":8},"end":{"line":58,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 279

{"jsonrpc":"2.0","id":479,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":8},"end":{"line":58,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":479,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":304},"contentChanges":[{"range":{"start":{"line":58,"character":8},"end":{"line":58,"character":8}},"rangeLength":0,"text":"("}]}}Content-Length: 285

{"jsonrpc":"2.0","id":480,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":9},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 173

{"id":480,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":481,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":9},"end":{"line":58,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":481,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":482,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":10}}}
>>>
Content-Length: 173

{"id":482,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":304}}}Content-Length: 281

{"jsonrpc":"2.0","id":483,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":10},"end":{"line":58,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":483,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":484,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":27}}}
>>>
Content-Length: 173

{"id":484,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":485,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":27},"end":{"line":58,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":485,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":486,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":28},"end":{"line":58,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":486,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":305},"contentChanges":[{"range":{"start":{"line":58,"character":28},"end":{"line":58,"character":28}},"rangeLength":0,"text":")"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":487,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":29},"end":{"line":58,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":487,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":305}}}Content-Length: 281

{"jsonrpc":"2.0","id":488,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":28},"end":{"line":58,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":488,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":489,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":27}}}
>>>
Content-Length: 173

{"id":489,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":490,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":27},"end":{"line":58,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":490,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":306},"contentChanges":[{"range":{"start":{"line":58,"character":27},"end":{"line":58,"character":27}},"rangeLength":0,"text":")"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":491,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":28},"end":{"line":58,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":491,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":306}}}Content-Length: 281

{"jsonrpc":"2.0","id":492,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":30},"end":{"line":58,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":492,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":307},"contentChanges":[{"range":{"start":{"line":58,"character":29},"end":{"line":58,"character":30}},"rangeLength":1,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":493,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":29},"end":{"line":58,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":493,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":307}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":307}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":307}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":307}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":307}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":307}}}Content-Length: 219

{"jsonrpc":"2.0","id":494,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":20}}}
>>>
Content-Length: 1014

{"id":494,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":495,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":495,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":496,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":27},"end":{"line":35,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":496,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":497,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":18}}}
>>>
Content-Length: 1014

{"id":497,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":498,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":498,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":499,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":18}}}
>>>
Content-Length: 305

{"id":499,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":308},"contentChanges":[{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"rangeLength":6,"text":"b"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":309},"contentChanges":[{"range":{"start":{"line":31,"character":17},"end":{"line":31,"character":17}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 549

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'bl'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 464

{"jsonrpc":"2.0","id":500,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":31,"character":18},"end":{"line":31,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":18}},"message":"Use of undeclared identifier 'bl'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":500,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":310},"contentChanges":[{"range":{"start":{"line":31,"character":18},"end":{"line":31,"character":18}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 550

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ble'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 465

{"jsonrpc":"2.0","id":501,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":31,"character":19},"end":{"line":31,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":19}},"message":"Use of undeclared identifier 'ble'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":501,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":310}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":311},"contentChanges":[{"range":{"start":{"line":31,"character":18},"end":{"line":31,"character":19}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 549

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'bl'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 464

{"jsonrpc":"2.0","id":502,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":31,"character":18},"end":{"line":31,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":18}},"message":"Use of undeclared identifier 'bl'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":502,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":311}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":312},"contentChanges":[{"range":{"start":{"line":31,"character":18},"end":{"line":31,"character":18}},"rangeLength":0,"text":"u"}]}}
>>>
Content-Length: 550

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blu'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313},"contentChanges":[{"range":{"start":{"line":31,"character":19},"end":{"line":31,"character":19}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 597

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":20}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'blue'; did you mean 'true'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":314},"contentChanges":[{"range":{"start":{"line":31,"character":20},"end":{"line":31,"character":20}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 552

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blueP'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":315},"contentChanges":[{"range":{"start":{"line":31,"character":21},"end":{"line":31,"character":21}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 894

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":22}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'bluePi'; did you mean 'bluePin'? (fix available)\n\nDistanceSensor.ino.cpp:8:11: note: 'bluePin' declared here"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}},"severity":3,"message":"'bluePin' declared here\n\nDistanceSensor.ino.cpp:39:17: error: use of undeclared identifier 'bluePi'; did you mean 'bluePin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":316},"contentChanges":[{"range":{"start":{"line":31,"character":22},"end":{"line":31,"character":22}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":503,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":31,"character":23},"end":{"line":31,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":503,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":316}}}Content-Length: 207

{"jsonrpc":"2.0","id":504,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":18}}}
>>>
Content-Length: 307

{"id":504,"result":{"contents":{"kind":"markdown","value":"### variable `bluePin`  \n\n---\nType: `const int`  \nValue = `6`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int bluePin = 6\n```"},"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":505,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":23}}}
>>>
Content-Length: 311

{"id":505,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":506,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":21}}}
>>>
Content-Length: 302

{"id":506,"result":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}},"kind":1},{"range":{"start":{"line":18,"character":10},"end":{"line":18,"character":17}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":23}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":507,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":507,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":508,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":20}}}
>>>
Content-Length: 200

{"id":508,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":509,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":32,"character":20}}}
>>>
Content-Length: 200

{"id":509,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":510,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":17}}}
>>>
Content-Length: 305

{"id":510,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":42,"character":16},"end":{"line":42,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":511,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":18}}}
>>>
Content-Length: 925

{"id":511,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":512,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":18}}}
>>>
Content-Length: 200

{"id":512,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":317},"contentChanges":[{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":22}},"rangeLength":6,"text":"bluePin"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":513,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":18}}}
>>>
Content-Length: 200

{"id":513,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":514,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":17}}}
>>>
Content-Length: 305

{"id":514,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":46,"character":16},"end":{"line":46,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":515,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":23},"end":{"line":35,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":515,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":317}}}Content-Length: 207

{"jsonrpc":"2.0","id":516,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":17}}}
>>>
Content-Length: 305

{"id":516,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":46,"character":16},"end":{"line":46,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":517,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":17}}}
>>>
Content-Length: 836

{"id":517,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":518,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":17}}}
>>>
Content-Length: 200

{"id":518,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":519,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":519,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":318},"contentChanges":[{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}},"rangeLength":6,"text":"bluePin"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":520,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":20}}}
>>>
Content-Length: 200

{"id":520,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":521,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":19}}}
>>>
Content-Length: 200

{"id":521,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":522,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":23},"end":{"line":39,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":522,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":318}}}Content-Length: 206

{"jsonrpc":"2.0","id":523,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":4,"character":16}}}
>>>
Content-Length: 267

{"id":523,"result":{"contents":{"kind":"markdown","value":"### variable `greenPin`  \n\n---\nType: `const int`  \nValue = `5`  \n\n---\n```cpp\nconst int greenPin = 5\n```"},"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":18}}},"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":524,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":5,"character":14}}}
>>>
Content-Length: 480

{"id":524,"result":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}},"kind":1},{"range":{"start":{"line":18,"character":10},"end":{"line":18,"character":17}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":23}},"kind":2},{"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":23}},"kind":2},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":23}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":525,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":525,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":526,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":4,"character":15}}}
>>>
Content-Length: 213

{"id":526,"result":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":18}},"kind":1},{"range":{"start":{"line":17,"character":10},"end":{"line":17,"character":18}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":527,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":4,"character":15}}}
>>>
Content-Length: 200

{"id":527,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":4,"character":10},"end":{"line":4,"character":18}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":528,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":528,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":529,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":22}}}
>>>
Content-Length: 38

{"id":529,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":530,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":20}}}
>>>
Content-Length: 199

{"id":530,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":531,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":18,"character":16}}}
>>>
Content-Length: 200

{"id":531,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":532,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":16,"character":15}}}
>>>
Content-Length: 200

{"id":532,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":533,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":17,"character":15}}}
>>>
Content-Length: 200

{"id":533,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":4,"character":10},"end":{"line":4,"character":18}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":534,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":32,"character":17}}}
>>>
Content-Length: 305

{"id":534,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":535,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":32,"character":18}}}
>>>
Content-Length: 747

{"id":535,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":536,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":32,"character":18}}}
>>>
Content-Length: 200

{"id":536,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":537,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":19}}}
>>>
Content-Length: 199

{"id":537,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":538,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":538,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":539,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":18}}}
>>>
Content-Length: 272

{"id":539,"result":{"contents":{"kind":"markdown","value":"### variable `distance`  \n\n---\nType: `float`  \nValue = `0.000000e+00`  \n\n---\n```cpp\nfloat distance = 0\n```"},"range":{"start":{"line":40,"character":18},"end":{"line":40,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":319},"contentChanges":[{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":22}},"rangeLength":6,"text":"greenPin"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":540,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":19}}}
>>>
Content-Length: 200

{"id":540,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":541,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":19}}}
>>>
Content-Length: 200

{"id":541,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":542,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":32,"character":24},"end":{"line":32,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":542,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":319}}}Content-Length: 207

{"jsonrpc":"2.0","id":543,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":18}}}
>>>
Content-Length: 305

{"id":543,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":43,"character":16},"end":{"line":43,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":544,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":16}}}
>>>
Content-Length: 305

{"id":544,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":43,"character":16},"end":{"line":43,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":545,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":17}}}
>>>
Content-Length: 658

{"id":545,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":546,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":546,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":547,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":17}}}
>>>
Content-Length: 200

{"id":547,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":320},"contentChanges":[{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":22}},"rangeLength":6,"text":"greenPin"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":548,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":17}}}
>>>
Content-Length: 200

{"id":548,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":4,"character":10},"end":{"line":4,"character":18}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":549,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":17}}}
>>>
Content-Length: 309

{"id":549,"result":{"contents":{"kind":"markdown","value":"### variable `greenPin`  \n\n---\nType: `const int`  \nValue = `5`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int greenPin = 5\n```"},"range":{"start":{"line":43,"character":16},"end":{"line":43,"character":24}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":550,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":36,"character":24},"end":{"line":36,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":550,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":320}}}Content-Length: 207

{"jsonrpc":"2.0","id":551,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":18}}}
>>>
Content-Length: 305

{"id":551,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":47,"character":16},"end":{"line":47,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":552,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":552,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":553,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":21}}}
>>>
Content-Length: 569

{"id":553,"result":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}},"kind":1},{"range":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}},"kind":2},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":22}},"kind":2},{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":22}},"kind":2},{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":22}},"kind":2},{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":554,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":21}}}
>>>
Content-Length: 200

{"id":554,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":321},"contentChanges":[{"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":22}},"rangeLength":6,"text":"greenPin"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":555,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":56,"character":30}}}
>>>
Content-Length: 173

{"id":555,"error":{"code":0,"message":"Document is not available: file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":556,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":24},"end":{"line":40,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":556,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":321}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":321}}}Content-Length: 207

{"jsonrpc":"2.0","id":557,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":15}}}
>>>
Content-Length: 40

{"id":557,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":558,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":15}}}
>>>
Content-Length: 40

{"id":558,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 473

{"jsonrpc":"2.0","id":559,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":16},"end":{"line":23,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":559,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":560,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":29},"end":{"line":40,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":560,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":561,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":12},"end":{"line":43,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":561,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":562,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":562,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":321}}}Content-Length: 206

{"jsonrpc":"2.0","id":563,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":3,"character":17}}}
>>>
Content-Length: 263

{"id":563,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":18}}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":564,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":3,"character":20}}}
>>>
Content-Length: 40

{"id":564,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":565,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":16}}}
>>>
Content-Length: 40

{"id":565,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 493

{"jsonrpc":"2.0","id":566,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 399

{"id":566,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 473

{"jsonrpc":"2.0","id":567,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":16},"end":{"line":23,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":567,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":568,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":568,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":569,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":34}}}
>>>
Content-Length: 38

{"id":569,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":321}}}Content-Length: 212

{"jsonrpc":"2.0","id":570,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":23}}}
>>>
Content-Length: 38

{"id":570,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":571,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":20}}}
>>>
Content-Length: 40

{"id":571,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 493

{"jsonrpc":"2.0","id":572,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"message":"Use of undeclared identifier 'getDistance'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 399

{"id":572,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":321}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":321}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":321}}}Content-Length: 281

{"jsonrpc":"2.0","id":573,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":21,"character":13},"end":{"line":22,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":573,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":574,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":46}}}
>>>
Content-Length: 40

{"id":574,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":575,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":27},"end":{"line":23,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":575,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":322},"contentChanges":[{"range":{"start":{"line":23,"character":27},"end":{"line":23,"character":27}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":322}}}Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":323},"contentChanges":[{"range":{"start":{"line":23,"character":28},"end":{"line":23,"character":28}},"rangeLength":0,"text":"\n  "}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":323}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":324},"contentChanges":[{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":2}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":325},"contentChanges":[{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":0}},"rangeLength":0,"text":"  "}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":576,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":576,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":326},"contentChanges":[{"range":{"start":{"line":23,"character":28},"end":{"line":24,"character":2}},"rangeLength":3,"text":""}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":326}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 207

{"jsonrpc":"2.0","id":577,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":27}}}
>>>
Content-Length: 311

{"id":577,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":47,"character":27},"end":{"line":47,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":578,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":27}}}
>>>
Content-Length: 829

{"id":578,"result":[{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":15}},"kind":1},{"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":15}},"kind":1},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":15}},"kind":1},{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":15}},"kind":1},{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":15}},"kind":1},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":15}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":579,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":579,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":40,"character":26},"end":{"line":40,"character":27}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":580,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":23}}}
>>>
Content-Length: 311

{"id":580,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":46,"character":16},"end":{"line":46,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":581,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":28}}}
>>>
Content-Length: 40

{"id":581,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":582,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":27}}}
>>>
Content-Length: 311

{"id":582,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":42,"character":27},"end":{"line":42,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":583,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":28},"end":{"line":35,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":583,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":584,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":30,"character":26}}}
>>>
Content-Length: 38

{"id":584,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":585,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":30,"character":24},"end":{"line":30,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":585,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":30,"character":24},"end":{"line":30,"character":27}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":586,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":30,"character":26}}}
>>>
Content-Length: 40

{"id":586,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":587,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":32,"character":29}}}
>>>
Content-Length: 40

{"id":587,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":588,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":27}}}
>>>
Content-Length: 311

{"id":588,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":41,"character":27},"end":{"line":41,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":589,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":1}}}
>>>
Content-Length: 40

{"id":589,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":590,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":2}}}
>>>
Content-Length: 40

{"id":590,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":591,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":26}}}
>>>
Content-Length: 829

{"id":591,"result":[{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":15}},"kind":1},{"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":15}},"kind":1},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":15}},"kind":1},{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":15}},"kind":1},{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":15}},"kind":1},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":15}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":592,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":25},"end":{"line":35,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":592,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":35,"character":25},"end":{"line":35,"character":26}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":593,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":31}}}
>>>
Content-Length: 272

{"id":593,"result":{"contents":{"kind":"markdown","value":"### variable `distance`  \n\n---\nType: `float`  \nValue = `0.000000e+00`  \n\n---\n```cpp\nfloat distance = 0\n```"},"range":{"start":{"line":40,"character":30},"end":{"line":40,"character":38}}},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":327},"contentChanges":[{"range":{"start":{"line":35,"character":25},"end":{"line":35,"character":26}},"rangeLength":1,"text":"5"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":328},"contentChanges":[{"range":{"start":{"line":35,"character":26},"end":{"line":35,"character":26}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":594,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":27},"end":{"line":35,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":594,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":328}}}Content-Length: 212

{"jsonrpc":"2.0","id":595,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":31}}}
>>>
Content-Length: 199

{"id":595,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":596,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":30,"character":27}}}
>>>
Content-Length: 311

{"id":596,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":37,"character":27},"end":{"line":37,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":597,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":30},"end":{"line":39,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":597,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":328}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 219

{"jsonrpc":"2.0","id":598,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":26}}}
>>>
Content-Length: 38

{"id":598,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":599,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":27}}}
>>>
Content-Length: 230

{"id":599,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 281

{"jsonrpc":"2.0","id":600,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":25},"end":{"line":39,"character":28}},"context":{"diagnostics":[]}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 399

{"id":600,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":39,"character":25},"end":{"line":39,"character":28}}}]}}],"jsonrpc":"2.0"}Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":601,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":27}}}
>>>
Content-Length: 230

{"id":601,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":602,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":27}}}
>>>
Content-Length: 230

{"id":602,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":603,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":27}}}
>>>
Content-Length: 829

{"id":603,"result":[{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":15}},"kind":1},{"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":15}},"kind":1},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":15}},"kind":1},{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":15}},"kind":1},{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":15}},"kind":1},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":15}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":604,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":27}}}
>>>
Content-Length: 230

{"id":604,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":329},"contentChanges":[{"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":27}},"rangeLength":1,"text":"255"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":605,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":27}}}
>>>
Content-Length: 38

{"id":605,"result":[],"jsonrpc":"2.0"}Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":606,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":27}}}
>>>
Content-Length: 38

{"id":606,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":607,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":27}}}
>>>
Content-Length: 38

{"id":607,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":329}}}Content-Length: 281

{"jsonrpc":"2.0","id":608,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":25},"end":{"line":39,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":608,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":39,"character":25},"end":{"line":39,"character":28}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":609,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":27}}}
>>>
Content-Length: 40

{"id":609,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":330},"contentChanges":[{"range":{"start":{"line":39,"character":25},"end":{"line":39,"character":28}},"rangeLength":3,"text":"0"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":330}}}Content-Length: 334

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":331},"contentChanges":[{"range":{"start":{"line":23,"character":0},"end":{"line":24,"character":0}},"rangeLength":29,"text":"  distance = getDistance();   \n"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":610,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":26},"end":{"line":39,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":610,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":611,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":26}}}
>>>
Content-Length: 230

{"id":611,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":612,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":26},"end":{"line":39,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":612,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":613,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":10},"end":{"line":37,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":613,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":614,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":26}}}
>>>
Content-Length: 40

{"id":614,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":615,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":26}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":614}}
>>>
Content-Length: 38

{"id":615,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":616,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":26},"end":{"line":35,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":616,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":617,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":26}}}
>>>
Content-Length: 38

{"id":617,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":618,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":26}}}
>>>
Content-Length: 38

{"id":618,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":619,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":34,"character":24},"end":{"line":34,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":619,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":34,"character":24},"end":{"line":34,"character":27}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":620,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":26}}}
>>>
Content-Length: 40

{"id":620,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":621,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":26}}}
>>>
Content-Length: 38

{"id":621,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":622,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":26}}}
>>>
Content-Length: 40

{"id":622,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":623,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":26}}}
>>>
Content-Length: 38

{"id":623,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":624,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":26}}}
>>>
Content-Length: 38

{"id":624,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":332},"contentChanges":[{"range":{"start":{"line":35,"character":25},"end":{"line":35,"character":27}},"rangeLength":2,"text":"255"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":625,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":26}}}
>>>
Content-Length: 38

{"id":625,"result":[],"jsonrpc":"2.0"}Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":626,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":27}}}
>>>
Content-Length: 230

{"id":626,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":627,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":27}}}
>>>
Content-Length: 311

{"id":627,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":41,"character":27},"end":{"line":41,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":628,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":28},"end":{"line":35,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":628,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":629,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":26}}}
>>>
Content-Length: 38

{"id":629,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":332}}}Content-Length: 281

{"jsonrpc":"2.0","id":630,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":34,"character":24},"end":{"line":34,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":630,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":34,"character":24},"end":{"line":34,"character":27}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":631,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":27}}}
>>>
Content-Length: 311

{"id":631,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":41,"character":27},"end":{"line":41,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":333},"contentChanges":[{"range":{"start":{"line":34,"character":24},"end":{"line":34,"character":27}},"rangeLength":3,"text":"0"}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'getDistance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":333}}}Content-Length: 281

{"jsonrpc":"2.0","id":632,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":34,"character":25},"end":{"line":34,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":632,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":633,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":28}}}
>>>
Content-Length: 230

{"id":633,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":634,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":28},"end":{"line":39,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":634,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":635,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":30,"character":26}}}
>>>
Content-Length: 40

{"id":635,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":636,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":25}}}
>>>
Content-Length: 40

{"id":636,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":637,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":24}}}
>>>
Content-Length: 40

{"id":637,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":638,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":28}}}
>>>
Content-Length: 311

{"id":638,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":43,"character":28},"end":{"line":43,"character":29}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":639,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":22}}}
>>>
Content-Length: 307

{"id":639,"result":{"contents":{"kind":"markdown","value":"### variable `bluePin`  \n\n---\nType: `const int`  \nValue = `6`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int bluePin = 6\n```"},"range":{"start":{"line":46,"character":16},"end":{"line":46,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":333}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":333}}}Content-Length: 172

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":66}}}Content-Length: 207

{"jsonrpc":"2.0","id":640,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":45}}}
>>>
Content-Length: 40

{"id":640,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 60

{"jsonrpc":"2.0","id":641,"method":"shutdown","params":null}
>>>
Content-Length: 40

{"id":641,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3069

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":30491,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"/Users/lalit/Desktop/Coding/Arduino/DistanceSensor","rootUri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","name":"DistanceSensor"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","languageId":"cpp","version":1,"text":""}}}Content-Length: 1411

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","languageId":"cpp","version":1,"text":"const int trigPin = 11;\nconst int echoPin = 12;\n\nconst int redPin = 3;\nconst int greenPin = 5;\nconst int bluePin = 6;\n\nfloat distance = 0;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(9600);\n\n  pinMode(trigPin, OUTPUT);\n  pinMode(echoPin, INPUT);\n\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  distance = getDistance();\n\n  Serial.print(distance);\n  Serial.println(\" in\");\n\n  if (distance <= 10) {\n\n    analogWrite(redPin, 255);\n    analogWrite(bluePin, 0);\n    analogWrite(greenPin, 0);\n  } else if (10 < distance && distance < 20) {\n    analogWrite(redPin, 0);\n    analogWrite(bluePin, 255);\n    analogWrite(greenPin, 0);\n  } else {\n    analogWrite(redPin, 0);\n    analogWrite(bluePin, 0);\n    analogWrite(greenPin, 255);\n  }\n\n  delay(50);\n}\n\n\nfloat getDistance() {\n  float echoTime;\n  float calculatedDistance;\n\n  digitalWrite(trigPin, HIGH);\n  delayMicroseconds(10);\n  digitalWrite(trigPin, LOW);\n\n  echoTime = pulseIn(echoPin, HIGH);\n  calculatedDistance = echoTime / 148.0;\n\n  return(calculatedDistance);\n}"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 142

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/27","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/27","percentage":3.7037037037037037,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/27","percentage":7.407407407407407,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/27","percentage":7.407407407407407,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/27","percentage":11.11111111111111,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/27","percentage":14.814814814814815,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/27","percentage":18.51851851851852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/27","percentage":22.22222222222222,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/27","percentage":22.22222222222222,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/27","percentage":25.925925925925927,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/27","percentage":25.925925925925927,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/27","percentage":29.62962962962963,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/27","percentage":29.62962962962963,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/27","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/27","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/27","percentage":37.03703703703704,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/27","percentage":40.74074074074074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/27","percentage":40.74074074074074,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":12},"end":{"line":43,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/27","percentage":44.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/27","percentage":44.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/27","percentage":48.148148148148145,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/27","percentage":48.148148148148145,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/27","percentage":51.851851851851855,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/27","percentage":51.851851851851855,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":43}}}
>>>
Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/27","percentage":55.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/27","percentage":55.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/27","percentage":59.25925925925926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/27","percentage":62.96296296296296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/27","percentage":62.96296296296296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/27","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/27","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/27","percentage":70.37037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/27","percentage":70.37037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/27","percentage":74.07407407407408,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/27","percentage":77.77777777777777,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":43}}}
>>>
Content-Length: 38

{"id":4,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":22,"character":43},"end":{"line":22,"character":43}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/27","percentage":81.48148148148148,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/27","percentage":85.18518518518519,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/27","percentage":88.88888888888889,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/27","percentage":92.5925925925926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/27","percentage":96.29629629629629,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":6,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":7,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":4,"character":23},"end":{"line":4,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":8,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":4,"character":23},"end":{"line":4,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":4,"character":23},"end":{"line":4,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":12,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":13,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":14,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":4,"character":23},"end":{"line":4,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":15,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":4,"character":23},"end":{"line":4,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":19,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":3,"character":20}}}
>>>
Content-Length: 37

{"id":20,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}Content-Length: 277

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":21,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":22,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":17,"character":28},"end":{"line":17,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":23,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":1}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 59

{"jsonrpc":"2.0","id":24,"method":"shutdown","params":null}
>>>
Content-Length: 39

{"id":24,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3069

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":31403,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"/Users/lalit/Desktop/Coding/Arduino/DistanceSensor","rootUri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","name":"DistanceSensor"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","languageId":"cpp","version":1,"text":""}}}Content-Length: 1411

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","languageId":"cpp","version":1,"text":"const int trigPin = 11;\nconst int echoPin = 12;\n\nconst int redPin = 3;\nconst int greenPin = 5;\nconst int bluePin = 6;\n\nfloat distance = 0;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(9600);\n\n  pinMode(trigPin, OUTPUT);\n  pinMode(echoPin, INPUT);\n\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  distance = getDistance();\n\n  Serial.print(distance);\n  Serial.println(\" in\");\n\n  if (distance <= 10) {\n\n    analogWrite(redPin, 255);\n    analogWrite(bluePin, 0);\n    analogWrite(greenPin, 0);\n  } else if (10 < distance && distance < 20) {\n    analogWrite(redPin, 0);\n    analogWrite(bluePin, 255);\n    analogWrite(greenPin, 0);\n  } else {\n    analogWrite(redPin, 0);\n    analogWrite(bluePin, 0);\n    analogWrite(greenPin, 255);\n  }\n\n  delay(50);\n}\n\n\nfloat getDistance() {\n  float echoTime;\n  float calculatedDistance;\n\n  digitalWrite(trigPin, HIGH);\n  delayMicroseconds(10);\n  digitalWrite(trigPin, LOW);\n\n  echoTime = pulseIn(echoPin, HIGH);\n  calculatedDistance = echoTime / 148.0;\n\n  return(calculatedDistance);\n}"}}}Content-Length: 279

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":17,"character":28},"end":{"line":17,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/27","percentage":3.7037037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/27","percentage":7.407407407407407,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/27","percentage":11.11111111111111,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/27","percentage":14.814814814814815,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/27","percentage":18.51851851851852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/27","percentage":18.51851851851852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/27","percentage":22.22222222222222,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/27","percentage":25.925925925925927,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/27","percentage":29.62962962962963,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/27","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/27","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/27","percentage":37.03703703703704,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/27","percentage":37.03703703703704,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/27","percentage":40.74074074074074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/27","percentage":40.74074074074074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/27","percentage":44.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/27","percentage":44.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/27","percentage":48.148148148148145,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/27","percentage":51.851851851851855,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/27","percentage":55.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/27","percentage":55.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/27","percentage":59.25925925925926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/27","percentage":62.96296296296296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/27","percentage":62.96296296296296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/27","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/27","percentage":70.37037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/27","percentage":70.37037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/27","percentage":74.07407407407408,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/27","percentage":77.77777777777777,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/27","percentage":81.48148148148148,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/27","percentage":85.18518518518519,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/27","percentage":88.88888888888889,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/27","percentage":92.5925925925926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/27","percentage":96.29629629629629,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":10},"end":{"line":37,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":28},"end":{"line":39,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":32,"character":29},"end":{"line":32,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":6,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":7,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":1}}}Content-Length: 279

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":32,"character":29},"end":{"line":32,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":8,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":12},"end":{"line":43,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":1}}}Content-Length: 280

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":25,"character":25},"end":{"line":25,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":28,"character":23},"end":{"line":28,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":1}}}Content-Length: 205

{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":37,"character":3}}}
>>>
Content-Length: 39

{"id":12,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":37,"character":3}}}
>>>
Content-Length: 39

{"id":13,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":37,"character":3}}}
>>>
Content-Length: 39

{"id":14,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":37,"character":4}}}
>>>
Content-Length: 37

{"id":15,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":4},"end":{"line":39,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":28},"end":{"line":39,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":19,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":24}}}
>>>
Content-Length: 828

{"id":20,"result":[{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":15}},"kind":1},{"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":15}},"kind":1},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":15}},"kind":1},{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":15}},"kind":1},{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":15}},"kind":1},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":15}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":24},"end":{"line":40,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":21,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":22,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":2},"contentChanges":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":3}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 550

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":47,"character":20},"end":{"line":47,"character":21}},"severity":1,"code":"function_definition_not_allowed","source":"clang","message":"Function definition is not allowed here"},{"range":{"start":{"line":21,"character":12},"end":{"line":21,"character":13}},"severity":3,"message":"To match this '{'\n\nDistanceSensor.ino.cpp:72:1: error: expected '}'"}]},"jsonrpc":"2.0"}Content-Length: 375

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'\n\nDistanceSensor.ino.cpp:31:13: note: to match this '{'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":3},"contentChanges":[{"range":{"start":{"line":37,"character":9},"end":{"line":37,"character":10}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 170

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":3}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":31,"character":23}}}
>>>
Content-Length: 310

{"id":23,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":33,"character":46},"end":{"line":33,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":24,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":37,"character":3}}}
>>>
Content-Length: 39

{"id":25,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":4},"contentChanges":[{"range":{"start":{"line":33,"character":45},"end":{"line":33,"character":46}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 1145

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":8}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":15}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":15}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":43,"character":2},"end":{"line":43,"character":7}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":44,"character":0},"end":{"line":44,"character":1}},"severity":1,"code":"extraneous_closing_brace","source":"clang","message":"Extraneous closing brace ('}')"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":5},"contentChanges":[{"range":{"start":{"line":37,"character":2},"end":{"line":37,"character":3}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":7}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":5}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":6},"contentChanges":[{"range":{"start":{"line":37,"character":2},"end":{"line":37,"character":2}},"rangeLength":0,"text":"}"}]}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 1145

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":8}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":15}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":15}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":43,"character":2},"end":{"line":43,"character":7}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":44,"character":0},"end":{"line":44,"character":1}},"severity":1,"code":"extraneous_closing_brace","source":"clang","message":"Extraneous closing brace ('}')"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":26,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":6}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7},"contentChanges":[{"range":{"start":{"line":33,"character":45},"end":{"line":33,"character":45}},"rangeLength":0,"text":"{"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":33,"character":46},"end":{"line":33,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":27,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":28,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":15}}}
>>>
Content-Length: 229

{"id":28,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7}}}Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":29,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":33,"character":21}}}
>>>
Content-Length: 198

{"id":29,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":6},"end":{"line":7,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 280

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":28,"character":23},"end":{"line":28,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7}}}Content-Length: 280

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":31,"character":28},"end":{"line":31,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":31,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7}}}Content-Length: 211

{"jsonrpc":"2.0","id":32,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":26}}}
>>>
Content-Length: 229

{"id":32,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":26}}}
>>>
Content-Length: 828

{"id":33,"result":[{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":15}},"kind":1},{"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":15}},"kind":1},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":15}},"kind":1},{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":15}},"kind":1},{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":15}},"kind":1},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":15}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":26},"end":{"line":39,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":34,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":28},"end":{"line":39,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":35,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":14},"end":{"line":39,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":36,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":28},"end":{"line":39,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":37,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":38,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":39,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":16}}}
>>>
Content-Length: 199

{"id":39,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":8},"contentChanges":[{"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":31}},"rangeLength":31,"text":""}]}}Content-Length: 280

{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":40,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":8}}}Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":9},"contentChanges":[{"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 331

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":10},"contentChanges":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":4}},"rangeLength":0,"text":"    analogWrite(greenPin, 255);"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":35},"end":{"line":39,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":41,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":42,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":26}}}
>>>
Content-Length: 37

{"id":42,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":10}}}Content-Length: 211

{"jsonrpc":"2.0","id":43,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":22}}}
>>>
Content-Length: 199

{"id":43,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":5,"character":10},"end":{"line":5,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":10}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":11},"contentChanges":[{"range":{"start":{"line":40,"character":28},"end":{"line":41,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":12},"contentChanges":[{"range":{"start":{"line":40,"character":27},"end":{"line":40,"character":28}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":2},"end":{"line":43,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":27},"end":{"line":40,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":44,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":12}}}Content-Length: 411

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":14},"contentChanges":[{"range":{"start":{"line":40,"character":27},"end":{"line":40,"character":27}},"rangeLength":0,"text":";"},{"range":{"start":{"line":40,"character":28},"end":{"line":40,"character":28}},"rangeLength":0,"text":"\n"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":14}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":14}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 217

{"jsonrpc":"2.0","id":45,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 39

{"id":45,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":46,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":15}}}
>>>
Content-Length: 229

{"id":46,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":47,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":14}}}
>>>
Content-Length: 229

{"id":47,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":30},"end":{"line":35,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":48,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":14}}}Content-Length: 217

{"jsonrpc":"2.0","id":49,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 39

{"id":49,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":25,"character":25},"end":{"line":25,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":50,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":51,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":7}}}
>>>
Content-Length: 39

{"id":51,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":52,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":8}}}
>>>
Content-Length: 309

{"id":52,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":48,"character":8},"end":{"line":48,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":8}}}
>>>
Content-Length: 828

{"id":53,"result":[{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":15}},"kind":1},{"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":15}},"kind":1},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":15}},"kind":1},{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":15}},"kind":1},{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":15}},"kind":1},{"range":{"start":{"line":39,"character":8},"end":{"line":39,"character":19}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":8},"end":{"line":39,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":54,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":55,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":17}}}
>>>
Content-Length: 309

{"id":55,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":48,"character":8},"end":{"line":48,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":56,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":19}}}
>>>
Content-Length: 304

{"id":56,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":47,"character":16},"end":{"line":47,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":15},"contentChanges":[{"range":{"start":{"line":37,"character":9},"end":{"line":37,"character":9}},"rangeLength":0,"text":"{}"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":10},"end":{"line":37,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":57,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":15}}}Content-Length: 206

{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":10}}}
>>>
Content-Length: 309

{"id":58,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":59,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":37,"character":11}}}
>>>
Content-Length: 39

{"id":59,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":60,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":11},"end":{"line":37,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":60,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":61,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":10}}}
>>>
Content-Length: 309

{"id":61,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":16},"contentChanges":[{"range":{"start":{"line":37,"character":10},"end":{"line":37,"character":11}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 550

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":48,"character":20},"end":{"line":48,"character":21}},"severity":1,"code":"function_definition_not_allowed","source":"clang","message":"Function definition is not allowed here"},{"range":{"start":{"line":21,"character":12},"end":{"line":21,"character":13}},"severity":3,"message":"To match this '{'\n\nDistanceSensor.ino.cpp:73:1: error: expected '}'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":10},"end":{"line":37,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":62,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":16}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":17},"contentChanges":[{"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":2}},"rangeLength":2,"text":""}]}}
>>>
Content-Length: 550

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":48,"character":20},"end":{"line":48,"character":21}},"severity":1,"code":"function_definition_not_allowed","source":"clang","message":"Function definition is not allowed here"},{"range":{"start":{"line":21,"character":12},"end":{"line":21,"character":13}},"severity":3,"message":"To match this '{'\n\nDistanceSensor.ino.cpp:73:1: error: expected '}'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":17}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":18},"contentChanges":[{"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":0}},"rangeLength":0,"text":"  }"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":63,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":18}}}Content-Length: 217

{"jsonrpc":"2.0","id":64,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 39

{"id":64,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":65,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":12}}}
>>>
Content-Length: 229

{"id":65,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 217

{"jsonrpc":"2.0","id":66,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 39

{"id":66,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":67,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":12}}}
>>>
Content-Length: 309

{"id":67,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":68,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 39

{"id":68,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":69,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":15}}}
>>>
Content-Length: 229

{"id":69,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":70,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":15}}}
>>>
Content-Length: 309

{"id":70,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":48,"character":8},"end":{"line":48,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":71,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 39

{"id":71,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":72,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 39

{"id":72,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":73,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":8}}}
>>>
Content-Length: 828

{"id":73,"result":[{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":15}},"kind":1},{"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":15}},"kind":1},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":15}},"kind":1},{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":15}},"kind":1},{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":15}},"kind":1},{"range":{"start":{"line":39,"character":8},"end":{"line":39,"character":19}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":74,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":8},"end":{"line":39,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":74,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":19},"contentChanges":[{"range":{"start":{"line":39,"character":6},"end":{"line":39,"character":8}},"rangeLength":2,"text":""}]}}Content-Length: 278

{"jsonrpc":"2.0","id":75,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":6},"end":{"line":39,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":75,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":20},"contentChanges":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":6}},"rangeLength":2,"text":""}]}}Content-Length: 278

{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":76,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":20}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21},"contentChanges":[{"range":{"start":{"line":40,"character":28},"end":{"line":41,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 280

{"jsonrpc":"2.0","id":77,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":28},"end":{"line":40,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":77,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 211

{"jsonrpc":"2.0","id":78,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":21}}}
>>>
Content-Length: 200

{"id":78,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":47,"character":6},"end":{"line":47,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21}}}Content-Length: 217

{"jsonrpc":"2.0","id":79,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 39

{"id":79,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":80,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":22,"character":46}}}
>>>
Content-Length: 37

{"id":80,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21}}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21}}}Content-Length: 280

{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":81,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":22},"contentChanges":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"rangeLength":0,"text":"å"}]}}
>>>
Content-Length: 343

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":27}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'å'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":23},"contentChanges":[{"range":{"start":{"line":16,"character":27},"end":{"line":16,"character":27}},"rangeLength":0,"text":"å"}]}}
>>>
Content-Length: 345

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":28}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'åå'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":24},"contentChanges":[{"range":{"start":{"line":16,"character":28},"end":{"line":16,"character":28}},"rangeLength":0,"text":"å"}]}}
>>>
Content-Length: 347

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":29}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'ååå'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":25},"contentChanges":[{"range":{"start":{"line":16,"character":29},"end":{"line":16,"character":29}},"rangeLength":0,"text":"å"}]}}
>>>
Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":30}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'åååå'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 456

{"jsonrpc":"2.0","id":82,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":16,"character":30},"end":{"line":16,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":30}},"message":"Unknown type name 'åååå'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":82,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 620

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29},"contentChanges":[{"range":{"start":{"line":16,"character":29},"end":{"line":16,"character":30}},"rangeLength":1,"text":""},{"range":{"start":{"line":16,"character":28},"end":{"line":16,"character":29}},"rangeLength":1,"text":""},{"range":{"start":{"line":16,"character":27},"end":{"line":16,"character":28}},"rangeLength":1,"text":""},{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":27}},"rangeLength":1,"text":""}]}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":83,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 205

{"jsonrpc":"2.0","id":84,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":9}}}
>>>
Content-Length: 309

{"id":84,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":85,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":85,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":86,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":9},"end":{"line":37,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":86,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":30},"contentChanges":[{"range":{"start":{"line":37,"character":9},"end":{"line":37,"character":9}},"rangeLength":0,"text":"i"}]}}






Started logging.

<<<
Content-Length: 3069

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":31403,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"/Users/lalit/Desktop/Coding/Arduino/DistanceSensor","rootUri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","name":"DistanceSensor"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","languageId":"cpp","version":1,"text":""}}}Content-Length: 1414

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","languageId":"cpp","version":31,"text":"const int trigPin = 11;\nconst int echoPin = 12;\n\nconst int redPin = 3;\nconst int greenPin = 5;\nconst int bluePin = 6;\n\nfloat distance = 0;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(9600);\n\n  pinMode(trigPin, OUTPUT);\n  pinMode(echoPin, INPUT);\n\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  distance = getDistance();\n\n  Serial.print(distance);\n  Serial.println(\" in\");\n\n  if (distance <= 10) {\n\n    analogWrite(redPin, 255);\n    analogWrite(bluePin, 0);\n    analogWrite(greenPin, 0);\n  } else if (10 < distance && distance < 20) {\n    analogWrite(redPin, 0);\n    analogWrite(bluePin, 255);\n    analogWrite(greenPin, 0);\n  } else if{\n    analogWrite(redPin, 0);\n    analogWrite(greenPin, 255);\n    analogWrite(bluePin, 0);\n  }\n\n  delay(50);\n}\n\n\nfloat getDistance() {\n  float echoTime;\n  float calculatedDistance;\n\n  digitalWrite(trigPin, HIGH);\n  delayMicroseconds(10);\n  digitalWrite(trigPin, LOW);\n\n  echoTime = pulseIn(echoPin, HIGH);\n  calculatedDistance = echoTime / 148.0;\n\n  return(calculatedDistance);\n}"}}}Content-Length: 279

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":11},"end":{"line":37,"character":11}},"context":{"diagnostics":[]}}}Content-Length: 407

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":33},"contentChanges":[{"range":{"start":{"line":37,"character":10},"end":{"line":37,"character":11}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":9},"end":{"line":37,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":33}}}Content-Length: 277

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":9},"end":{"line":37,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":33}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 111

{"id":2,"error":{"code":-32602,"message":"onCodeAction called for non-added file","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3069

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":31403,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"/Users/lalit/Desktop/Coding/Arduino/DistanceSensor","rootUri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","name":"DistanceSensor"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","languageId":"cpp","version":1,"text":""}}}Content-Length: 1412

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","languageId":"cpp","version":33,"text":"const int trigPin = 11;\nconst int echoPin = 12;\n\nconst int redPin = 3;\nconst int greenPin = 5;\nconst int bluePin = 6;\n\nfloat distance = 0;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(9600);\n\n  pinMode(trigPin, OUTPUT);\n  pinMode(echoPin, INPUT);\n\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  distance = getDistance();\n\n  Serial.print(distance);\n  Serial.println(\" in\");\n\n  if (distance <= 10) {\n\n    analogWrite(redPin, 255);\n    analogWrite(bluePin, 0);\n    analogWrite(greenPin, 0);\n  } else if (10 < distance && distance < 20) {\n    analogWrite(redPin, 0);\n    analogWrite(bluePin, 255);\n    analogWrite(greenPin, 0);\n  } else {\n    analogWrite(redPin, 0);\n    analogWrite(greenPin, 255);\n    analogWrite(bluePin, 0);\n  }\n\n  delay(50);\n}\n\n\nfloat getDistance() {\n  float echoTime;\n  float calculatedDistance;\n\n  digitalWrite(trigPin, HIGH);\n  delayMicroseconds(10);\n  digitalWrite(trigPin, LOW);\n\n  echoTime = pulseIn(echoPin, HIGH);\n  calculatedDistance = echoTime / 148.0;\n\n  return(calculatedDistance);\n}"}}}Content-Length: 277

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":9},"end":{"line":37,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/27","percentage":3.7037037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/27","percentage":7.407407407407407,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/27","percentage":11.11111111111111,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/27","percentage":11.11111111111111,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/27","percentage":14.814814814814815,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/27","percentage":14.814814814814815,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/27","percentage":18.51851851851852,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/27","percentage":22.22222222222222,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/27","percentage":25.925925925925927,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/27","percentage":25.925925925925927,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/27","percentage":29.62962962962963,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/27","percentage":29.62962962962963,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/27","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/27","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/27","percentage":37.03703703703704,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/27","percentage":37.03703703703704,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/27","percentage":40.74074074074074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/27","percentage":40.74074074074074,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/27","percentage":44.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/27","percentage":44.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/27","percentage":48.148148148148145,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/27","percentage":48.148148148148145,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/27","percentage":51.851851851851855,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/27","percentage":51.851851851851855,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/27","percentage":55.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/27","percentage":59.25925925925926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/27","percentage":62.96296296296296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/27","percentage":62.96296296296296,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/27","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/27","percentage":70.37037037037037,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/27","percentage":74.07407407407408,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/27","percentage":77.77777777777777,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/27","percentage":81.48148148148148,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/27","percentage":85.18518518518519,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/27","percentage":88.88888888888889,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/27","percentage":92.5925925925926,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/27","percentage":96.29629629629629,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":33}}}Content-Length: 217

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":34,"character":24}}}
>>>
Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":34,"character":24},"end":{"line":34,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":36,"character":29},"end":{"line":36,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":5,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":14}}}
>>>
Content-Length: 223

{"id":5,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","range":{"start":{"line":137,"character":14},"end":{"line":137,"character":21}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":6,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":12}}}
>>>
Content-Length: 223

{"id":6,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","range":{"start":{"line":108,"character":14},"end":{"line":108,"character":19}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5951

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","languageId":"cpp","version":1,"text":"/*\n Print.cpp - Base class that provides print() and println()\n Copyright (c) 2008 David A. Mellis.  All right reserved.\n \n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n \n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n \n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n \n Modified 23 November 2006 by David A. Mellis\n Modified 03 August 2015 by Chuck Todd\n */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include \"Arduino.h\"\n\n#include \"Print.h\"\n\n// Public Methods //////////////////////////////////////////////////////////////\n\n/* default implementation: may be overridden */\nsize_t Print::write(const uint8_t *buffer, size_t size)\n{\n  size_t n = 0;\n  while (size--) {\n    if (write(*buffer++)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const __FlashStringHelper *ifsh)\n{\n  PGM_P p = reinterpret_cast<PGM_P>(ifsh);\n  size_t n = 0;\n  while (1) {\n    unsigned char c = pgm_read_byte(p++);\n    if (c == 0) break;\n    if (write(c)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const String &s)\n{\n  return write(s.c_str(), s.length());\n}\n\nsize_t Print::print(const char str[])\n{\n  return write(str);\n}\n\nsize_t Print::print(char c)\n{\n  return write(c);\n}\n\nsize_t Print::print(unsigned char b, int base)\n{\n  return print((unsigned long) b, base);\n}\n\nsize_t Print::print(int n, int base)\n{\n  return print((long) n, base);\n}\n\nsize_t Print::print(unsigned int n, int base)\n{\n  return print((unsigned long) n, base);\n}\n\nsize_t Print::print(long n, int base)\n{\n  if (base == 0) {\n    return write(n);\n  } else if (base == 10) {\n    if (n < 0) {\n      int t = print('-');\n      n = -n;\n      return printNumber(n, 10) + t;\n    }\n    return printNumber(n, 10);\n  } else {\n    return printNumber(n, base);\n  }\n}\n\nsize_t Print::print(unsigned long n, int base)\n{\n  if (base == 0) return write(n);\n  else return printNumber(n, base);\n}\n\nsize_t Print::print(double n, int digits)\n{\n  return printFloat(n, digits);\n}\n\nsize_t Print::println(const __FlashStringHelper *ifsh)\n{\n  size_t n = print(ifsh);\n  n += println();\n  return n;\n}\n\nsize_t Print::print(const Printable& x)\n{\n  return x.printTo(*this);\n}\n\nsize_t Print::println(void)\n{\n  return write(\"\\r\\n\");\n}\n\nsize_t Print::println(const String &s)\n{\n  size_t n = print(s);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const char c[])\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(char c)\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned char b, int base)\n{\n  size_t n = print(b, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(double num, int digits)\n{\n  size_t n = print(num, digits);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const Printable& x)\n{\n  size_t n = print(x);\n  n += println();\n  return n;\n}\n\n// Private Methods /////////////////////////////////////////////////////////////\n\nsize_t Print::printNumber(unsigned long n, uint8_t base)\n{\n  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.\n  char *str = &buf[sizeof(buf) - 1];\n\n  *str = '\\0';\n\n  // prevent crash if called with base == 1\n  if (base < 2) base = 10;\n\n  do {\n    char c = n % base;\n    n /= base;\n\n    *--str = c < 10 ? c + '0' : c + 'A' - 10;\n  } while(n);\n\n  return write(str);\n}\n\nsize_t Print::printFloat(double number, uint8_t digits) \n{ \n  size_t n = 0;\n  \n  if (isnan(number)) return print(\"nan\");\n  if (isinf(number)) return print(\"inf\");\n  if (number > 4294967040.0) return print (\"ovf\");  // constant determined empirically\n  if (number <-4294967040.0) return print (\"ovf\");  // constant determined empirically\n  \n  // Handle negative numbers\n  if (number < 0.0)\n  {\n     n += print('-');\n     number = -number;\n  }\n\n  // Round correctly so that print(1.999, 2) prints as \"2.00\"\n  double rounding = 0.5;\n  for (uint8_t i=0; i<digits; ++i)\n    rounding /= 10.0;\n  \n  number += rounding;\n\n  // Extract the integer part of the number and print it\n  unsigned long int_part = (unsigned long)number;\n  double remainder = number - (double)int_part;\n  n += print(int_part);\n\n  // Print the decimal point, but only if there are digits beyond\n  if (digits > 0) {\n    n += print('.'); \n  }\n\n  // Extract digits from the remainder one at a time\n  while (digits-- > 0)\n  {\n    remainder *= 10.0;\n    unsigned int toPrint = (unsigned int)(remainder);\n    n += print(toPrint);\n    remainder -= toPrint; \n  } \n  \n  return n;\n}\n"}}}Content-Length: 184

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 5951

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","languageId":"cpp","version":1,"text":"/*\n Print.cpp - Base class that provides print() and println()\n Copyright (c) 2008 David A. Mellis.  All right reserved.\n \n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n \n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n \n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n \n Modified 23 November 2006 by David A. Mellis\n Modified 03 August 2015 by Chuck Todd\n */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include \"Arduino.h\"\n\n#include \"Print.h\"\n\n// Public Methods //////////////////////////////////////////////////////////////\n\n/* default implementation: may be overridden */\nsize_t Print::write(const uint8_t *buffer, size_t size)\n{\n  size_t n = 0;\n  while (size--) {\n    if (write(*buffer++)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const __FlashStringHelper *ifsh)\n{\n  PGM_P p = reinterpret_cast<PGM_P>(ifsh);\n  size_t n = 0;\n  while (1) {\n    unsigned char c = pgm_read_byte(p++);\n    if (c == 0) break;\n    if (write(c)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const String &s)\n{\n  return write(s.c_str(), s.length());\n}\n\nsize_t Print::print(const char str[])\n{\n  return write(str);\n}\n\nsize_t Print::print(char c)\n{\n  return write(c);\n}\n\nsize_t Print::print(unsigned char b, int base)\n{\n  return print((unsigned long) b, base);\n}\n\nsize_t Print::print(int n, int base)\n{\n  return print((long) n, base);\n}\n\nsize_t Print::print(unsigned int n, int base)\n{\n  return print((unsigned long) n, base);\n}\n\nsize_t Print::print(long n, int base)\n{\n  if (base == 0) {\n    return write(n);\n  } else if (base == 10) {\n    if (n < 0) {\n      int t = print('-');\n      n = -n;\n      return printNumber(n, 10) + t;\n    }\n    return printNumber(n, 10);\n  } else {\n    return printNumber(n, base);\n  }\n}\n\nsize_t Print::print(unsigned long n, int base)\n{\n  if (base == 0) return write(n);\n  else return printNumber(n, base);\n}\n\nsize_t Print::print(double n, int digits)\n{\n  return printFloat(n, digits);\n}\n\nsize_t Print::println(const __FlashStringHelper *ifsh)\n{\n  size_t n = print(ifsh);\n  n += println();\n  return n;\n}\n\nsize_t Print::print(const Printable& x)\n{\n  return x.printTo(*this);\n}\n\nsize_t Print::println(void)\n{\n  return write(\"\\r\\n\");\n}\n\nsize_t Print::println(const String &s)\n{\n  size_t n = print(s);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const char c[])\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(char c)\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned char b, int base)\n{\n  size_t n = print(b, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(double num, int digits)\n{\n  size_t n = print(num, digits);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const Printable& x)\n{\n  size_t n = print(x);\n  n += println();\n  return n;\n}\n\n// Private Methods /////////////////////////////////////////////////////////////\n\nsize_t Print::printNumber(unsigned long n, uint8_t base)\n{\n  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.\n  char *str = &buf[sizeof(buf) - 1];\n\n  *str = '\\0';\n\n  // prevent crash if called with base == 1\n  if (base < 2) base = 10;\n\n  do {\n    char c = n % base;\n    n /= base;\n\n    *--str = c < 10 ? c + '0' : c + 'A' - 10;\n  } while(n);\n\n  return write(str);\n}\n\nsize_t Print::printFloat(double number, uint8_t digits) \n{ \n  size_t n = 0;\n  \n  if (isnan(number)) return print(\"nan\");\n  if (isinf(number)) return print(\"inf\");\n  if (number > 4294967040.0) return print (\"ovf\");  // constant determined empirically\n  if (number <-4294967040.0) return print (\"ovf\");  // constant determined empirically\n  \n  // Handle negative numbers\n  if (number < 0.0)\n  {\n     n += print('-');\n     number = -number;\n  }\n\n  // Round correctly so that print(1.999, 2) prints as \"2.00\"\n  double rounding = 0.5;\n  for (uint8_t i=0; i<digits; ++i)\n    rounding /= 10.0;\n  \n  number += rounding;\n\n  // Extract the integer part of the number and print it\n  unsigned long int_part = (unsigned long)number;\n  double remainder = number - (double)int_part;\n  n += print(int_part);\n\n  // Print the decimal point, but only if there are digits beyond\n  if (digits > 0) {\n    n += print('.'); \n  }\n\n  // Extract digits from the remainder one at a time\n  while (digits-- > 0)\n  {\n    remainder *= 10.0;\n    unsigned int toPrint = (unsigned int)(remainder);\n    n += print(toPrint);\n    remainder -= toPrint; \n  } \n  \n  return n;\n}\n"}}}Content-Length: 184

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}}}
>>>
Content-Length: 194

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 194

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":33}}}Content-Length: 210

{"jsonrpc":"2.0","id":7,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":10}}}
>>>
Content-Length: 223

{"id":7,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","range":{"start":{"line":137,"character":14},"end":{"line":137,"character":21}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5951

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","languageId":"cpp","version":1,"text":"/*\n Print.cpp - Base class that provides print() and println()\n Copyright (c) 2008 David A. Mellis.  All right reserved.\n \n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n \n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n \n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n \n Modified 23 November 2006 by David A. Mellis\n Modified 03 August 2015 by Chuck Todd\n */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include \"Arduino.h\"\n\n#include \"Print.h\"\n\n// Public Methods //////////////////////////////////////////////////////////////\n\n/* default implementation: may be overridden */\nsize_t Print::write(const uint8_t *buffer, size_t size)\n{\n  size_t n = 0;\n  while (size--) {\n    if (write(*buffer++)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const __FlashStringHelper *ifsh)\n{\n  PGM_P p = reinterpret_cast<PGM_P>(ifsh);\n  size_t n = 0;\n  while (1) {\n    unsigned char c = pgm_read_byte(p++);\n    if (c == 0) break;\n    if (write(c)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const String &s)\n{\n  return write(s.c_str(), s.length());\n}\n\nsize_t Print::print(const char str[])\n{\n  return write(str);\n}\n\nsize_t Print::print(char c)\n{\n  return write(c);\n}\n\nsize_t Print::print(unsigned char b, int base)\n{\n  return print((unsigned long) b, base);\n}\n\nsize_t Print::print(int n, int base)\n{\n  return print((long) n, base);\n}\n\nsize_t Print::print(unsigned int n, int base)\n{\n  return print((unsigned long) n, base);\n}\n\nsize_t Print::print(long n, int base)\n{\n  if (base == 0) {\n    return write(n);\n  } else if (base == 10) {\n    if (n < 0) {\n      int t = print('-');\n      n = -n;\n      return printNumber(n, 10) + t;\n    }\n    return printNumber(n, 10);\n  } else {\n    return printNumber(n, base);\n  }\n}\n\nsize_t Print::print(unsigned long n, int base)\n{\n  if (base == 0) return write(n);\n  else return printNumber(n, base);\n}\n\nsize_t Print::print(double n, int digits)\n{\n  return printFloat(n, digits);\n}\n\nsize_t Print::println(const __FlashStringHelper *ifsh)\n{\n  size_t n = print(ifsh);\n  n += println();\n  return n;\n}\n\nsize_t Print::print(const Printable& x)\n{\n  return x.printTo(*this);\n}\n\nsize_t Print::println(void)\n{\n  return write(\"\\r\\n\");\n}\n\nsize_t Print::println(const String &s)\n{\n  size_t n = print(s);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const char c[])\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(char c)\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned char b, int base)\n{\n  size_t n = print(b, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(double num, int digits)\n{\n  size_t n = print(num, digits);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const Printable& x)\n{\n  size_t n = print(x);\n  n += println();\n  return n;\n}\n\n// Private Methods /////////////////////////////////////////////////////////////\n\nsize_t Print::printNumber(unsigned long n, uint8_t base)\n{\n  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.\n  char *str = &buf[sizeof(buf) - 1];\n\n  *str = '\\0';\n\n  // prevent crash if called with base == 1\n  if (base < 2) base = 10;\n\n  do {\n    char c = n % base;\n    n /= base;\n\n    *--str = c < 10 ? c + '0' : c + 'A' - 10;\n  } while(n);\n\n  return write(str);\n}\n\nsize_t Print::printFloat(double number, uint8_t digits) \n{ \n  size_t n = 0;\n  \n  if (isnan(number)) return print(\"nan\");\n  if (isinf(number)) return print(\"inf\");\n  if (number > 4294967040.0) return print (\"ovf\");  // constant determined empirically\n  if (number <-4294967040.0) return print (\"ovf\");  // constant determined empirically\n  \n  // Handle negative numbers\n  if (number < 0.0)\n  {\n     n += print('-');\n     number = -number;\n  }\n\n  // Round correctly so that print(1.999, 2) prints as \"2.00\"\n  double rounding = 0.5;\n  for (uint8_t i=0; i<digits; ++i)\n    rounding /= 10.0;\n  \n  number += rounding;\n\n  // Extract the integer part of the number and print it\n  unsigned long int_part = (unsigned long)number;\n  double remainder = number - (double)int_part;\n  n += print(int_part);\n\n  // Print the decimal point, but only if there are digits beyond\n  if (digits > 0) {\n    n += print('.'); \n  }\n\n  // Extract digits from the remainder one at a time\n  while (digits-- > 0)\n  {\n    remainder *= 10.0;\n    unsigned int toPrint = (unsigned int)(remainder);\n    n += print(toPrint);\n    remainder -= toPrint; \n  } \n  \n  return n;\n}\n"}}}Content-Length: 184

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}}}
>>>
Content-Length: 194

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":4,"character":9}}}
>>>
Content-Length: 38

{"id":8,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 263

{"id":9,"result":{"contents":{"kind":"markdown","value":"### variable `trigPin`  \n\n---\nType: `const int`  \nValue = `11`  \n\n---\n```cpp\nconst int trigPin = 11\n```"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":5}}},"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 390

{"id":10,"result":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":17}},"kind":1},{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":17}},"kind":2},{"range":{"start":{"line":51,"character":15},"end":{"line":51,"character":22}},"kind":2},{"range":{"start":{"line":53,"character":15},"end":{"line":53,"character":22}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":34},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":35},"contentChanges":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":35}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":36},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"#"}]}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":12,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37},"contentChanges":[{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":1}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 352

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":2}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":38},"contentChanges":[{"range":{"start":{"line":0,"character":2},"end":{"line":0,"character":2}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 352

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":3}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":39},"contentChanges":[{"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":3}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 352

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":4}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":40},"contentChanges":[{"range":{"start":{"line":0,"character":4},"end":{"line":0,"character":4}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 352

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":5}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":41},"contentChanges":[{"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":5}},"rangeLength":0,"text":"u"}]}}
>>>
Content-Length: 352

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":6}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":42},"contentChanges":[{"range":{"start":{"line":0,"character":6},"end":{"line":0,"character":6}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 352

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":7}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":43},"contentChanges":[{"range":{"start":{"line":0,"character":7},"end":{"line":0,"character":7}},"rangeLength":0,"text":"e"}]}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":44},"contentChanges":[{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":8}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"severity":1,"code":"pp_expects_filename","source":"clang","message":"Expected \"FILENAME\" or \u003cFILENAME\u003e"}]},"jsonrpc":"2.0"}Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"severity":1,"code":"pp_expects_filename","source":"clang","message":"Expected \"FILENAME\" or \u003cFILENAME\u003e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":44}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":45},"contentChanges":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":9}},"rangeLength":0,"text":"<"}]}}
>>>
Content-Length: 568

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '\u003e'\n\nDistanceSensor.ino.cpp:3:10: note: to match this '\u003c'"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":3,"message":"To match this '\u003c'\n\nDistanceSensor.ino.cpp:5:1: error: expected '\u003e'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":46},"contentChanges":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":10}},"rangeLength":0,"text":"S"}]}}
>>>
Content-Length: 568

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '\u003e'\n\nDistanceSensor.ino.cpp:3:10: note: to match this '\u003c'"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":3,"message":"To match this '\u003c'\n\nDistanceSensor.ino.cpp:5:1: error: expected '\u003e'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":47},"contentChanges":[{"range":{"start":{"line":0,"character":11},"end":{"line":0,"character":11}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 568

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '\u003e'\n\nDistanceSensor.ino.cpp:3:10: note: to match this '\u003c'"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":3,"message":"To match this '\u003c'\n\nDistanceSensor.ino.cpp:5:1: error: expected '\u003e'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":48},"contentChanges":[{"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":12}},"rangeLength":0,"text":"r"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":49},"contentChanges":[{"range":{"start":{"line":0,"character":13},"end":{"line":0,"character":13}},"rangeLength":0,"text":"v"}]}}
>>>
Content-Length: 568

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '\u003e'\n\nDistanceSensor.ino.cpp:3:10: note: to match this '\u003c'"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":3,"message":"To match this '\u003c'\n\nDistanceSensor.ino.cpp:5:1: error: expected '\u003e'"}]},"jsonrpc":"2.0"}Content-Length: 568

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '\u003e'\n\nDistanceSensor.ino.cpp:3:10: note: to match this '\u003c'"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":3,"message":"To match this '\u003c'\n\nDistanceSensor.ino.cpp:5:1: error: expected '\u003e'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":50},"contentChanges":[{"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 568

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '\u003e'\n\nDistanceSensor.ino.cpp:3:10: note: to match this '\u003c'"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":3,"message":"To match this '\u003c'\n\nDistanceSensor.ino.cpp:5:1: error: expected '\u003e'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":51},"contentChanges":[{"range":{"start":{"line":0,"character":15},"end":{"line":0,"character":15}},"rangeLength":0,"text":"."}]}}Content-Length: 261

{"jsonrpc":"2.0","id":13,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":0,"character":16},"context":{"triggerKind":2,"triggerCharacter":"."}}}
>>>
Content-Length: 68

{"id":13,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 568

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '\u003e'\n\nDistanceSensor.ino.cpp:3:10: note: to match this '\u003c'"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":3,"message":"To match this '\u003c'\n\nDistanceSensor.ino.cpp:5:1: error: expected '\u003e'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":52},"contentChanges":[{"range":{"start":{"line":0,"character":16},"end":{"line":0,"character":16}},"rangeLength":0,"text":"h"}]}}
>>>
Content-Length: 568

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '\u003e'\n\nDistanceSensor.ino.cpp:3:10: note: to match this '\u003c'"},{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":3,"message":"To match this '\u003c'\n\nDistanceSensor.ino.cpp:5:1: error: expected '\u003e'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":14,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":52}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":53},"contentChanges":[{"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"rangeLength":0,"text":">"}]}}Content-Length: 261

{"jsonrpc":"2.0","id":15,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":0,"character":18},"context":{"triggerKind":2,"triggerCharacter":">"}}}
>>>
Content-Length: 68

{"id":15,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 343

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":18}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'Servo.h' file not found"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 448

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":0,"character":18},"end":{"line":0,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":18}},"message":"'Servo.h' file not found","severity":1,"code":"pp_file_not_found","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":53}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":4,"jsonrpc":"2.0"}Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":0,"character":10}}}Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
>>>
Content-Length: 39

{"id":18,"result":null,"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/8","percentage":12.5,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 142

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/8","percentage":25,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/8","percentage":37.5,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 142

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/8","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/8","percentage":62.5,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 142

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/8","percentage":75,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/8","percentage":87.5,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 467

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":18}},"message":"'Servo.h' file not found","severity":1,"code":"pp_file_not_found","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 37

{"id":19,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 467

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":18}},"message":"'Servo.h' file not found","severity":1,"code":"pp_file_not_found","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 37

{"id":20,"result":[],"jsonrpc":"2.0"}Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":0,"character":10}}}
>>>
Content-Length: 39

{"id":21,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":22,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":0,"character":12}}}
>>>
Content-Length: 39

{"id":23,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":53}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":54},"contentChanges":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":54}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":55},"contentChanges":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":0}},"rangeLength":0,"text":"f"}]}}
>>>
Content-Length: 340

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":1}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'f'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":56},"contentChanges":[{"range":{"start":{"line":10,"character":1},"end":{"line":10,"character":1}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'fl'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":57},"contentChanges":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":2}},"rangeLength":0,"text":"o"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":58},"contentChanges":[{"range":{"start":{"line":10,"character":3},"end":{"line":10,"character":3}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 390

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'floa'; did you mean 'float'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":59},"contentChanges":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":4}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":60},"contentChanges":[{"range":{"start":{"line":10,"character":5},"end":{"line":10,"character":5}},"rangeLength":0,"text":" "}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":61},"contentChanges":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":6}},"rangeLength":0,"text":"s"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":62},"contentChanges":[{"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":7}},"rangeLength":0,"text":"e"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":63},"contentChanges":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":8}},"rangeLength":0,"text":"r"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":64},"contentChanges":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":9}},"rangeLength":0,"text":"r"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":65},"contentChanges":[{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":10}},"rangeLength":0,"text":"v"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":66},"contentChanges":[{"range":{"start":{"line":10,"character":11},"end":{"line":10,"character":11}},"rangeLength":0,"text":"e"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":67},"contentChanges":[{"range":{"start":{"line":10,"character":12},"end":{"line":10,"character":12}},"rangeLength":0,"text":"r"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":13},"end":{"line":10,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":24,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":67}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":68},"contentChanges":[{"range":{"start":{"line":10,"character":12},"end":{"line":10,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":69},"contentChanges":[{"range":{"start":{"line":10,"character":11},"end":{"line":10,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":70},"contentChanges":[{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":71},"contentChanges":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":72},"contentChanges":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":73},"contentChanges":[{"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":74},"contentChanges":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":75},"contentChanges":[{"range":{"start":{"line":10,"character":5},"end":{"line":10,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":76},"contentChanges":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":5}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 390

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'floa'; did you mean 'float'? (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":77},"contentChanges":[{"range":{"start":{"line":10,"character":3},"end":{"line":10,"character":4}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'flo'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":78},"contentChanges":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'fl'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":79},"contentChanges":[{"range":{"start":{"line":10,"character":1},"end":{"line":10,"character":2}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 340

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":1}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'f'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":80},"contentChanges":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":1}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":81},"contentChanges":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":0}},"rangeLength":0,"text":"S"}]}}
>>>
Content-Length: 340

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":1}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'S'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":82},"contentChanges":[{"range":{"start":{"line":10,"character":1},"end":{"line":10,"character":1}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'Se'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":83},"contentChanges":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":2}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'Ser'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":84},"contentChanges":[{"range":{"start":{"line":10,"character":3},"end":{"line":10,"character":3}},"rangeLength":0,"text":"v"}]}}
>>>
Content-Length: 497

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'Serv'; did you mean 'Servo'? (fix available)\n\n/Applications/Arduino.app/Contents/Java/libraries/Servo/src/Servo.h:104:7:\nnote: 'Servo' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":85},"contentChanges":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":4}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 498

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'Servi'; did you mean 'Servo'? (fix available)\n\n/Applications/Arduino.app/Contents/Java/libraries/Servo/src/Servo.h:104:7:\nnote: 'Servo' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 603

{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":5},"end":{"line":10,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"message":"Unknown type name 'Servi'; did you mean 'Servo'? (fix available)\n\n/Applications/Arduino.app/Contents/Java/libraries/Servo/src/Servo.h:104:7:\nnote: 'Servo' declared here","severity":1,"code":"unknown_typename_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":25,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":85}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":86},"contentChanges":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":5}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 497

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":4}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'Serv'; did you mean 'Servo'? (fix available)\n\n/Applications/Arduino.app/Contents/Java/libraries/Servo/src/Servo.h:104:7:\nnote: 'Servo' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 602

{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":4}},"message":"Unknown type name 'Serv'; did you mean 'Servo'? (fix available)\n\n/Applications/Arduino.app/Contents/Java/libraries/Servo/src/Servo.h:104:7:\nnote: 'Servo' declared here","severity":1,"code":"unknown_typename_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":26,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":87},"contentChanges":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":4}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":5},"end":{"line":10,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":27,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":87}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":88},"contentChanges":[{"range":{"start":{"line":10,"character":5},"end":{"line":10,"character":5}},"rangeLength":0,"text":" "}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":89},"contentChanges":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":6}},"rangeLength":0,"text":"s"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":28,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":89}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":90},"contentChanges":[{"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":7}},"rangeLength":0,"text":"e"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":91},"contentChanges":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":8}},"rangeLength":0,"text":"r"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":92},"contentChanges":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":9}},"rangeLength":0,"text":"v"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":93},"contentChanges":[{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":10}},"rangeLength":0,"text":"o"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":11},"end":{"line":10,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":29,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":94},"contentChanges":[{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":95},"contentChanges":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":96},"contentChanges":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":97},"contentChanges":[{"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 278

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":98},"contentChanges":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":98}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":99},"contentChanges":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":6}},"rangeLength":0,"text":"M"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":100},"contentChanges":[{"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":7}},"rangeLength":0,"text":"i"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":31,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":101},"contentChanges":[{"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":102},"contentChanges":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":103},"contentChanges":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":6}},"rangeLength":0,"text":"m"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":104},"contentChanges":[{"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":7}},"rangeLength":0,"text":"i"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":105},"contentChanges":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":8}},"rangeLength":0,"text":"c"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":106},"contentChanges":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":9}},"rangeLength":0,"text":"r"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":107},"contentChanges":[{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":10}},"rangeLength":0,"text":"o"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":11},"end":{"line":10,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":32,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":108},"contentChanges":[{"range":{"start":{"line":10,"character":11},"end":{"line":10,"character":11}},"rangeLength":0,"text":"S"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":109},"contentChanges":[{"range":{"start":{"line":10,"character":12},"end":{"line":10,"character":12}},"rangeLength":0,"text":"e"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":110},"contentChanges":[{"range":{"start":{"line":10,"character":13},"end":{"line":10,"character":13}},"rangeLength":0,"text":"r"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":14},"end":{"line":10,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":33,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":111},"contentChanges":[{"range":{"start":{"line":10,"character":14},"end":{"line":10,"character":14}},"rangeLength":0,"text":"v"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":15},"end":{"line":10,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":34,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":112},"contentChanges":[{"range":{"start":{"line":10,"character":15},"end":{"line":10,"character":15}},"rangeLength":0,"text":"i"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":16},"end":{"line":10,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":35,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":112}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":113},"contentChanges":[{"range":{"start":{"line":10,"character":15},"end":{"line":10,"character":16}},"rangeLength":1,"text":""}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":114},"contentChanges":[{"range":{"start":{"line":10,"character":15},"end":{"line":10,"character":15}},"rangeLength":0,"text":"o"}]}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":114}}}Content-Length: 280

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":16},"end":{"line":10,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":36,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":27},"end":{"line":26,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":37,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":114}}}Content-Length: 218

{"jsonrpc":"2.0","id":38,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":10,"character":16}}}
>>>
Content-Length: 124

{"id":38,"result":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":16},"end":{"line":10,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":39,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":115},"contentChanges":[{"range":{"start":{"line":10,"character":16},"end":{"line":10,"character":16}},"rangeLength":0,"text":";"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":17},"end":{"line":10,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":40,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":115}}}Content-Length: 280

{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":17,"character":26},"end":{"line":17,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":41,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":115}}}Content-Length: 218

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":13,"character":34}}}
>>>
Content-Length: 37

{"id":42,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":43,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":13,"character":34}}}
>>>
Content-Length: 37

{"id":43,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":13,"character":34},"end":{"line":13,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":44,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":115}}}Content-Length: 217

{"jsonrpc":"2.0","id":45,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":2,"character":21}}}
>>>
Content-Length: 37

{"id":45,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":46,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":2,"character":20},"end":{"line":2,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":46,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":47,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":2,"character":19}}}
>>>
Content-Length: 266

{"id":47,"result":{"contents":{"kind":"markdown","value":"### variable `trigPin`  \n\n---\nType: `const int`  \nValue = `11`  \n\n---\n```cpp\nconst int trigPin = 11\n```"},"range":{"start":{"line":4,"character":18},"end":{"line":4,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":116},"contentChanges":[{"range":{"start":{"line":2,"character":20},"end":{"line":2,"character":22}},"rangeLength":2,"text":"1"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":117},"contentChanges":[{"range":{"start":{"line":2,"character":21},"end":{"line":2,"character":21}},"rangeLength":0,"text":"0"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":2,"character":22},"end":{"line":2,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":48,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":117}}}Content-Length: 205

{"jsonrpc":"2.0","id":49,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":5,"character":13}}}
>>>
Content-Length: 262

{"id":49,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":50,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":3,"character":20}}}
>>>
Content-Length: 39

{"id":50,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":3,"character":21}}}
>>>
Content-Length: 37

{"id":51,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":118},"contentChanges":[{"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":22}},"rangeLength":2,"text":"1"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":52,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":118}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":119},"contentChanges":[{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"rangeLength":0,"text":"1"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":53,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":3,"character":22},"end":{"line":3,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":53,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":119}}}Content-Length: 407

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":121},"contentChanges":[{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":22}},"rangeLength":1,"text":""},{"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":21}},"rangeLength":1,"text":"12"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":54,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 407

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":123},"contentChanges":[{"range":{"start":{"line":2,"character":21},"end":{"line":2,"character":22}},"rangeLength":1,"text":""},{"range":{"start":{"line":2,"character":20},"end":{"line":2,"character":21}},"rangeLength":1,"text":"11"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":55,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":2,"character":20},"end":{"line":2,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":55,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":123}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":123}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":123}}}Content-Length: 210

{"jsonrpc":"2.0","id":56,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":19,"character":7}}}
>>>
Content-Length: 228

{"id":56,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","range":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5578

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out &= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) && defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) && defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out &= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) & bit) return HIGH;\n\treturn LOW;\n}\n"}}}Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}}
>>>
Content-Length: 201

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":21,"character":27},"end":{"line":21,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":57,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":26,"character":14}}}
>>>
Content-Length: 247

{"id":58,"result":{"contents":{"kind":"markdown","value":"### function `getDistance`  \n\n---\n→ `float`  \n\n---\n```cpp\nfloat getDistance()\n```"},"range":{"start":{"line":35,"character":13},"end":{"line":35,"character":24}}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":59,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":28,"character":20}}}
>>>
Content-Length: 303

{"id":59,"result":{"contents":{"kind":"markdown","value":"### variable `distance`  \n\n---\nType: `float`  \nValue = `0.000000e+00`  \nPassed (converted to double)  \n\n---\n```cpp\nfloat distance = 0\n```"},"range":{"start":{"line":37,"character":15},"end":{"line":37,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":124},"contentChanges":[{"range":{"start":{"line":21,"character":27},"end":{"line":21,"character":27}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 409

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":125},"contentChanges":[{"range":{"start":{"line":22,"character":2},"end":{"line":22,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":125}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":126},"contentChanges":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":2}},"rangeLength":0,"text":"m"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'm'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":127},"contentChanges":[{"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":3}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 459

{"jsonrpc":"2.0","id":60,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":4},"end":{"line":23,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":4}},"message":"Use of undeclared identifier 'mi'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":60,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":128},"contentChanges":[{"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":4}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'm'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 458

{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":3}},"message":"Use of undeclared identifier 'm'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":61,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":129},"contentChanges":[{"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":3}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mc'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":130},"contentChanges":[{"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":4}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'm'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":131},"contentChanges":[{"range":{"start":{"line":23,"character":3},"end":{"line":23,"character":3}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":132},"contentChanges":[{"range":{"start":{"line":23,"character":4},"end":{"line":23,"character":4}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 355

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mic'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":133},"contentChanges":[{"range":{"start":{"line":23,"character":5},"end":{"line":23,"character":5}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'micr'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":134},"contentChanges":[{"range":{"start":{"line":23,"character":6},"end":{"line":23,"character":6}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 737

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":7}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'micro'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 642

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":7},"end":{"line":23,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":7}},"message":"Use of undeclared identifier 'micro'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":62,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":134}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":135},"contentChanges":[{"range":{"start":{"line":23,"character":7},"end":{"line":23,"character":7}},"rangeLength":0,"text":"S"}]}}
>>>
Content-Length: 738

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microS'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":136},"contentChanges":[{"range":{"start":{"line":23,"character":8},"end":{"line":23,"character":8}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 739

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSe'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":137},"contentChanges":[{"range":{"start":{"line":23,"character":9},"end":{"line":23,"character":9}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 916

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSer'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:33:3: error: use of undeclared identifier 'microSer'; did you mean 'microServo'?"},{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":138},"contentChanges":[{"range":{"start":{"line":23,"character":10},"end":{"line":23,"character":10}},"rangeLength":0,"text":"v"}]}}
>>>
Content-Length: 918

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":11}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microServ'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:33:3: error: use of undeclared identifier 'microServ'; did you mean 'microServo'?"},{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 586

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":11},"end":{"line":23,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":11}},"message":"Use of undeclared identifier 'microServ'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":63,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":139},"contentChanges":[{"range":{"start":{"line":23,"character":11},"end":{"line":23,"character":11}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":140},"contentChanges":[{"range":{"start":{"line":23,"character":12},"end":{"line":23,"character":12}},"rangeLength":0,"text":"."}]}}Content-Length: 262

{"jsonrpc":"2.0","id":64,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":13},"context":{"triggerKind":2,"triggerCharacter":"."}}}
>>>
Content-Length: 2033

{"id":64,"result":{"isIncomplete":false,"items":[{"label":" readMicroseconds()","kind":2,"detail":"int","sortText":"3e97ae13readMicroseconds","filterText":"readMicroseconds","insertText":"readMicroseconds()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"newText":"readMicroseconds()"}},{"label":" writeMicroseconds(int value)","kind":2,"detail":"void","sortText":"3e97ae13writeMicroseconds","filterText":"writeMicroseconds","insertText":"writeMicroseconds(${1:int value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"newText":"writeMicroseconds(${1:int value})"}},{"label":" attach(…)","kind":2,"detail":"[2 overloads]","sortText":"3ee51eb8attach","filterText":"attach","insertText":"attach($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"newText":"attach($0)"}},{"label":" attached()","kind":2,"detail":"bool","sortText":"3ee51eb8attached","filterText":"attached","insertText":"attached()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"newText":"attached()"}},{"label":" detach()","kind":2,"detail":"void","sortText":"3ee51eb8detach","filterText":"detach","insertText":"detach()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"newText":"detach()"}},{"label":" read()","kind":2,"detail":"int","sortText":"3ee51eb8read","filterText":"read","insertText":"read()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"newText":"read()"}},{"label":" write(int value)","kind":2,"detail":"void","sortText":"3ee51eb8write","filterText":"write","insertText":"write(${1:int value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"newText":"write(${1:int value})"}}]},"jsonrpc":"2.0"}Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":65,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":140}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":66,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":141},"contentChanges":[{"range":{"start":{"line":23,"character":13},"end":{"line":23,"character":13}},"rangeLength":0,"text":"attach()"}]}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 928

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":19}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'attach'\n\n/Applications/Arduino.app/Contents/Java/libraries/Servo/src/Servo.h:108:11:\nnote: candidate function not viable: requires single argument 'pin', but no arguments were provided\n\n/Applications/Arduino.app/Contents/Java/libraries/Servo/src/Servo.h:109:11:\nnote: candidate function not viable: requires 3 arguments, but 0 were provided"},{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":20},"end":{"line":23,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":67,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":141}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":142},"contentChanges":[{"range":{"start":{"line":23,"character":20},"end":{"line":23,"character":20}},"rangeLength":0,"text":"9"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":1}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":68,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":69,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":27,"character":22}}}
>>>
Content-Length: 37

{"id":69,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 211

{"jsonrpc":"2.0","id":70,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":27,"character":24}}}
>>>
Content-Length: 37

{"id":70,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":142}}}Content-Length: 211

{"jsonrpc":"2.0","id":71,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":27,"character":23}}}
>>>
Content-Length: 37

{"id":71,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":72,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":27,"character":16}}}
>>>
Content-Length: 37

{"id":72,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":73,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":27,"character":16}}}
>>>
Content-Length: 37

{"id":73,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":142}}}Content-Length: 280

{"jsonrpc":"2.0","id":74,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":14,"character":21},"end":{"line":14,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":74,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":142}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 280

{"jsonrpc":"2.0","id":75,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":12,"character":14},"end":{"line":12,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":75,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 210

{"jsonrpc":"2.0","id":76,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":6,"character":12}}}
>>>
Content-Length: 199

{"id":76,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":6,"character":10},"end":{"line":6,"character":18}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":142}}}Content-Length: 278

{"jsonrpc":"2.0","id":77,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":7,"character":22},"end":{"line":7,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":77,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":142}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":142}}}Content-Length: 205

{"jsonrpc":"2.0","id":78,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":24,"character":0}}}
>>>
Content-Length: 39

{"id":78,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":79,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":20,"character":22}}}Content-Length: 206

{"jsonrpc":"2.0","id":80,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":20,"character":22}}}
>>>
Content-Length: 221

{"id":79,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","range":{"start":{"line":43,"character":8},"end":{"line":43,"character":14}}}],"jsonrpc":"2.0"}Content-Length: 216

{"id":80,"result":{"contents":{"kind":"markdown","value":"### macro `OUTPUT`  \n\n---\n```cpp\n#define OUTPUT 0x1\n```"},"range":{"start":{"line":29,"character":20},"end":{"line":29,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 8117

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 184

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}}
>>>
Content-Length: 194

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":142}}}Content-Length: 280

{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":81,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":143},"contentChanges":[{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":22}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":82,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":23,"character":23},"end":{"line":23,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":82,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":143}}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":143}}}Content-Length: 206

{"jsonrpc":"2.0","id":83,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":26}}}
>>>
Content-Length: 310

{"id":83,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":45,"character":26},"end":{"line":45,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":84,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":29},"end":{"line":37,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":84,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":144},"contentChanges":[{"range":{"start":{"line":37,"character":29},"end":{"line":37,"character":29}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":144}}}Content-Length: 206

{"jsonrpc":"2.0","id":85,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":28}}}
>>>
Content-Length: 39

{"id":85,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":144}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":145},"contentChanges":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":4}},"rangeLength":4,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino","version":1}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":145}}}Content-Length: 211

{"jsonrpc":"2.0","id":86,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":22}}}
>>>
Content-Length: 198

{"id":86,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":9,"character":6},"end":{"line":9,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":87,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":21}}}
>>>
Content-Length: 198

{"id":87,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":9,"character":6},"end":{"line":9,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":88,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":20}}}
>>>
Content-Length: 207

{"id":88,"result":[{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","range":{"start":{"line":232,"character":15},"end":{"line":232,"character":21}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 11436

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","languageId":"cpp","version":1,"text":"/*\n Servo.cpp - Interrupt driven Servo library for Arduino using 16 bit timers- Version 2\n Copyright (c) 2009 Michael Margolis.  All right reserved.\n\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\n#if defined(ARDUINO_ARCH_AVR)\n\n#include <avr/interrupt.h>\n#include <Arduino.h>\n\n#include \"Servo.h\"\n\n#define usToTicks(_us)    (( clockCyclesPerMicrosecond()* _us) / 8)     // converts microseconds to tick (assumes prescale of 8)  // 12 Aug 2009\n#define ticksToUs(_ticks) (( (unsigned)_ticks * 8)/ clockCyclesPerMicrosecond() ) // converts from ticks back to microseconds\n\n\n#define TRIM_DURATION       2                               // compensation ticks to trim adjust for digitalWrite delays // 12 August 2009\n\n//#define NBR_TIMERS        (MAX_SERVOS / SERVOS_PER_TIMER)\n\nstatic servo_t servos[MAX_SERVOS];                          // static array of servo structures\nstatic volatile int8_t Channel[_Nbr_16timers ];             // counter for the servo being pulsed for each timer (or -1 if refresh interval)\n\nuint8_t ServoCount = 0;                                     // the total number of attached servos\n\n\n// convenience macros\n#define SERVO_INDEX_TO_TIMER(_servo_nbr) ((timer16_Sequence_t)(_servo_nbr / SERVOS_PER_TIMER)) // returns the timer controlling this servo\n#define SERVO_INDEX_TO_CHANNEL(_servo_nbr) (_servo_nbr % SERVOS_PER_TIMER)       // returns the index of the servo on this timer\n#define SERVO_INDEX(_timer,_channel)  ((_timer*SERVOS_PER_TIMER) + _channel)     // macro to access servo index by timer and channel\n#define SERVO(_timer,_channel)  (servos[SERVO_INDEX(_timer,_channel)])            // macro to access servo class by timer and channel\n\n#define SERVO_MIN() (MIN_PULSE_WIDTH - this->min * 4)  // minimum value in uS for this servo\n#define SERVO_MAX() (MAX_PULSE_WIDTH - this->max * 4)  // maximum value in uS for this servo\n\n/************ static functions common to all instances ***********************/\n\nstatic inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)\n{\n  if( Channel[timer] < 0 )\n    *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer\n  else{\n    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated\n  }\n\n  Channel[timer]++;    // increment to the next channel\n  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {\n    *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;\n    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high\n  }\n  else {\n    // finished all channels so wait for the refresh period to expire before starting over\n    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed\n      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);\n    else\n      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed\n    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel\n  }\n}\n\n#ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform\n// Interrupt handlers for Arduino\n#if defined(_useTimer1)\nSIGNAL (TIMER1_COMPA_vect)\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n\n#if defined(_useTimer3)\nSIGNAL (TIMER3_COMPA_vect)\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n\n#if defined(_useTimer4)\nSIGNAL (TIMER4_COMPA_vect)\n{\n  handle_interrupts(_timer4, &TCNT4, &OCR4A);\n}\n#endif\n\n#if defined(_useTimer5)\nSIGNAL (TIMER5_COMPA_vect)\n{\n  handle_interrupts(_timer5, &TCNT5, &OCR5A);\n}\n#endif\n\n#elif defined WIRING\n// Interrupt handlers for Wiring\n#if defined(_useTimer1)\nvoid Timer1Service()\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n#if defined(_useTimer3)\nvoid Timer3Service()\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n#endif\n\n\nstatic void initISR(timer16_Sequence_t timer)\n{\n#if defined (_useTimer1)\n  if(timer == _timer1) {\n    TCCR1A = 0;             // normal counting mode\n    TCCR1B = _BV(CS11);     // set prescaler of 8\n    TCNT1 = 0;              // clear the timer count\n#if defined(__AVR_ATmega8__)|| defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF1A);      // clear any pending interrupts;\n    TIMSK |=  _BV(OCIE1A) ;  // enable the output compare interrupt\n#else\n    // here if not ATmega8 or ATmega128\n    TIFR1 |= _BV(OCF1A);     // clear any pending interrupts;\n    TIMSK1 |=  _BV(OCIE1A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER1OUTCOMPAREA_INT, Timer1Service);\n#endif\n  }\n#endif\n\n#if defined (_useTimer3)\n  if(timer == _timer3) {\n    TCCR3A = 0;             // normal counting mode\n    TCCR3B = _BV(CS31);     // set prescaler of 8\n    TCNT3 = 0;              // clear the timer count\n#if defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF3A);     // clear any pending interrupts;\n\tETIMSK |= _BV(OCIE3A);  // enable the output compare interrupt\n#else\n    TIFR3 = _BV(OCF3A);     // clear any pending interrupts;\n    TIMSK3 =  _BV(OCIE3A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER3OUTCOMPAREA_INT, Timer3Service);  // for Wiring platform only\n#endif\n  }\n#endif\n\n#if defined (_useTimer4)\n  if(timer == _timer4) {\n    TCCR4A = 0;             // normal counting mode\n    TCCR4B = _BV(CS41);     // set prescaler of 8\n    TCNT4 = 0;              // clear the timer count\n    TIFR4 = _BV(OCF4A);     // clear any pending interrupts;\n    TIMSK4 =  _BV(OCIE4A) ; // enable the output compare interrupt\n  }\n#endif\n\n#if defined (_useTimer5)\n  if(timer == _timer5) {\n    TCCR5A = 0;             // normal counting mode\n    TCCR5B = _BV(CS51);     // set prescaler of 8\n    TCNT5 = 0;              // clear the timer count\n    TIFR5 = _BV(OCF5A);     // clear any pending interrupts;\n    TIMSK5 =  _BV(OCIE5A) ; // enable the output compare interrupt\n  }\n#endif\n}\n\nstatic void finISR(timer16_Sequence_t timer)\n{\n    //disable use of the given timer\n#if defined WIRING   // Wiring\n  if(timer == _timer1) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK1 &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #else\n    TIMSK &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #endif\n    timerDetach(TIMER1OUTCOMPAREA_INT);\n  }\n  else if(timer == _timer3) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK3 &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #else\n    ETIMSK &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #endif\n    timerDetach(TIMER3OUTCOMPAREA_INT);\n  }\n#else\n  //For arduino - in future: call here to a currently undefined function to reset the timer\n  (void) timer;  // squash \"unused parameter 'timer' [-Wunused-parameter]\" warning\n#endif\n}\n\nstatic boolean isTimerActive(timer16_Sequence_t timer)\n{\n  // returns true if any servo is active on this timer\n  for(uint8_t channel=0; channel < SERVOS_PER_TIMER; channel++) {\n    if(SERVO(timer,channel).Pin.isActive == true)\n      return true;\n  }\n  return false;\n}\n\n\n/****************** end of static functions ******************************/\n\nServo::Servo()\n{\n  if( ServoCount < MAX_SERVOS) {\n    this->servoIndex = ServoCount++;                    // assign a servo index to this instance\n\tservos[this->servoIndex].ticks = usToTicks(DEFAULT_PULSE_WIDTH);   // store default values  - 12 Aug 2009\n  }\n  else\n    this->servoIndex = INVALID_SERVO ;  // too many servos\n}\n\nuint8_t Servo::attach(int pin)\n{\n  return this->attach(pin, MIN_PULSE_WIDTH, MAX_PULSE_WIDTH);\n}\n\nuint8_t Servo::attach(int pin, int min, int max)\n{\n  if(this->servoIndex < MAX_SERVOS ) {\n    pinMode( pin, OUTPUT) ;                                   // set servo pin to output\n    servos[this->servoIndex].Pin.nbr = pin;\n    // todo min/max check: abs(min - MIN_PULSE_WIDTH) /4 < 128\n    this->min  = (MIN_PULSE_WIDTH - min)/4; //resolution of min/max is 4 uS\n    this->max  = (MAX_PULSE_WIDTH - max)/4;\n    // initialize the timer if it has not already been initialized\n    timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n    if(isTimerActive(timer) == false)\n      initISR(timer);\n    servos[this->servoIndex].Pin.isActive = true;  // this must be set after the check for isTimerActive\n  }\n  return this->servoIndex ;\n}\n\nvoid Servo::detach()\n{\n  servos[this->servoIndex].Pin.isActive = false;\n  timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n  if(isTimerActive(timer) == false) {\n    finISR(timer);\n  }\n}\n\nvoid Servo::write(int value)\n{\n  if(value < MIN_PULSE_WIDTH)\n  {  // treat values less than 544 as angles in degrees (valid values in microseconds are handled as microseconds)\n    if(value < 0) value = 0;\n    if(value > 180) value = 180;\n    value = map(value, 0, 180, SERVO_MIN(),  SERVO_MAX());\n  }\n  this->writeMicroseconds(value);\n}\n\nvoid Servo::writeMicroseconds(int value)\n{\n  // calculate and store the values for the given channel\n  byte channel = this->servoIndex;\n  if( (channel < MAX_SERVOS) )   // ensure channel is valid\n  {\n    if( value < SERVO_MIN() )          // ensure pulse width is valid\n      value = SERVO_MIN();\n    else if( value > SERVO_MAX() )\n      value = SERVO_MAX();\n\n    value = value - TRIM_DURATION;\n    value = usToTicks(value);  // convert to ticks after compensating for interrupt overhead - 12 Aug 2009\n\n    uint8_t oldSREG = SREG;\n    cli();\n    servos[channel].ticks = value;\n    SREG = oldSREG;\n  }\n}\n\nint Servo::read() // return the value as degrees\n{\n  return  map( this->readMicroseconds()+1, SERVO_MIN(), SERVO_MAX(), 0, 180);\n}\n\nint Servo::readMicroseconds()\n{\n  unsigned int pulsewidth;\n  if( this->servoIndex != INVALID_SERVO )\n    pulsewidth = ticksToUs(servos[this->servoIndex].ticks)  + TRIM_DURATION ;   // 12 aug 2009\n  else\n    pulsewidth  = 0;\n\n  return pulsewidth;\n}\n\nbool Servo::attached()\n{\n  return servos[this->servoIndex].Pin.isActive ;\n}\n\n#endif // ARDUINO_ARCH_AVR\n\n"}}}Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp"}}}
>>>
Content-Length: 177

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 160

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/getDistance.ino"}}}Content-Length: 280

{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":13},"end":{"line":26,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":89,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":145}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":146},"contentChanges":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":0}},"rangeLength":0,"text":"  "}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":147},"contentChanges":[{"range":{"start":{"line":38,"character":2},"end":{"line":38,"character":2}},"rangeLength":0,"text":"  "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":147}}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":148},"contentChanges":[{"range":{"start":{"line":38,"character":0},"end":{"line":39,"character":0}},"rangeLength":5,"text":"        \n"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":149},"contentChanges":[{"range":{"start":{"line":39,"character":0},"end":{"line":39,"character":0}},"rangeLength":0,"text":"m"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":0},"end":{"line":39,"character":1}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'm'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":150},"contentChanges":[{"range":{"start":{"line":39,"character":1},"end":{"line":39,"character":1}},"rangeLength":0,"text":"y"}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":0},"end":{"line":39,"character":2}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'my'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 459

{"jsonrpc":"2.0","id":90,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":39,"character":0},"end":{"line":39,"character":2}},"message":"Use of undeclared identifier 'my'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":90,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":150}}}Content-Length: 405

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":152},"contentChanges":[{"range":{"start":{"line":39,"character":1},"end":{"line":39,"character":2}},"rangeLength":1,"text":""},{"range":{"start":{"line":39,"character":0},"end":{"line":39,"character":1}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":152}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":153},"contentChanges":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":0}},"rangeLength":0,"text":"  "}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":154},"contentChanges":[{"range":{"start":{"line":38,"character":2},"end":{"line":38,"character":2}},"rangeLength":0,"text":"  "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":154}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":155},"contentChanges":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":12}},"rangeLength":12,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":156},"contentChanges":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":0}},"rangeLength":0,"text":"m"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":1}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'm'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":157},"contentChanges":[{"range":{"start":{"line":38,"character":1},"end":{"line":38,"character":1}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":2}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":158},"contentChanges":[{"range":{"start":{"line":38,"character":2},"end":{"line":38,"character":2}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 355

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mic'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":159},"contentChanges":[{"range":{"start":{"line":38,"character":3},"end":{"line":38,"character":3}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'micr'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":160},"contentChanges":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":4}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 737

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":5}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'micro'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 642

{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":5},"end":{"line":38,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":5}},"message":"Use of undeclared identifier 'micro'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":91,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":161},"contentChanges":[{"range":{"start":{"line":38,"character":5},"end":{"line":38,"character":5}},"rangeLength":0,"text":"S"}]}}
>>>
Content-Length: 738

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":6}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microS'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":162},"contentChanges":[{"range":{"start":{"line":38,"character":6},"end":{"line":38,"character":6}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 739

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":7}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSe'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":163},"contentChanges":[{"range":{"start":{"line":38,"character":7},"end":{"line":38,"character":7}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 915

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSer'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:1: error: use of undeclared identifier 'microSer'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":164},"contentChanges":[{"range":{"start":{"line":38,"character":8},"end":{"line":38,"character":8}},"rangeLength":0,"text":"v"}]}}
>>>
Content-Length: 917

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microServ'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:1: error: use of undeclared identifier 'microServ'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":165},"contentChanges":[{"range":{"start":{"line":38,"character":9},"end":{"line":38,"character":9}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 920

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microServi'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:1: error: use of undeclared identifier 'microServi'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 587

{"jsonrpc":"2.0","id":92,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":10},"end":{"line":38,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":10}},"message":"Use of undeclared identifier 'microServi'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":92,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":165}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":166},"contentChanges":[{"range":{"start":{"line":38,"character":9},"end":{"line":38,"character":10}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 917

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microServ'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:1: error: use of undeclared identifier 'microServ'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":167},"contentChanges":[{"range":{"start":{"line":38,"character":9},"end":{"line":38,"character":9}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":10},"end":{"line":38,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":93,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":167}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":168},"contentChanges":[{"range":{"start":{"line":38,"character":9},"end":{"line":38,"character":10}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 917

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microServ'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:1: error: use of undeclared identifier 'microServ'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 583

{"jsonrpc":"2.0","id":94,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":9},"end":{"line":38,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":9}},"message":"Use of undeclared identifier 'microServ'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":94,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":168}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":169},"contentChanges":[{"range":{"start":{"line":38,"character":9},"end":{"line":38,"character":9}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 920

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microServi'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:1: error: use of undeclared identifier 'microServi'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1238

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":179},"contentChanges":[{"range":{"start":{"line":38,"character":9},"end":{"line":38,"character":10}},"rangeLength":1,"text":""},{"range":{"start":{"line":38,"character":8},"end":{"line":38,"character":9}},"rangeLength":1,"text":""},{"range":{"start":{"line":38,"character":7},"end":{"line":38,"character":8}},"rangeLength":1,"text":""},{"range":{"start":{"line":38,"character":6},"end":{"line":38,"character":7}},"rangeLength":1,"text":""},{"range":{"start":{"line":38,"character":5},"end":{"line":38,"character":6}},"rangeLength":1,"text":""},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":5}},"rangeLength":1,"text":""},{"range":{"start":{"line":38,"character":3},"end":{"line":38,"character":4}},"rangeLength":1,"text":""},{"range":{"start":{"line":38,"character":2},"end":{"line":38,"character":3}},"rangeLength":1,"text":""},{"range":{"start":{"line":38,"character":1},"end":{"line":38,"character":2}},"rangeLength":1,"text":""},{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":1}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":180},"contentChanges":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":0}},"rangeLength":0,"text":"            "}]}}Content-Length: 279

{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":95,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":180}}}Content-Length: 205

{"jsonrpc":"2.0","id":96,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":2}}}
>>>
Content-Length: 39

{"id":96,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":97,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":3}}}
>>>
Content-Length: 39

{"id":97,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":98,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":37,"character":8}}}
>>>
Content-Length: 309

{"id":98,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":99,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":37,"character":12}}}
>>>
Content-Length: 309

{"id":99,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":181},"contentChanges":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":4}},"rangeLength":0,"text":"m"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'm'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":182},"contentChanges":[{"range":{"start":{"line":38,"character":5},"end":{"line":38,"character":5}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":183},"contentChanges":[{"range":{"start":{"line":38,"character":6},"end":{"line":38,"character":6}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 355

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mic'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":184},"contentChanges":[{"range":{"start":{"line":38,"character":7},"end":{"line":38,"character":7}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'micr'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":185},"contentChanges":[{"range":{"start":{"line":38,"character":8},"end":{"line":38,"character":8}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 737

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'micro'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 643

{"jsonrpc":"2.0","id":100,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":9},"end":{"line":38,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":9}},"message":"Use of undeclared identifier 'micro'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":100,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":186},"contentChanges":[{"range":{"start":{"line":38,"character":9},"end":{"line":38,"character":9}},"rangeLength":0,"text":"S"}]}}
>>>
Content-Length: 739

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microS'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":187},"contentChanges":[{"range":{"start":{"line":38,"character":10},"end":{"line":38,"character":10}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 740

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":11}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSe'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":188},"contentChanges":[{"range":{"start":{"line":38,"character":11},"end":{"line":38,"character":11}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 916

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":12}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSer'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:5: error: use of undeclared identifier 'microSer'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":189},"contentChanges":[{"range":{"start":{"line":38,"character":12},"end":{"line":38,"character":12}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 918

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":13}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSero'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:5: error: use of undeclared identifier 'microSero'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 587

{"jsonrpc":"2.0","id":101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":13},"end":{"line":38,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":13}},"message":"Use of undeclared identifier 'microSero'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":101,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":190},"contentChanges":[{"range":{"start":{"line":38,"character":13},"end":{"line":38,"character":13}},"rangeLength":0,"text":"v"}]}}
>>>
Content-Length: 920

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSerov'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:5: error: use of undeclared identifier 'microSerov'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":191},"contentChanges":[{"range":{"start":{"line":38,"character":13},"end":{"line":38,"character":14}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 918

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":13}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSero'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:5: error: use of undeclared identifier 'microSero'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":192},"contentChanges":[{"range":{"start":{"line":38,"character":12},"end":{"line":38,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":193},"contentChanges":[{"range":{"start":{"line":38,"character":12},"end":{"line":38,"character":12}},"rangeLength":0,"text":"v"}]}}
>>>
Content-Length: 916

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":12}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSer'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:5: error: use of undeclared identifier 'microSer'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 918

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":13}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microServ'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:48:5: error: use of undeclared identifier 'microServ'; did you mean 'microServo'?"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":194},"contentChanges":[{"range":{"start":{"line":38,"character":13},"end":{"line":38,"character":13}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":195},"contentChanges":[{"range":{"start":{"line":38,"character":14},"end":{"line":38,"character":14}},"rangeLength":0,"text":"."}]}}Content-Length: 263

{"jsonrpc":"2.0","id":102,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":15},"context":{"triggerKind":2,"triggerCharacter":"."}}}
>>>
Content-Length: 2034

{"id":102,"result":{"isIncomplete":false,"items":[{"label":" readMicroseconds()","kind":2,"detail":"int","sortText":"3e97ae13readMicroseconds","filterText":"readMicroseconds","insertText":"readMicroseconds()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":15}},"newText":"readMicroseconds()"}},{"label":" write(int value)","kind":2,"detail":"void","sortText":"3e97ae13write","filterText":"write","insertText":"write(${1:int value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":15}},"newText":"write(${1:int value})"}},{"label":" writeMicroseconds(int value)","kind":2,"detail":"void","sortText":"3e97ae13writeMicroseconds","filterText":"writeMicroseconds","insertText":"writeMicroseconds(${1:int value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":15}},"newText":"writeMicroseconds(${1:int value})"}},{"label":" attach(…)","kind":2,"detail":"[2 overloads]","sortText":"3ee51eb8attach","filterText":"attach","insertText":"attach($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":15}},"newText":"attach($0)"}},{"label":" attached()","kind":2,"detail":"bool","sortText":"3ee51eb8attached","filterText":"attached","insertText":"attached()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":15}},"newText":"attached()"}},{"label":" detach()","kind":2,"detail":"void","sortText":"3ee51eb8detach","filterText":"detach","insertText":"detach()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":15}},"newText":"detach()"}},{"label":" read()","kind":2,"detail":"int","sortText":"3ee51eb8read","filterText":"read","insertText":"read()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":15}},"newText":"read()"}}]},"jsonrpc":"2.0"}Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":103,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":103,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":195}}}Content-Length: 319

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":196},"contentChanges":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":15}},"rangeLength":0,"text":"write(int value)"}]}}
>>>
Content-Length: 388

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":30}},"severity":1,"code":"expected_lparen_after_type","source":"clang","message":"Expected '(' for function-style cast or type construction"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 496

{"jsonrpc":"2.0","id":104,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":21},"end":{"line":38,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":30}},"message":"Expected '(' for function-style cast or type construction","severity":1,"code":"expected_lparen_after_type","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":104,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":196}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":197},"contentChanges":[{"range":{"start":{"line":38,"character":21},"end":{"line":38,"character":30}},"rangeLength":9,"text":"5"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":105,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":198},"contentChanges":[{"range":{"start":{"line":38,"character":21},"end":{"line":38,"character":22}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 720

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":38,"character":21},"end":{"line":38,"character":22}},"severity":1,"code":"typecheck_call_too_few_args_one","source":"clang","message":"Too few arguments to function call, single argument 'value' was not specified\n\n/Applications/Arduino.app/Contents/Java/libraries/Servo/src/Servo.h:111:8:\nnote: 'write' declared here"},{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":199},"contentChanges":[{"range":{"start":{"line":38,"character":21},"end":{"line":38,"character":21}},"rangeLength":0,"text":"4"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":200},"contentChanges":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":22}},"rangeLength":0,"text":"5"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":23},"end":{"line":38,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":106,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":107,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":37,"character":13}}}
>>>
Content-Length: 230

{"id":107,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":200}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":108,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":19}}}
>>>
Content-Length: 208

{"id":108,"result":[{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","range":{"start":{"line":263,"character":12},"end":{"line":263,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 11436

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","languageId":"cpp","version":1,"text":"/*\n Servo.cpp - Interrupt driven Servo library for Arduino using 16 bit timers- Version 2\n Copyright (c) 2009 Michael Margolis.  All right reserved.\n\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\n#if defined(ARDUINO_ARCH_AVR)\n\n#include <avr/interrupt.h>\n#include <Arduino.h>\n\n#include \"Servo.h\"\n\n#define usToTicks(_us)    (( clockCyclesPerMicrosecond()* _us) / 8)     // converts microseconds to tick (assumes prescale of 8)  // 12 Aug 2009\n#define ticksToUs(_ticks) (( (unsigned)_ticks * 8)/ clockCyclesPerMicrosecond() ) // converts from ticks back to microseconds\n\n\n#define TRIM_DURATION       2                               // compensation ticks to trim adjust for digitalWrite delays // 12 August 2009\n\n//#define NBR_TIMERS        (MAX_SERVOS / SERVOS_PER_TIMER)\n\nstatic servo_t servos[MAX_SERVOS];                          // static array of servo structures\nstatic volatile int8_t Channel[_Nbr_16timers ];             // counter for the servo being pulsed for each timer (or -1 if refresh interval)\n\nuint8_t ServoCount = 0;                                     // the total number of attached servos\n\n\n// convenience macros\n#define SERVO_INDEX_TO_TIMER(_servo_nbr) ((timer16_Sequence_t)(_servo_nbr / SERVOS_PER_TIMER)) // returns the timer controlling this servo\n#define SERVO_INDEX_TO_CHANNEL(_servo_nbr) (_servo_nbr % SERVOS_PER_TIMER)       // returns the index of the servo on this timer\n#define SERVO_INDEX(_timer,_channel)  ((_timer*SERVOS_PER_TIMER) + _channel)     // macro to access servo index by timer and channel\n#define SERVO(_timer,_channel)  (servos[SERVO_INDEX(_timer,_channel)])            // macro to access servo class by timer and channel\n\n#define SERVO_MIN() (MIN_PULSE_WIDTH - this->min * 4)  // minimum value in uS for this servo\n#define SERVO_MAX() (MAX_PULSE_WIDTH - this->max * 4)  // maximum value in uS for this servo\n\n/************ static functions common to all instances ***********************/\n\nstatic inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)\n{\n  if( Channel[timer] < 0 )\n    *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer\n  else{\n    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated\n  }\n\n  Channel[timer]++;    // increment to the next channel\n  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {\n    *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;\n    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high\n  }\n  else {\n    // finished all channels so wait for the refresh period to expire before starting over\n    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed\n      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);\n    else\n      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed\n    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel\n  }\n}\n\n#ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform\n// Interrupt handlers for Arduino\n#if defined(_useTimer1)\nSIGNAL (TIMER1_COMPA_vect)\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n\n#if defined(_useTimer3)\nSIGNAL (TIMER3_COMPA_vect)\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n\n#if defined(_useTimer4)\nSIGNAL (TIMER4_COMPA_vect)\n{\n  handle_interrupts(_timer4, &TCNT4, &OCR4A);\n}\n#endif\n\n#if defined(_useTimer5)\nSIGNAL (TIMER5_COMPA_vect)\n{\n  handle_interrupts(_timer5, &TCNT5, &OCR5A);\n}\n#endif\n\n#elif defined WIRING\n// Interrupt handlers for Wiring\n#if defined(_useTimer1)\nvoid Timer1Service()\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n#if defined(_useTimer3)\nvoid Timer3Service()\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n#endif\n\n\nstatic void initISR(timer16_Sequence_t timer)\n{\n#if defined (_useTimer1)\n  if(timer == _timer1) {\n    TCCR1A = 0;             // normal counting mode\n    TCCR1B = _BV(CS11);     // set prescaler of 8\n    TCNT1 = 0;              // clear the timer count\n#if defined(__AVR_ATmega8__)|| defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF1A);      // clear any pending interrupts;\n    TIMSK |=  _BV(OCIE1A) ;  // enable the output compare interrupt\n#else\n    // here if not ATmega8 or ATmega128\n    TIFR1 |= _BV(OCF1A);     // clear any pending interrupts;\n    TIMSK1 |=  _BV(OCIE1A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER1OUTCOMPAREA_INT, Timer1Service);\n#endif\n  }\n#endif\n\n#if defined (_useTimer3)\n  if(timer == _timer3) {\n    TCCR3A = 0;             // normal counting mode\n    TCCR3B = _BV(CS31);     // set prescaler of 8\n    TCNT3 = 0;              // clear the timer count\n#if defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF3A);     // clear any pending interrupts;\n\tETIMSK |= _BV(OCIE3A);  // enable the output compare interrupt\n#else\n    TIFR3 = _BV(OCF3A);     // clear any pending interrupts;\n    TIMSK3 =  _BV(OCIE3A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER3OUTCOMPAREA_INT, Timer3Service);  // for Wiring platform only\n#endif\n  }\n#endif\n\n#if defined (_useTimer4)\n  if(timer == _timer4) {\n    TCCR4A = 0;             // normal counting mode\n    TCCR4B = _BV(CS41);     // set prescaler of 8\n    TCNT4 = 0;              // clear the timer count\n    TIFR4 = _BV(OCF4A);     // clear any pending interrupts;\n    TIMSK4 =  _BV(OCIE4A) ; // enable the output compare interrupt\n  }\n#endif\n\n#if defined (_useTimer5)\n  if(timer == _timer5) {\n    TCCR5A = 0;             // normal counting mode\n    TCCR5B = _BV(CS51);     // set prescaler of 8\n    TCNT5 = 0;              // clear the timer count\n    TIFR5 = _BV(OCF5A);     // clear any pending interrupts;\n    TIMSK5 =  _BV(OCIE5A) ; // enable the output compare interrupt\n  }\n#endif\n}\n\nstatic void finISR(timer16_Sequence_t timer)\n{\n    //disable use of the given timer\n#if defined WIRING   // Wiring\n  if(timer == _timer1) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK1 &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #else\n    TIMSK &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #endif\n    timerDetach(TIMER1OUTCOMPAREA_INT);\n  }\n  else if(timer == _timer3) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK3 &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #else\n    ETIMSK &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #endif\n    timerDetach(TIMER3OUTCOMPAREA_INT);\n  }\n#else\n  //For arduino - in future: call here to a currently undefined function to reset the timer\n  (void) timer;  // squash \"unused parameter 'timer' [-Wunused-parameter]\" warning\n#endif\n}\n\nstatic boolean isTimerActive(timer16_Sequence_t timer)\n{\n  // returns true if any servo is active on this timer\n  for(uint8_t channel=0; channel < SERVOS_PER_TIMER; channel++) {\n    if(SERVO(timer,channel).Pin.isActive == true)\n      return true;\n  }\n  return false;\n}\n\n\n/****************** end of static functions ******************************/\n\nServo::Servo()\n{\n  if( ServoCount < MAX_SERVOS) {\n    this->servoIndex = ServoCount++;                    // assign a servo index to this instance\n\tservos[this->servoIndex].ticks = usToTicks(DEFAULT_PULSE_WIDTH);   // store default values  - 12 Aug 2009\n  }\n  else\n    this->servoIndex = INVALID_SERVO ;  // too many servos\n}\n\nuint8_t Servo::attach(int pin)\n{\n  return this->attach(pin, MIN_PULSE_WIDTH, MAX_PULSE_WIDTH);\n}\n\nuint8_t Servo::attach(int pin, int min, int max)\n{\n  if(this->servoIndex < MAX_SERVOS ) {\n    pinMode( pin, OUTPUT) ;                                   // set servo pin to output\n    servos[this->servoIndex].Pin.nbr = pin;\n    // todo min/max check: abs(min - MIN_PULSE_WIDTH) /4 < 128\n    this->min  = (MIN_PULSE_WIDTH - min)/4; //resolution of min/max is 4 uS\n    this->max  = (MAX_PULSE_WIDTH - max)/4;\n    // initialize the timer if it has not already been initialized\n    timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n    if(isTimerActive(timer) == false)\n      initISR(timer);\n    servos[this->servoIndex].Pin.isActive = true;  // this must be set after the check for isTimerActive\n  }\n  return this->servoIndex ;\n}\n\nvoid Servo::detach()\n{\n  servos[this->servoIndex].Pin.isActive = false;\n  timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n  if(isTimerActive(timer) == false) {\n    finISR(timer);\n  }\n}\n\nvoid Servo::write(int value)\n{\n  if(value < MIN_PULSE_WIDTH)\n  {  // treat values less than 544 as angles in degrees (valid values in microseconds are handled as microseconds)\n    if(value < 0) value = 0;\n    if(value > 180) value = 180;\n    value = map(value, 0, 180, SERVO_MIN(),  SERVO_MAX());\n  }\n  this->writeMicroseconds(value);\n}\n\nvoid Servo::writeMicroseconds(int value)\n{\n  // calculate and store the values for the given channel\n  byte channel = this->servoIndex;\n  if( (channel < MAX_SERVOS) )   // ensure channel is valid\n  {\n    if( value < SERVO_MIN() )          // ensure pulse width is valid\n      value = SERVO_MIN();\n    else if( value > SERVO_MAX() )\n      value = SERVO_MAX();\n\n    value = value - TRIM_DURATION;\n    value = usToTicks(value);  // convert to ticks after compensating for interrupt overhead - 12 Aug 2009\n\n    uint8_t oldSREG = SREG;\n    cli();\n    servos[channel].ticks = value;\n    SREG = oldSREG;\n  }\n}\n\nint Servo::read() // return the value as degrees\n{\n  return  map( this->readMicroseconds()+1, SERVO_MIN(), SERVO_MAX(), 0, 180);\n}\n\nint Servo::readMicroseconds()\n{\n  unsigned int pulsewidth;\n  if( this->servoIndex != INVALID_SERVO )\n    pulsewidth = ticksToUs(servos[this->servoIndex].ticks)  + TRIM_DURATION ;   // 12 aug 2009\n  else\n    pulsewidth  = 0;\n\n  return pulsewidth;\n}\n\nbool Servo::attached()\n{\n  return servos[this->servoIndex].Pin.isActive ;\n}\n\n#endif // ARDUINO_ARCH_AVR\n\n"}}}Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp"}}}
>>>
Content-Length: 177

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":29},"end":{"line":37,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":109,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":110,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":31}}}
>>>
Content-Length: 40

{"id":110,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":111,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":201},"contentChanges":[{"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":24}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":112,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":112,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":201}}}Content-Length: 281

{"jsonrpc":"2.0","id":113,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":113,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":202},"contentChanges":[{"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":29}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":202}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":203},"contentChanges":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":4}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'c'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":204},"contentChanges":[{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":5}},"rangeLength":0,"text":"i"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":205},"contentChanges":[{"range":{"start":{"line":43,"character":6},"end":{"line":43,"character":6}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 355

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'cir'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 461

{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":7},"end":{"line":43,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":7}},"message":"Use of undeclared identifier 'cir'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":114,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":206},"contentChanges":[{"range":{"start":{"line":43,"character":6},"end":{"line":43,"character":7}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ci'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":207},"contentChanges":[{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":6}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'c'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":208},"contentChanges":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":5}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":209},"contentChanges":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":4}},"rangeLength":0,"text":"m"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'm'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":210},"contentChanges":[{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":5}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":211},"contentChanges":[{"range":{"start":{"line":43,"character":6},"end":{"line":43,"character":6}},"rangeLength":0,"text":"c"}]}}
>>>
Content-Length: 355

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'mic'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":212},"contentChanges":[{"range":{"start":{"line":43,"character":7},"end":{"line":43,"character":7}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'micr'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 462

{"jsonrpc":"2.0","id":115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":8},"end":{"line":43,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":8}},"message":"Use of undeclared identifier 'micr'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":115,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":212}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":213},"contentChanges":[{"range":{"start":{"line":43,"character":8},"end":{"line":43,"character":8}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 737

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'micro'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":214},"contentChanges":[{"range":{"start":{"line":43,"character":9},"end":{"line":43,"character":9}},"rangeLength":0,"text":"S"}]}}
>>>
Content-Length: 739

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microS'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":215},"contentChanges":[{"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":10}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 740

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":11}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSe'; did you mean 'micros'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:142:15:\nnote: 'micros' declared here"},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":216},"contentChanges":[{"range":{"start":{"line":43,"character":11},"end":{"line":43,"character":11}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 916

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":12}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microSer'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:53:5: error: use of undeclared identifier 'microSer'; did you mean 'microServo'?"},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":217},"contentChanges":[{"range":{"start":{"line":43,"character":12},"end":{"line":43,"character":12}},"rangeLength":0,"text":"v"}]}}
>>>
Content-Length: 918

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":13}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microServ'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:53:5: error: use of undeclared identifier 'microServ'; did you mean 'microServo'?"},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 587

{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":13},"end":{"line":43,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":13}},"message":"Use of undeclared identifier 'microServ'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":116,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":217}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":218},"contentChanges":[{"range":{"start":{"line":43,"character":13},"end":{"line":43,"character":13}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 920

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microServi'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:53:5: error: use of undeclared identifier 'microServi'; did you mean 'microServo'?"},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 588

{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":14},"end":{"line":43,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}},"message":"Use of undeclared identifier 'microServi'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":117,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":219},"contentChanges":[{"range":{"start":{"line":43,"character":13},"end":{"line":43,"character":14}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 918

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":13}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'microServ'; did you mean 'microServo'? (fix available)\n\nDistanceSensor.ino.cpp:13:7: note: 'microServo' declared here"},{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"severity":3,"message":"'microServo' declared here\n\nDistanceSensor.ino.cpp:53:5: error: use of undeclared identifier 'microServ'; did you mean 'microServo'?"},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":220},"contentChanges":[{"range":{"start":{"line":43,"character":13},"end":{"line":43,"character":13}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":221},"contentChanges":[{"range":{"start":{"line":43,"character":14},"end":{"line":43,"character":14}},"rangeLength":0,"text":"."}]}}Content-Length: 263

{"jsonrpc":"2.0","id":118,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":43,"character":15},"context":{"triggerKind":2,"triggerCharacter":"."}}}
>>>
Content-Length: 2034

{"id":118,"result":{"isIncomplete":false,"items":[{"label":" readMicroseconds()","kind":2,"detail":"int","sortText":"3e97ae13readMicroseconds","filterText":"readMicroseconds","insertText":"readMicroseconds()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":52,"character":15},"end":{"line":52,"character":15}},"newText":"readMicroseconds()"}},{"label":" write(int value)","kind":2,"detail":"void","sortText":"3e97ae13write","filterText":"write","insertText":"write(${1:int value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":52,"character":15},"end":{"line":52,"character":15}},"newText":"write(${1:int value})"}},{"label":" writeMicroseconds(int value)","kind":2,"detail":"void","sortText":"3e97ae13writeMicroseconds","filterText":"writeMicroseconds","insertText":"writeMicroseconds(${1:int value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":52,"character":15},"end":{"line":52,"character":15}},"newText":"writeMicroseconds(${1:int value})"}},{"label":" attach(…)","kind":2,"detail":"[2 overloads]","sortText":"3ee51eb8attach","filterText":"attach","insertText":"attach($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":52,"character":15},"end":{"line":52,"character":15}},"newText":"attach($0)"}},{"label":" attached()","kind":2,"detail":"bool","sortText":"3ee51eb8attached","filterText":"attached","insertText":"attached()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":52,"character":15},"end":{"line":52,"character":15}},"newText":"attached()"}},{"label":" detach()","kind":2,"detail":"void","sortText":"3ee51eb8detach","filterText":"detach","insertText":"detach()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":52,"character":15},"end":{"line":52,"character":15}},"newText":"detach()"}},{"label":" read()","kind":2,"detail":"int","sortText":"3ee51eb8read","filterText":"read","insertText":"read()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":52,"character":15},"end":{"line":52,"character":15}},"newText":"read()"}}]},"jsonrpc":"2.0"}Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":119,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":221}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":222},"contentChanges":[{"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":15}},"rangeLength":0,"text":"w"}]}}
>>>
Content-Length: 544

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":16}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'w' in 'Servo'"},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":223},"contentChanges":[{"range":{"start":{"line":43,"character":16},"end":{"line":43,"character":16}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 545

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":17}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'wr' in 'Servo'"},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":224},"contentChanges":[{"range":{"start":{"line":43,"character":17},"end":{"line":43,"character":17}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 546

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":18}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'wri' in 'Servo'"},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":225},"contentChanges":[{"range":{"start":{"line":43,"character":18},"end":{"line":43,"character":18}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 547

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":19}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'writ' in 'Servo'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":226},"contentChanges":[{"range":{"start":{"line":43,"character":19},"end":{"line":43,"character":19}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 579

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":20}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 487

{"jsonrpc":"2.0","id":120,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":20},"end":{"line":43,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":20}},"message":"Reference to non-static member function must be called","severity":1,"code":"bound_member_function","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":120,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":227},"contentChanges":[{"range":{"start":{"line":43,"character":20},"end":{"line":43,"character":20}},"rangeLength":0,"text":"()"}]}}
>>>
Content-Length: 720

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":43,"character":21},"end":{"line":43,"character":22}},"severity":1,"code":"typecheck_call_too_few_args_one","source":"clang","message":"Too few arguments to function call, single argument 'value' was not specified\n\n/Applications/Arduino.app/Contents/Java/libraries/Servo/src/Servo.h:111:8:\nnote: 'write' declared here"},{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 286

{"jsonrpc":"2.0","id":121,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":43,"character":21},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 183

{"id":121,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 628

{"jsonrpc":"2.0","id":122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":21},"end":{"line":43,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":43,"character":21},"end":{"line":43,"character":22}},"message":"Too few arguments to function call, single argument 'value' was not specified\n\n/Applications/Arduino.app/Contents/Java/libraries/Servo/src/Servo.h:111:8:\nnote: 'write' declared here","severity":1,"code":"typecheck_call_too_few_args_one","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":122,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":227}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":228},"contentChanges":[{"range":{"start":{"line":43,"character":21},"end":{"line":43,"character":21}},"rangeLength":0,"text":"1"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":229},"contentChanges":[{"range":{"start":{"line":43,"character":22},"end":{"line":43,"character":22}},"rangeLength":0,"text":"5"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":230},"contentChanges":[{"range":{"start":{"line":43,"character":23},"end":{"line":43,"character":23}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":123,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":24},"end":{"line":43,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":123,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":230}}}Content-Length: 281

{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":10},"end":{"line":44,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":124,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":125,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":25},"end":{"line":43,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":125,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":231},"contentChanges":[{"range":{"start":{"line":43,"character":25},"end":{"line":43,"character":25}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":26},"end":{"line":43,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":126,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":231}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":231}}}Content-Length: 281

{"jsonrpc":"2.0","id":127,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":28},"end":{"line":47,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":127,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":232},"contentChanges":[{"range":{"start":{"line":47,"character":28},"end":{"line":47,"character":28}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":232}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":233},"contentChanges":[{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":4}},"rangeLength":2,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":234},"contentChanges":[{"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":235},"contentChanges":[{"range":{"start":{"line":47,"character":28},"end":{"line":48,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":128,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":28},"end":{"line":47,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":128,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":235}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":235}}}Content-Length: 207

{"jsonrpc":"2.0","id":129,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":42,"character":27}}}
>>>
Content-Length: 311

{"id":129,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":51,"character":27},"end":{"line":51,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":130,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":130,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":131,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":131,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":236},"contentChanges":[{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":26}},"rangeLength":22,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":237},"contentChanges":[{"range":{"start":{"line":43,"character":2},"end":{"line":43,"character":4}},"rangeLength":2,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":238},"contentChanges":[{"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":239},"contentChanges":[{"range":{"start":{"line":42,"character":29},"end":{"line":43,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":132,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":132,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":133,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":43,"character":4}}}
>>>
Content-Length: 38

{"id":133,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":239}}}Content-Length: 211

{"jsonrpc":"2.0","id":134,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":42,"character":8}}}
>>>
Content-Length: 230

{"id":134,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":135,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":42,"character":8}}}
>>>
Content-Length: 310

{"id":135,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":136,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":37,"character":26}}}
>>>
Content-Length: 40

{"id":136,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":137,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":28}}}
>>>
Content-Length: 40

{"id":137,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":138,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":29},"end":{"line":39,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":138,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":139,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":29}}}
>>>
Content-Length: 40

{"id":139,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":140,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":29}}}
>>>
Content-Length: 40

{"id":140,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":240},"contentChanges":[{"range":{"start":{"line":38,"character":28},"end":{"line":38,"character":28}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":241},"contentChanges":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":4}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":241}}}Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":242},"contentChanges":[{"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":9}},"rangeLength":9,"text":""},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":4}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'd'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":243},"contentChanges":[{"range":{"start":{"line":39,"character":5},"end":{"line":39,"character":5}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'de'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":244},"contentChanges":[{"range":{"start":{"line":39,"character":6},"end":{"line":39,"character":6}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 355

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'del'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":245},"contentChanges":[{"range":{"start":{"line":39,"character":7},"end":{"line":39,"character":7}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 733

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'dela'; did you mean 'delay'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:143:6:\nnote: 'delay' declared here"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":246},"contentChanges":[{"range":{"start":{"line":39,"character":8},"end":{"line":39,"character":8}},"rangeLength":0,"text":"y"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":141,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":9},"end":{"line":39,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":141,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":246}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":247},"contentChanges":[{"range":{"start":{"line":39,"character":9},"end":{"line":39,"character":9}},"rangeLength":0,"text":"()"}]}}
>>>
Content-Length: 774

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'delay'\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:143:6:\nnote: candidate function not viable: requires single argument 'ms', but no arguments were provided"},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 286

{"jsonrpc":"2.0","id":142,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":10},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 183

{"id":142,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":248},"contentChanges":[{"range":{"start":{"line":39,"character":10},"end":{"line":39,"character":10}},"rangeLength":0,"text":"1"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":249},"contentChanges":[{"range":{"start":{"line":39,"character":11},"end":{"line":39,"character":11}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":250},"contentChanges":[{"range":{"start":{"line":39,"character":12},"end":{"line":39,"character":12}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":143,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":13},"end":{"line":39,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":143,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":250}}}Content-Length: 281

{"jsonrpc":"2.0","id":144,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":144,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":251},"contentChanges":[{"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":252},"contentChanges":[{"range":{"start":{"line":39,"character":15},"end":{"line":39,"character":15}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":252}}}Content-Length: 323

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":253},"contentChanges":[{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":4}},"rangeLength":0,"text":"microServo.write(150);"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":145,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":145,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":253}}}Content-Length: 207

{"jsonrpc":"2.0","id":146,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":42,"character":31}}}
>>>
Content-Length: 272

{"id":146,"result":{"contents":{"kind":"markdown","value":"### variable `distance`  \n\n---\nType: `float`  \nValue = `0.000000e+00`  \n\n---\n```cpp\nfloat distance = 0\n```"},"range":{"start":{"line":51,"character":30},"end":{"line":51,"character":38}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":147,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":42,"character":30}}}
>>>
Content-Length: 272

{"id":147,"result":{"contents":{"kind":"markdown","value":"### variable `distance`  \n\n---\nType: `float`  \nValue = `0.000000e+00`  \n\n---\n```cpp\nfloat distance = 0\n```"},"range":{"start":{"line":51,"character":30},"end":{"line":51,"character":38}}},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":148,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":2},"end":{"line":39,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":148,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":149,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":149,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":150,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":150,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":254},"contentChanges":[{"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":255},"contentChanges":[{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":4}},"rangeLength":0,"text":"delay(100);"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":151,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":41,"character":15},"end":{"line":41,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":151,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":255}}}Content-Length: 281

{"jsonrpc":"2.0","id":152,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":29},"end":{"line":46,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":152,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":256},"contentChanges":[{"range":{"start":{"line":46,"character":29},"end":{"line":46,"character":29}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":256}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":257},"contentChanges":[{"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":4}},"rangeLength":4,"text":""}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":258},"contentChanges":[{"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":0}},"rangeLength":0,"text":"  "}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":259},"contentChanges":[{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":2}},"rangeLength":0,"text":"  "}]}}Content-Length: 411

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":260},"contentChanges":[{"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":4}},"rangeLength":0,"text":"\n    "},{"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":4}},"rangeLength":4,"text":""}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":260}}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":261},"contentChanges":[{"range":{"start":{"line":48,"character":0},"end":{"line":49,"character":0}},"rangeLength":5,"text":"        \n"}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":262},"contentChanges":[{"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":0}},"rangeLength":0,"text":"  "}]}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":263},"contentChanges":[{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":2}},"rangeLength":0,"text":"  "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":263}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":264},"contentChanges":[{"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":4}},"rangeLength":4,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":153,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":37,"character":29},"end":{"line":37,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":153,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":154,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":154,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":264}}}Content-Length: 281

{"jsonrpc":"2.0","id":155,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":15},"end":{"line":39,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":155,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":156,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":27}}}
>>>
Content-Length: 40

{"id":156,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":157,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":157,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":158,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":158,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":159,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":23}}}
>>>
Content-Length: 301

{"id":159,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":47,"character":23},"end":{"line":47,"character":24}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":160,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":264}}}Content-Length: 207

{"jsonrpc":"2.0","id":161,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":25}}}
>>>
Content-Length: 301

{"id":161,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":49,"character":25},"end":{"line":49,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":264}}}Content-Length: 207

{"jsonrpc":"2.0","id":162,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":20}}}
>>>
Content-Length: 307

{"id":162,"result":{"contents":{"kind":"markdown","value":"### variable `bluePin`  \n\n---\nType: `const int`  \nValue = `6`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int bluePin = 6\n```"},"range":{"start":{"line":45,"character":16},"end":{"line":45,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":163,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":21}}}
>>>
Content-Length: 215

{"id":163,"result":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"kind":1},{"range":{"start":{"line":40,"character":15},"end":{"line":40,"character":20}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":164,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":21},"end":{"line":38,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":164,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":38,"character":21},"end":{"line":38,"character":23}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":165,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":21}}}
>>>
Content-Length: 40

{"id":165,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":166,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":27}}}
>>>
Content-Length: 311

{"id":166,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":44,"character":27},"end":{"line":44,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":265},"contentChanges":[{"range":{"start":{"line":38,"character":21},"end":{"line":38,"character":23}},"rangeLength":2,"text":"0"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":167,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":167,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":265}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":265}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":265}}}Content-Length: 212

{"jsonrpc":"2.0","id":168,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":23}}}
>>>
Content-Length: 38

{"id":168,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":169,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":169,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":265}}}Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":266},"contentChanges":[{"range":{"start":{"line":47,"character":0},"end":{"line":48,"character":0}},"rangeLength":1,"text":"    \n"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":170,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":27,"character":27}}}
>>>
Content-Length: 38

{"id":170,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":171,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":9}}}
>>>
Content-Length: 201

{"id":171,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":172,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":27,"character":48},"end":{"line":27,"character":48}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":172,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":266}}}Content-Length: 280

{"jsonrpc":"2.0","id":173,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":38,"character":0},"end":{"line":41,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 420

{"id":173,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server931132580/sketch/DistanceSensor.ino.cpp","selection":{"start":{"line":47,"character":0},"end":{"line":50,"character":15}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":174,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":38,"character":10}}}
>>>
Content-Length: 201

{"id":174,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":175,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":29},"end":{"line":46,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":175,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":176,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":27}}}
>>>
Content-Length: 311

{"id":176,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":55,"character":27},"end":{"line":55,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 390

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":267},"contentChanges":[{"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":4}},"rangeLength":0,"text":"    microServo.write(0);   \n    delay(100);\n    microServo.write(150);\n    delay(100);"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":177,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":17}}}
>>>
Content-Length: 201

{"id":177,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":178,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":17}}}
>>>
Content-Length: 251

{"id":178,"result":{"contents":{"kind":"markdown","value":"### variable `microServo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo microServo\n```"},"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":18}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":179,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":50,"character":15},"end":{"line":50,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":179,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":267}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":180,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":6}}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 40

{"id":180,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":180}}Content-Length: 206

{"jsonrpc":"2.0","id":181,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":7}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":181}}
>>>
Content-Length: 40

{"id":181,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":182,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":8}}}
>>>
Content-Length: 251

{"id":182,"result":{"contents":{"kind":"markdown","value":"### variable `microServo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo microServo\n```"},"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":18}}},"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":183,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":8}}}
>>>
Content-Length: 565

{"id":183,"result":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"kind":1},{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":12}},"kind":1},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":14}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":14}},"kind":1},{"range":{"start":{"line":47,"character":8},"end":{"line":47,"character":18}},"kind":1},{"range":{"start":{"line":49,"character":4},"end":{"line":49,"character":14}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":184,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":8},"end":{"line":47,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":184,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":185,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":43,"character":37}}}
>>>
Content-Length: 272

{"id":185,"result":{"contents":{"kind":"markdown","value":"### variable `distance`  \n\n---\nType: `float`  \nValue = `0.000000e+00`  \n\n---\n```cpp\nfloat distance = 0\n```"},"range":{"start":{"line":52,"character":30},"end":{"line":52,"character":38}}},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":268},"contentChanges":[{"range":{"start":{"line":47,"character":8},"end":{"line":47,"character":8}},"rangeLength":0,"text":"\\"}]}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":47,"character":8},"end":{"line":47,"character":9}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":269},"contentChanges":[{"range":{"start":{"line":47,"character":8},"end":{"line":47,"character":9}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":270},"contentChanges":[{"range":{"start":{"line":47,"character":6},"end":{"line":47,"character":8}},"rangeLength":2,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":271},"contentChanges":[{"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":6}},"rangeLength":2,"text":""}]}}Content-Length: 279

{"jsonrpc":"2.0","id":186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":186,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":271}}}Content-Length: 207

{"jsonrpc":"2.0","id":187,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":18}}}
>>>
Content-Length: 301

{"id":187,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":188,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":21}}}
>>>
Content-Length: 393

{"id":188,"result":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"kind":1},{"range":{"start":{"line":40,"character":15},"end":{"line":40,"character":20}},"kind":1},{"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":20}},"kind":1},{"range":{"start":{"line":49,"character":15},"end":{"line":49,"character":20}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":189,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":20}}}
>>>
Content-Length: 301

{"id":189,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":190,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":21},"end":{"line":47,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":190,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":47,"character":21},"end":{"line":47,"character":22}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":272},"contentChanges":[{"range":{"start":{"line":47,"character":21},"end":{"line":47,"character":22}},"rangeLength":1,"text":"4"}]}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":8,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 141

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"0/1","percentage":0,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":273},"contentChanges":[{"range":{"start":{"line":47,"character":22},"end":{"line":47,"character":22}},"rangeLength":0,"text":"5"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":191,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":23},"end":{"line":47,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":191,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":273}}}Content-Length: 207

{"jsonrpc":"2.0","id":192,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":15}}}
>>>
Content-Length: 301

{"id":192,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":58,"character":15},"end":{"line":58,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":193,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 40

{"id":193,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":194,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":194,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":195,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":50,"character":10},"end":{"line":50,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":195,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":50,"character":10},"end":{"line":50,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":274},"contentChanges":[{"range":{"start":{"line":50,"character":10},"end":{"line":50,"character":13}},"rangeLength":3,"text":"1"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":275},"contentChanges":[{"range":{"start":{"line":50,"character":11},"end":{"line":50,"character":11}},"rangeLength":0,"text":"1"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":276},"contentChanges":[{"range":{"start":{"line":50,"character":12},"end":{"line":50,"character":12}},"rangeLength":0,"text":"5"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":196,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":50,"character":13},"end":{"line":50,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":196,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":276}}}Content-Length: 212

{"jsonrpc":"2.0","id":197,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":197,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":198,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":8}}}
>>>
Content-Length: 230

{"id":198,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":199,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":33,"character":23},"end":{"line":33,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":199,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":276}}}Content-Length: 207

{"jsonrpc":"2.0","id":200,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":22}}}
>>>
Content-Length: 309

{"id":200,"result":{"contents":{"kind":"markdown","value":"### variable `greenPin`  \n\n---\nType: `const int`  \nValue = `5`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int greenPin = 5\n```"},"range":{"start":{"line":55,"character":16},"end":{"line":55,"character":24}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":201,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":27}}}
>>>
Content-Length: 40

{"id":201,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":202,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":27}}}
>>>
Content-Length: 40

{"id":202,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":203,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":27}}}
>>>
Content-Length: 38

{"id":203,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":204,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":27},"end":{"line":45,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":204,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":205,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":26}}}
>>>
Content-Length: 40

{"id":205,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":206,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":26}}}
>>>
Content-Length: 38

{"id":206,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":207,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":26},"end":{"line":46,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":207,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":46,"character":26},"end":{"line":46,"character":27}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":277},"contentChanges":[{"range":{"start":{"line":46,"character":26},"end":{"line":46,"character":27}},"rangeLength":1,"text":"2"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":208,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":27},"end":{"line":46,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":208,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":278},"contentChanges":[{"range":{"start":{"line":46,"character":27},"end":{"line":46,"character":27}},"rangeLength":0,"text":"5"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":279},"contentChanges":[{"range":{"start":{"line":46,"character":28},"end":{"line":46,"character":28}},"rangeLength":0,"text":"5"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":209,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":29},"end":{"line":46,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":209,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":210,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":26}}}
>>>
Content-Length: 40

{"id":210,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":211,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":27}}}
>>>
Content-Length: 38

{"id":211,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":279}}}Content-Length: 281

{"jsonrpc":"2.0","id":212,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":212,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":45,"character":25},"end":{"line":45,"character":28}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":280},"contentChanges":[{"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":28}},"rangeLength":3,"text":"5"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":281},"contentChanges":[{"range":{"start":{"line":45,"character":26},"end":{"line":45,"character":26}},"rangeLength":0,"text":"0"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":213,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":27},"end":{"line":45,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":213,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":281}}}Content-Length: 212

{"jsonrpc":"2.0","id":214,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":27}}}
>>>
Content-Length: 230

{"id":214,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":281}}}Content-Length: 207

{"jsonrpc":"2.0","id":215,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":26}}}
>>>
Content-Length: 40

{"id":215,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":216,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":27}}}
>>>
Content-Length: 829

{"id":216,"result":[{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":15}},"kind":1},{"range":{"start":{"line":44,"character":4},"end":{"line":44,"character":15}},"kind":1},{"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":15}},"kind":1},{"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":15}},"kind":1},{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}},"kind":1},{"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":15}},"kind":1},{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":217,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":27}}}
>>>
Content-Length: 230

{"id":217,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":218,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":45,"character":25},"end":{"line":45,"character":27}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":219,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":26}}}
>>>
Content-Length: 40

{"id":219,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":282},"contentChanges":[{"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":27}},"rangeLength":2,"text":""}]}}Content-Length: 212

{"jsonrpc":"2.0","id":220,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":25}}}
>>>
Content-Length: 230

{"id":220,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}Content-Length: 343

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":26}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":221,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":24}}}
>>>
Content-Length: 40

{"id":221,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":222,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":25}}}
>>>
Content-Length: 741

{"id":222,"result":[{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":15}},"kind":1},{"range":{"start":{"line":44,"character":4},"end":{"line":44,"character":15}},"kind":1},{"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":15}},"kind":1},{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}},"kind":1},{"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":15}},"kind":1},{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":282}}}Content-Length: 281

{"jsonrpc":"2.0","id":223,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":24},"end":{"line":44,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":223,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":44,"character":24},"end":{"line":44,"character":25}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":283},"contentChanges":[{"range":{"start":{"line":44,"character":24},"end":{"line":44,"character":25}},"rangeLength":1,"text":"50"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":224,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":25}}}
>>>
Content-Length: 38

{"id":224,"result":[],"jsonrpc":"2.0"}Content-Length: 343

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":26}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":225,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":24}}}
>>>
Content-Length: 40

{"id":225,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":226,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":26},"end":{"line":44,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":226,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":227,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":24}}}
>>>
Content-Length: 40

{"id":227,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":283}}}Content-Length: 451

{"jsonrpc":"2.0","id":228,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":26}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":228,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":284},"contentChanges":[{"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":25}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":284}}}Content-Length: 281

{"jsonrpc":"2.0","id":229,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":26},"end":{"line":45,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":229,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":230,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":230,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":284}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":284}}}Content-Length: 207

{"jsonrpc":"2.0","id":231,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":29}}}
>>>
Content-Length: 311

{"id":231,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":55,"character":29},"end":{"line":55,"character":30}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":232,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":29}}}
>>>
Content-Length: 829

{"id":232,"result":[{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":15}},"kind":1},{"range":{"start":{"line":44,"character":4},"end":{"line":44,"character":15}},"kind":1},{"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":15}},"kind":1},{"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":15}},"kind":1},{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}},"kind":1},{"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":15}},"kind":1},{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":233,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":26},"end":{"line":46,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":233,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":46,"character":26},"end":{"line":46,"character":29}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":234,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":20}}}
>>>
Content-Length: 301

{"id":234,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":235,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":21}}}
>>>
Content-Length: 393

{"id":235,"result":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"kind":1},{"range":{"start":{"line":40,"character":15},"end":{"line":40,"character":20}},"kind":1},{"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":20}},"kind":1},{"range":{"start":{"line":49,"character":15},"end":{"line":49,"character":20}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":236,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":21},"end":{"line":47,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":236,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":237,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":15},"end":{"line":48,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":237,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":284}}}Content-Length: 207

{"jsonrpc":"2.0","id":238,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":26}}}
>>>
Content-Length: 40

{"id":238,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":284}}}Content-Length: 212

{"jsonrpc":"2.0","id":239,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":26}}}
>>>
Content-Length: 38

{"id":239,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":240,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":25}}}
>>>
Content-Length: 311

{"id":240,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":55,"character":24},"end":{"line":55,"character":25}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":241,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":29}}}
>>>
Content-Length: 829

{"id":241,"result":[{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":15}},"kind":1},{"range":{"start":{"line":44,"character":4},"end":{"line":44,"character":15}},"kind":1},{"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":15}},"kind":1},{"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":15}},"kind":1},{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}},"kind":1},{"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":15}},"kind":1},{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":242,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":26},"end":{"line":46,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":242,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":46,"character":26},"end":{"line":46,"character":29}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":243,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":25},"end":{"line":49,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":243,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":244,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":28},"end":{"line":45,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":244,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":245,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":30},"end":{"line":46,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":245,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":246,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":29}}}
>>>
Content-Length: 230

{"id":246,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 212

{"jsonrpc":"2.0","id":247,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":23}}}
>>>
Content-Length: 200

{"id":247,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":6,"character":10},"end":{"line":6,"character":18}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":284}}}Content-Length: 280

{"jsonrpc":"2.0","id":248,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":248,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":285},"contentChanges":[{"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":31}},"rangeLength":31,"text":""}]}}Content-Length: 206

{"jsonrpc":"2.0","id":249,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":0}}}
>>>
Content-Length: 40

{"id":249,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":286},"contentChanges":[{"range":{"start":{"line":45,"character":28},"end":{"line":46,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 281

{"jsonrpc":"2.0","id":250,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":28},"end":{"line":45,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":250,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":286}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":286}}}Content-Length: 281

{"jsonrpc":"2.0","id":251,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":28},"end":{"line":44,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":251,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":287},"contentChanges":[{"range":{"start":{"line":44,"character":28},"end":{"line":44,"character":28}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 332

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":288},"contentChanges":[{"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":4}},"rangeLength":0,"text":"    analogWrite(greenPin, 255);"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":252,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":35},"end":{"line":45,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":252,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":288}}}Content-Length: 212

{"jsonrpc":"2.0","id":253,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":32}}}
>>>
Content-Length: 38

{"id":253,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":254,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":26}}}
>>>
Content-Length: 230

{"id":254,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":255,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":22}}}
>>>
Content-Length: 230

{"id":255,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":256,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":22}}}
>>>
Content-Length: 311

{"id":256,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":53,"character":16},"end":{"line":53,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":257,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":26}}}
>>>
Content-Length: 829

{"id":257,"result":[{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":15}},"kind":1},{"range":{"start":{"line":44,"character":4},"end":{"line":44,"character":15}},"kind":1},{"range":{"start":{"line":45,"character":8},"end":{"line":45,"character":19}},"kind":1},{"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":15}},"kind":1},{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}},"kind":1},{"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":15}},"kind":1},{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":258,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":24},"end":{"line":44,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":258,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":44,"character":24},"end":{"line":44,"character":26}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":289},"contentChanges":[{"range":{"start":{"line":44,"character":24},"end":{"line":44,"character":26}},"rangeLength":2,"text":"2"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":259,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":25},"end":{"line":44,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":259,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":290},"contentChanges":[{"range":{"start":{"line":44,"character":25},"end":{"line":44,"character":25}},"rangeLength":0,"text":"5"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":291},"contentChanges":[{"range":{"start":{"line":44,"character":26},"end":{"line":44,"character":26}},"rangeLength":0,"text":"5"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":260,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":27},"end":{"line":44,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":260,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":261,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":26}}}
>>>
Content-Length: 38

{"id":261,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":262,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":37,"character":17}}}
>>>
Content-Length: 200

{"id":262,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":6,"character":10},"end":{"line":6,"character":18}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":291}}}Content-Length: 211

{"jsonrpc":"2.0","id":263,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":23,"character":5}}}
>>>
Content-Length: 201

{"id":263,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":291}}}Content-Length: 212

{"jsonrpc":"2.0","id":264,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":30}}}
>>>
Content-Length: 38

{"id":264,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":265,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":21}}}
>>>
Content-Length: 208

{"id":265,"result":[{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","range":{"start":{"line":263,"character":12},"end":{"line":263,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":291}}}Content-Length: 11436

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","languageId":"cpp","version":1,"text":"/*\n Servo.cpp - Interrupt driven Servo library for Arduino using 16 bit timers- Version 2\n Copyright (c) 2009 Michael Margolis.  All right reserved.\n\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\n#if defined(ARDUINO_ARCH_AVR)\n\n#include <avr/interrupt.h>\n#include <Arduino.h>\n\n#include \"Servo.h\"\n\n#define usToTicks(_us)    (( clockCyclesPerMicrosecond()* _us) / 8)     // converts microseconds to tick (assumes prescale of 8)  // 12 Aug 2009\n#define ticksToUs(_ticks) (( (unsigned)_ticks * 8)/ clockCyclesPerMicrosecond() ) // converts from ticks back to microseconds\n\n\n#define TRIM_DURATION       2                               // compensation ticks to trim adjust for digitalWrite delays // 12 August 2009\n\n//#define NBR_TIMERS        (MAX_SERVOS / SERVOS_PER_TIMER)\n\nstatic servo_t servos[MAX_SERVOS];                          // static array of servo structures\nstatic volatile int8_t Channel[_Nbr_16timers ];             // counter for the servo being pulsed for each timer (or -1 if refresh interval)\n\nuint8_t ServoCount = 0;                                     // the total number of attached servos\n\n\n// convenience macros\n#define SERVO_INDEX_TO_TIMER(_servo_nbr) ((timer16_Sequence_t)(_servo_nbr / SERVOS_PER_TIMER)) // returns the timer controlling this servo\n#define SERVO_INDEX_TO_CHANNEL(_servo_nbr) (_servo_nbr % SERVOS_PER_TIMER)       // returns the index of the servo on this timer\n#define SERVO_INDEX(_timer,_channel)  ((_timer*SERVOS_PER_TIMER) + _channel)     // macro to access servo index by timer and channel\n#define SERVO(_timer,_channel)  (servos[SERVO_INDEX(_timer,_channel)])            // macro to access servo class by timer and channel\n\n#define SERVO_MIN() (MIN_PULSE_WIDTH - this->min * 4)  // minimum value in uS for this servo\n#define SERVO_MAX() (MAX_PULSE_WIDTH - this->max * 4)  // maximum value in uS for this servo\n\n/************ static functions common to all instances ***********************/\n\nstatic inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)\n{\n  if( Channel[timer] < 0 )\n    *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer\n  else{\n    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated\n  }\n\n  Channel[timer]++;    // increment to the next channel\n  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {\n    *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;\n    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high\n  }\n  else {\n    // finished all channels so wait for the refresh period to expire before starting over\n    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed\n      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);\n    else\n      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed\n    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel\n  }\n}\n\n#ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform\n// Interrupt handlers for Arduino\n#if defined(_useTimer1)\nSIGNAL (TIMER1_COMPA_vect)\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n\n#if defined(_useTimer3)\nSIGNAL (TIMER3_COMPA_vect)\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n\n#if defined(_useTimer4)\nSIGNAL (TIMER4_COMPA_vect)\n{\n  handle_interrupts(_timer4, &TCNT4, &OCR4A);\n}\n#endif\n\n#if defined(_useTimer5)\nSIGNAL (TIMER5_COMPA_vect)\n{\n  handle_interrupts(_timer5, &TCNT5, &OCR5A);\n}\n#endif\n\n#elif defined WIRING\n// Interrupt handlers for Wiring\n#if defined(_useTimer1)\nvoid Timer1Service()\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n#if defined(_useTimer3)\nvoid Timer3Service()\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n#endif\n\n\nstatic void initISR(timer16_Sequence_t timer)\n{\n#if defined (_useTimer1)\n  if(timer == _timer1) {\n    TCCR1A = 0;             // normal counting mode\n    TCCR1B = _BV(CS11);     // set prescaler of 8\n    TCNT1 = 0;              // clear the timer count\n#if defined(__AVR_ATmega8__)|| defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF1A);      // clear any pending interrupts;\n    TIMSK |=  _BV(OCIE1A) ;  // enable the output compare interrupt\n#else\n    // here if not ATmega8 or ATmega128\n    TIFR1 |= _BV(OCF1A);     // clear any pending interrupts;\n    TIMSK1 |=  _BV(OCIE1A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER1OUTCOMPAREA_INT, Timer1Service);\n#endif\n  }\n#endif\n\n#if defined (_useTimer3)\n  if(timer == _timer3) {\n    TCCR3A = 0;             // normal counting mode\n    TCCR3B = _BV(CS31);     // set prescaler of 8\n    TCNT3 = 0;              // clear the timer count\n#if defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF3A);     // clear any pending interrupts;\n\tETIMSK |= _BV(OCIE3A);  // enable the output compare interrupt\n#else\n    TIFR3 = _BV(OCF3A);     // clear any pending interrupts;\n    TIMSK3 =  _BV(OCIE3A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER3OUTCOMPAREA_INT, Timer3Service);  // for Wiring platform only\n#endif\n  }\n#endif\n\n#if defined (_useTimer4)\n  if(timer == _timer4) {\n    TCCR4A = 0;             // normal counting mode\n    TCCR4B = _BV(CS41);     // set prescaler of 8\n    TCNT4 = 0;              // clear the timer count\n    TIFR4 = _BV(OCF4A);     // clear any pending interrupts;\n    TIMSK4 =  _BV(OCIE4A) ; // enable the output compare interrupt\n  }\n#endif\n\n#if defined (_useTimer5)\n  if(timer == _timer5) {\n    TCCR5A = 0;             // normal counting mode\n    TCCR5B = _BV(CS51);     // set prescaler of 8\n    TCNT5 = 0;              // clear the timer count\n    TIFR5 = _BV(OCF5A);     // clear any pending interrupts;\n    TIMSK5 =  _BV(OCIE5A) ; // enable the output compare interrupt\n  }\n#endif\n}\n\nstatic void finISR(timer16_Sequence_t timer)\n{\n    //disable use of the given timer\n#if defined WIRING   // Wiring\n  if(timer == _timer1) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK1 &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #else\n    TIMSK &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #endif\n    timerDetach(TIMER1OUTCOMPAREA_INT);\n  }\n  else if(timer == _timer3) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK3 &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #else\n    ETIMSK &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #endif\n    timerDetach(TIMER3OUTCOMPAREA_INT);\n  }\n#else\n  //For arduino - in future: call here to a currently undefined function to reset the timer\n  (void) timer;  // squash \"unused parameter 'timer' [-Wunused-parameter]\" warning\n#endif\n}\n\nstatic boolean isTimerActive(timer16_Sequence_t timer)\n{\n  // returns true if any servo is active on this timer\n  for(uint8_t channel=0; channel < SERVOS_PER_TIMER; channel++) {\n    if(SERVO(timer,channel).Pin.isActive == true)\n      return true;\n  }\n  return false;\n}\n\n\n/****************** end of static functions ******************************/\n\nServo::Servo()\n{\n  if( ServoCount < MAX_SERVOS) {\n    this->servoIndex = ServoCount++;                    // assign a servo index to this instance\n\tservos[this->servoIndex].ticks = usToTicks(DEFAULT_PULSE_WIDTH);   // store default values  - 12 Aug 2009\n  }\n  else\n    this->servoIndex = INVALID_SERVO ;  // too many servos\n}\n\nuint8_t Servo::attach(int pin)\n{\n  return this->attach(pin, MIN_PULSE_WIDTH, MAX_PULSE_WIDTH);\n}\n\nuint8_t Servo::attach(int pin, int min, int max)\n{\n  if(this->servoIndex < MAX_SERVOS ) {\n    pinMode( pin, OUTPUT) ;                                   // set servo pin to output\n    servos[this->servoIndex].Pin.nbr = pin;\n    // todo min/max check: abs(min - MIN_PULSE_WIDTH) /4 < 128\n    this->min  = (MIN_PULSE_WIDTH - min)/4; //resolution of min/max is 4 uS\n    this->max  = (MAX_PULSE_WIDTH - max)/4;\n    // initialize the timer if it has not already been initialized\n    timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n    if(isTimerActive(timer) == false)\n      initISR(timer);\n    servos[this->servoIndex].Pin.isActive = true;  // this must be set after the check for isTimerActive\n  }\n  return this->servoIndex ;\n}\n\nvoid Servo::detach()\n{\n  servos[this->servoIndex].Pin.isActive = false;\n  timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n  if(isTimerActive(timer) == false) {\n    finISR(timer);\n  }\n}\n\nvoid Servo::write(int value)\n{\n  if(value < MIN_PULSE_WIDTH)\n  {  // treat values less than 544 as angles in degrees (valid values in microseconds are handled as microseconds)\n    if(value < 0) value = 0;\n    if(value > 180) value = 180;\n    value = map(value, 0, 180, SERVO_MIN(),  SERVO_MAX());\n  }\n  this->writeMicroseconds(value);\n}\n\nvoid Servo::writeMicroseconds(int value)\n{\n  // calculate and store the values for the given channel\n  byte channel = this->servoIndex;\n  if( (channel < MAX_SERVOS) )   // ensure channel is valid\n  {\n    if( value < SERVO_MIN() )          // ensure pulse width is valid\n      value = SERVO_MIN();\n    else if( value > SERVO_MAX() )\n      value = SERVO_MAX();\n\n    value = value - TRIM_DURATION;\n    value = usToTicks(value);  // convert to ticks after compensating for interrupt overhead - 12 Aug 2009\n\n    uint8_t oldSREG = SREG;\n    cli();\n    servos[channel].ticks = value;\n    SREG = oldSREG;\n  }\n}\n\nint Servo::read() // return the value as degrees\n{\n  return  map( this->readMicroseconds()+1, SERVO_MIN(), SERVO_MAX(), 0, 180);\n}\n\nint Servo::readMicroseconds()\n{\n  unsigned int pulsewidth;\n  if( this->servoIndex != INVALID_SERVO )\n    pulsewidth = ticksToUs(servos[this->servoIndex].ticks)  + TRIM_DURATION ;   // 12 aug 2009\n  else\n    pulsewidth  = 0;\n\n  return pulsewidth;\n}\n\nbool Servo::attached()\n{\n  return servos[this->servoIndex].Pin.isActive ;\n}\n\n#endif // ARDUINO_ARCH_AVR\n\n"}}}Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp"}}}
>>>
Content-Length: 177

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":266,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":17}}}
>>>
Content-Length: 208

{"id":266,"result":[{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","range":{"start":{"line":263,"character":12},"end":{"line":263,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 11436

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","languageId":"cpp","version":1,"text":"/*\n Servo.cpp - Interrupt driven Servo library for Arduino using 16 bit timers- Version 2\n Copyright (c) 2009 Michael Margolis.  All right reserved.\n\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\n#if defined(ARDUINO_ARCH_AVR)\n\n#include <avr/interrupt.h>\n#include <Arduino.h>\n\n#include \"Servo.h\"\n\n#define usToTicks(_us)    (( clockCyclesPerMicrosecond()* _us) / 8)     // converts microseconds to tick (assumes prescale of 8)  // 12 Aug 2009\n#define ticksToUs(_ticks) (( (unsigned)_ticks * 8)/ clockCyclesPerMicrosecond() ) // converts from ticks back to microseconds\n\n\n#define TRIM_DURATION       2                               // compensation ticks to trim adjust for digitalWrite delays // 12 August 2009\n\n//#define NBR_TIMERS        (MAX_SERVOS / SERVOS_PER_TIMER)\n\nstatic servo_t servos[MAX_SERVOS];                          // static array of servo structures\nstatic volatile int8_t Channel[_Nbr_16timers ];             // counter for the servo being pulsed for each timer (or -1 if refresh interval)\n\nuint8_t ServoCount = 0;                                     // the total number of attached servos\n\n\n// convenience macros\n#define SERVO_INDEX_TO_TIMER(_servo_nbr) ((timer16_Sequence_t)(_servo_nbr / SERVOS_PER_TIMER)) // returns the timer controlling this servo\n#define SERVO_INDEX_TO_CHANNEL(_servo_nbr) (_servo_nbr % SERVOS_PER_TIMER)       // returns the index of the servo on this timer\n#define SERVO_INDEX(_timer,_channel)  ((_timer*SERVOS_PER_TIMER) + _channel)     // macro to access servo index by timer and channel\n#define SERVO(_timer,_channel)  (servos[SERVO_INDEX(_timer,_channel)])            // macro to access servo class by timer and channel\n\n#define SERVO_MIN() (MIN_PULSE_WIDTH - this->min * 4)  // minimum value in uS for this servo\n#define SERVO_MAX() (MAX_PULSE_WIDTH - this->max * 4)  // maximum value in uS for this servo\n\n/************ static functions common to all instances ***********************/\n\nstatic inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)\n{\n  if( Channel[timer] < 0 )\n    *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer\n  else{\n    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated\n  }\n\n  Channel[timer]++;    // increment to the next channel\n  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {\n    *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;\n    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high\n  }\n  else {\n    // finished all channels so wait for the refresh period to expire before starting over\n    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed\n      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);\n    else\n      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed\n    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel\n  }\n}\n\n#ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform\n// Interrupt handlers for Arduino\n#if defined(_useTimer1)\nSIGNAL (TIMER1_COMPA_vect)\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n\n#if defined(_useTimer3)\nSIGNAL (TIMER3_COMPA_vect)\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n\n#if defined(_useTimer4)\nSIGNAL (TIMER4_COMPA_vect)\n{\n  handle_interrupts(_timer4, &TCNT4, &OCR4A);\n}\n#endif\n\n#if defined(_useTimer5)\nSIGNAL (TIMER5_COMPA_vect)\n{\n  handle_interrupts(_timer5, &TCNT5, &OCR5A);\n}\n#endif\n\n#elif defined WIRING\n// Interrupt handlers for Wiring\n#if defined(_useTimer1)\nvoid Timer1Service()\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n#if defined(_useTimer3)\nvoid Timer3Service()\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n#endif\n\n\nstatic void initISR(timer16_Sequence_t timer)\n{\n#if defined (_useTimer1)\n  if(timer == _timer1) {\n    TCCR1A = 0;             // normal counting mode\n    TCCR1B = _BV(CS11);     // set prescaler of 8\n    TCNT1 = 0;              // clear the timer count\n#if defined(__AVR_ATmega8__)|| defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF1A);      // clear any pending interrupts;\n    TIMSK |=  _BV(OCIE1A) ;  // enable the output compare interrupt\n#else\n    // here if not ATmega8 or ATmega128\n    TIFR1 |= _BV(OCF1A);     // clear any pending interrupts;\n    TIMSK1 |=  _BV(OCIE1A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER1OUTCOMPAREA_INT, Timer1Service);\n#endif\n  }\n#endif\n\n#if defined (_useTimer3)\n  if(timer == _timer3) {\n    TCCR3A = 0;             // normal counting mode\n    TCCR3B = _BV(CS31);     // set prescaler of 8\n    TCNT3 = 0;              // clear the timer count\n#if defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF3A);     // clear any pending interrupts;\n\tETIMSK |= _BV(OCIE3A);  // enable the output compare interrupt\n#else\n    TIFR3 = _BV(OCF3A);     // clear any pending interrupts;\n    TIMSK3 =  _BV(OCIE3A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER3OUTCOMPAREA_INT, Timer3Service);  // for Wiring platform only\n#endif\n  }\n#endif\n\n#if defined (_useTimer4)\n  if(timer == _timer4) {\n    TCCR4A = 0;             // normal counting mode\n    TCCR4B = _BV(CS41);     // set prescaler of 8\n    TCNT4 = 0;              // clear the timer count\n    TIFR4 = _BV(OCF4A);     // clear any pending interrupts;\n    TIMSK4 =  _BV(OCIE4A) ; // enable the output compare interrupt\n  }\n#endif\n\n#if defined (_useTimer5)\n  if(timer == _timer5) {\n    TCCR5A = 0;             // normal counting mode\n    TCCR5B = _BV(CS51);     // set prescaler of 8\n    TCNT5 = 0;              // clear the timer count\n    TIFR5 = _BV(OCF5A);     // clear any pending interrupts;\n    TIMSK5 =  _BV(OCIE5A) ; // enable the output compare interrupt\n  }\n#endif\n}\n\nstatic void finISR(timer16_Sequence_t timer)\n{\n    //disable use of the given timer\n#if defined WIRING   // Wiring\n  if(timer == _timer1) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK1 &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #else\n    TIMSK &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #endif\n    timerDetach(TIMER1OUTCOMPAREA_INT);\n  }\n  else if(timer == _timer3) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK3 &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #else\n    ETIMSK &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #endif\n    timerDetach(TIMER3OUTCOMPAREA_INT);\n  }\n#else\n  //For arduino - in future: call here to a currently undefined function to reset the timer\n  (void) timer;  // squash \"unused parameter 'timer' [-Wunused-parameter]\" warning\n#endif\n}\n\nstatic boolean isTimerActive(timer16_Sequence_t timer)\n{\n  // returns true if any servo is active on this timer\n  for(uint8_t channel=0; channel < SERVOS_PER_TIMER; channel++) {\n    if(SERVO(timer,channel).Pin.isActive == true)\n      return true;\n  }\n  return false;\n}\n\n\n/****************** end of static functions ******************************/\n\nServo::Servo()\n{\n  if( ServoCount < MAX_SERVOS) {\n    this->servoIndex = ServoCount++;                    // assign a servo index to this instance\n\tservos[this->servoIndex].ticks = usToTicks(DEFAULT_PULSE_WIDTH);   // store default values  - 12 Aug 2009\n  }\n  else\n    this->servoIndex = INVALID_SERVO ;  // too many servos\n}\n\nuint8_t Servo::attach(int pin)\n{\n  return this->attach(pin, MIN_PULSE_WIDTH, MAX_PULSE_WIDTH);\n}\n\nuint8_t Servo::attach(int pin, int min, int max)\n{\n  if(this->servoIndex < MAX_SERVOS ) {\n    pinMode( pin, OUTPUT) ;                                   // set servo pin to output\n    servos[this->servoIndex].Pin.nbr = pin;\n    // todo min/max check: abs(min - MIN_PULSE_WIDTH) /4 < 128\n    this->min  = (MIN_PULSE_WIDTH - min)/4; //resolution of min/max is 4 uS\n    this->max  = (MAX_PULSE_WIDTH - max)/4;\n    // initialize the timer if it has not already been initialized\n    timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n    if(isTimerActive(timer) == false)\n      initISR(timer);\n    servos[this->servoIndex].Pin.isActive = true;  // this must be set after the check for isTimerActive\n  }\n  return this->servoIndex ;\n}\n\nvoid Servo::detach()\n{\n  servos[this->servoIndex].Pin.isActive = false;\n  timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n  if(isTimerActive(timer) == false) {\n    finISR(timer);\n  }\n}\n\nvoid Servo::write(int value)\n{\n  if(value < MIN_PULSE_WIDTH)\n  {  // treat values less than 544 as angles in degrees (valid values in microseconds are handled as microseconds)\n    if(value < 0) value = 0;\n    if(value > 180) value = 180;\n    value = map(value, 0, 180, SERVO_MIN(),  SERVO_MAX());\n  }\n  this->writeMicroseconds(value);\n}\n\nvoid Servo::writeMicroseconds(int value)\n{\n  // calculate and store the values for the given channel\n  byte channel = this->servoIndex;\n  if( (channel < MAX_SERVOS) )   // ensure channel is valid\n  {\n    if( value < SERVO_MIN() )          // ensure pulse width is valid\n      value = SERVO_MIN();\n    else if( value > SERVO_MAX() )\n      value = SERVO_MAX();\n\n    value = value - TRIM_DURATION;\n    value = usToTicks(value);  // convert to ticks after compensating for interrupt overhead - 12 Aug 2009\n\n    uint8_t oldSREG = SREG;\n    cli();\n    servos[channel].ticks = value;\n    SREG = oldSREG;\n  }\n}\n\nint Servo::read() // return the value as degrees\n{\n  return  map( this->readMicroseconds()+1, SERVO_MIN(), SERVO_MAX(), 0, 180);\n}\n\nint Servo::readMicroseconds()\n{\n  unsigned int pulsewidth;\n  if( this->servoIndex != INVALID_SERVO )\n    pulsewidth = ticksToUs(servos[this->servoIndex].ticks)  + TRIM_DURATION ;   // 12 aug 2009\n  else\n    pulsewidth  = 0;\n\n  return pulsewidth;\n}\n\nbool Servo::attached()\n{\n  return servos[this->servoIndex].Pin.isActive ;\n}\n\n#endif // ARDUINO_ARCH_AVR\n\n"}}}Content-Length: 207

{"jsonrpc":"2.0","id":267,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":17}}}
>>>
Content-Length: 301

{"id":267,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp"}}}
>>>
Content-Length: 177

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":291}}}Content-Length: 207

{"jsonrpc":"2.0","id":268,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":26}}}
>>>
Content-Length: 40

{"id":268,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":269,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":22}}}
>>>
Content-Length: 40

{"id":269,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":270,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":23}}}
>>>
Content-Length: 393

{"id":270,"result":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"kind":1},{"range":{"start":{"line":40,"character":15},"end":{"line":40,"character":20}},"kind":1},{"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":20}},"kind":1},{"range":{"start":{"line":49,"character":15},"end":{"line":49,"character":20}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":271,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":21},"end":{"line":47,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":271,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":47,"character":21},"end":{"line":47,"character":23}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":272,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":23}}}
>>>
Content-Length: 38

{"id":272,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":273,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":22}}}
>>>
Content-Length: 40

{"id":273,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":274,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":22}}}
>>>
Content-Length: 38

{"id":274,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":291}}}Content-Length: 207

{"jsonrpc":"2.0","id":275,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":22}}}
>>>
Content-Length: 40

{"id":275,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":276,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":22}}}
>>>
Content-Length: 38

{"id":276,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":277,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":22}}}
>>>
Content-Length: 40

{"id":277,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":278,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":22}}}
>>>
Content-Length: 38

{"id":278,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":279,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":21},"end":{"line":47,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":279,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":47,"character":21},"end":{"line":47,"character":23}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":280,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":22}}}
>>>
Content-Length: 40

{"id":280,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":281,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":23}}}
>>>
Content-Length: 38

{"id":281,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":282,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":21},"end":{"line":49,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":282,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":49,"character":21},"end":{"line":49,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":292},"contentChanges":[{"range":{"start":{"line":49,"character":21},"end":{"line":49,"character":24}},"rangeLength":3,"text":"1"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":293},"contentChanges":[{"range":{"start":{"line":49,"character":22},"end":{"line":49,"character":22}},"rangeLength":0,"text":"1"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":283,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":23},"end":{"line":49,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":283,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":294},"contentChanges":[{"range":{"start":{"line":49,"character":23},"end":{"line":49,"character":23}},"rangeLength":0,"text":"5"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":284,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":24},"end":{"line":49,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":284,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":285,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":11}}}
>>>
Content-Length: 38

{"id":285,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":286,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":11}}}
>>>
Content-Length: 40

{"id":286,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":294}}}Content-Length: 219

{"jsonrpc":"2.0","id":287,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":287,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":288,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":50,"character":10},"end":{"line":50,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":288,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":50,"character":10},"end":{"line":50,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":289,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":11}}}
>>>
Content-Length: 40

{"id":289,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":295},"contentChanges":[{"range":{"start":{"line":50,"character":10},"end":{"line":50,"character":13}},"rangeLength":3,"text":"1"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":296},"contentChanges":[{"range":{"start":{"line":50,"character":11},"end":{"line":50,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":297},"contentChanges":[{"range":{"start":{"line":50,"character":12},"end":{"line":50,"character":12}},"rangeLength":0,"text":"0"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":290,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":50,"character":13},"end":{"line":50,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":290,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":297}}}Content-Length: 212

{"jsonrpc":"2.0","id":291,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":291,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":292,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":11}}}
>>>
Content-Length: 201

{"id":292,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":293,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":13}}}
>>>
Content-Length: 287

{"id":293,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":57,"character":13},"end":{"line":57,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":294,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":13}}}
>>>
Content-Length: 472

{"id":294,"result":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":9}},"kind":1},{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":9}},"kind":1},{"range":{"start":{"line":48,"character":4},"end":{"line":48,"character":9}},"kind":1},{"range":{"start":{"line":50,"character":4},"end":{"line":50,"character":9}},"kind":1},{"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":7}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":295,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":13},"end":{"line":48,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":295,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":296,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":12}}}
>>>
Content-Length: 40

{"id":296,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":297,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":297,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":298},"contentChanges":[{"range":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}},"rangeLength":3,"text":"1"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":298,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":11},"end":{"line":48,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":298,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":299},"contentChanges":[{"range":{"start":{"line":48,"character":11},"end":{"line":48,"character":11}},"rangeLength":0,"text":"6"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":299,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":12},"end":{"line":48,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":299,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":299}}}Content-Length: 207

{"jsonrpc":"2.0","id":300,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":13}}}
>>>
Content-Length: 251

{"id":300,"result":{"contents":{"kind":"markdown","value":"### variable `microServo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo microServo\n```"},"range":{"start":{"line":56,"character":4},"end":{"line":56,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":300},"contentChanges":[{"range":{"start":{"line":48,"character":11},"end":{"line":48,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":301},"contentChanges":[{"range":{"start":{"line":48,"character":11},"end":{"line":48,"character":11}},"rangeLength":0,"text":"5"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":302},"contentChanges":[{"range":{"start":{"line":48,"character":12},"end":{"line":48,"character":12}},"rangeLength":0,"text":"o"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":303},"contentChanges":[{"range":{"start":{"line":48,"character":13},"end":{"line":48,"character":13}},"rangeLength":0,"text":"0"}]}}
>>>
Content-Length: 367

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":48,"character":12},"end":{"line":48,"character":14}},"severity":1,"code":"invalid_suffix_constant","source":"clang","message":"Invalid suffix 'o0' on integer constant"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 475

{"jsonrpc":"2.0","id":301,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":14},"end":{"line":48,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":48,"character":12},"end":{"line":48,"character":14}},"message":"Invalid suffix 'o0' on integer constant","severity":1,"code":"invalid_suffix_constant","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":301,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":303}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":304},"contentChanges":[{"range":{"start":{"line":48,"character":13},"end":{"line":48,"character":14}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 366

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":48,"character":12},"end":{"line":48,"character":13}},"severity":1,"code":"invalid_suffix_constant","source":"clang","message":"Invalid suffix 'o' on integer constant"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":305},"contentChanges":[{"range":{"start":{"line":48,"character":12},"end":{"line":48,"character":13}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":306},"contentChanges":[{"range":{"start":{"line":48,"character":12},"end":{"line":48,"character":12}},"rangeLength":0,"text":"0"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":302,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":13},"end":{"line":48,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":302,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":306}}}Content-Length: 212

{"jsonrpc":"2.0","id":303,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":13}}}
>>>
Content-Length: 201

{"id":303,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":304,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":15}}}
>>>
Content-Length: 230

{"id":304,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":305,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":13}}}
>>>
Content-Length: 223

{"id":305,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","range":{"start":{"line":105,"character":5},"end":{"line":105,"character":10}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 12891

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","languageId":"c","version":1,"text":"/*\n  wiring.c - Partial implementation of the Wiring API for the ATmega8.\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#include \"wiring_private.h\"\n\n// the prescaler is set so that timer0 ticks every 64 clock cycles, and the\n// the overflow handler is called every 256 ticks.\n#define MICROSECONDS_PER_TIMER0_OVERFLOW (clockCyclesToMicroseconds(64 * 256))\n\n// the whole number of milliseconds per timer0 overflow\n#define MILLIS_INC (MICROSECONDS_PER_TIMER0_OVERFLOW / 1000)\n\n// the fractional number of milliseconds per timer0 overflow. we shift right\n// by three to fit these numbers into a byte. (for the clock speeds we care\n// about - 8 and 16 MHz - this doesn't lose precision.)\n#define FRACT_INC ((MICROSECONDS_PER_TIMER0_OVERFLOW % 1000) >> 3)\n#define FRACT_MAX (1000 >> 3)\n\nvolatile unsigned long timer0_overflow_count = 0;\nvolatile unsigned long timer0_millis = 0;\nstatic unsigned char timer0_fract = 0;\n\n#if defined(TIM0_OVF_vect)\nISR(TIM0_OVF_vect)\n#else\nISR(TIMER0_OVF_vect)\n#endif\n{\n\t// copy these to local variables so they can be stored in registers\n\t// (volatile variables must be read from memory on every access)\n\tunsigned long m = timer0_millis;\n\tunsigned char f = timer0_fract;\n\n\tm += MILLIS_INC;\n\tf += FRACT_INC;\n\tif (f >= FRACT_MAX) {\n\t\tf -= FRACT_MAX;\n\t\tm += 1;\n\t}\n\n\ttimer0_fract = f;\n\ttimer0_millis = m;\n\ttimer0_overflow_count++;\n}\n\nunsigned long millis()\n{\n\tunsigned long m;\n\tuint8_t oldSREG = SREG;\n\n\t// disable interrupts while we read timer0_millis or we might get an\n\t// inconsistent value (e.g. in the middle of a write to timer0_millis)\n\tcli();\n\tm = timer0_millis;\n\tSREG = oldSREG;\n\n\treturn m;\n}\n\nunsigned long micros() {\n\tunsigned long m;\n\tuint8_t oldSREG = SREG, t;\n\t\n\tcli();\n\tm = timer0_overflow_count;\n#if defined(TCNT0)\n\tt = TCNT0;\n#elif defined(TCNT0L)\n\tt = TCNT0L;\n#else\n\t#error TIMER 0 not defined\n#endif\n\n#ifdef TIFR0\n\tif ((TIFR0 & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#else\n\tif ((TIFR & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#endif\n\n\tSREG = oldSREG;\n\t\n\treturn ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());\n}\n\nvoid delay(unsigned long ms)\n{\n\tuint32_t start = micros();\n\n\twhile (ms > 0) {\n\t\tyield();\n\t\twhile ( ms > 0 && (micros() - start) >= 1000) {\n\t\t\tms--;\n\t\t\tstart += 1000;\n\t\t}\n\t}\n}\n\n/* Delay for the given number of microseconds.  Assumes a 1, 8, 12, 16, 20 or 24 MHz clock. */\nvoid delayMicroseconds(unsigned int us)\n{\n\t// call = 4 cycles + 2 to 4 cycles to init us(2 for constant delay, 4 for variable)\n\n\t// calling avrlib's delay_us() function with low values (e.g. 1 or\n\t// 2 microseconds) gives delays longer than desired.\n\t//delay_us(us);\n#if F_CPU >= 24000000L\n\t// for the 24 MHz clock for the aventurous ones, trying to overclock\n\n\t// zero delay fix\n\tif (!us) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/6 of a microsecond (4 cycles)\n\t// per iteration, so execute it six times for each microsecond of\n\t// delay requested.\n\tus *= 6; // x6 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 22 (24) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //=2 cycles\n\n#elif F_CPU >= 20000000L\n\t// for the 20 MHz clock on rare Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 18 (20) cycles, which is 1us\n\t__asm__ __volatile__ (\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\"); //just waiting 4 cycles\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/5 of a microsecond (4 cycles)\n\t// per iteration, so execute it five times for each microsecond of\n\t// delay requested.\n\tus = (us << 2) + us; // x5 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 26 (28) cycles above, remove 7, (7*4=28)\n\t// us is at least 10 so we can substract 7\n\tus -= 7; // 2 cycles\n\n#elif F_CPU >= 16000000L\n\t// for the 16 MHz clock on most Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/4 of a microsecond (4 cycles)\n\t// per iteration, so execute it four times for each microsecond of\n\t// delay requested.\n\tus <<= 2; // x4 us, = 4 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 19 (21) cycles above, remove 5, (5*4=20)\n\t// us is at least 8 so we can substract 5\n\tus -= 5; // = 2 cycles,\n\n#elif F_CPU >= 12000000L\n\t// for the 12 MHz clock if somebody is working with USB\n\n\t// for a 1 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1.5us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/3 of a microsecond (4 cycles)\n\t// per iteration, so execute it three times for each microsecond of\n\t// delay requested.\n\tus = (us << 1) + us; // x3 us, = 5 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 20 (22) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //2 cycles\n\n#elif F_CPU >= 8000000L\n\t// for the 8 MHz internal clock\n\n\t// for a 1 and 2 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 2us\n\tif (us <= 2) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/2 of a microsecond (4 cycles)\n\t// per iteration, so execute it twice for each microsecond of\n\t// delay requested.\n\tus <<= 1; //x2 us, = 2 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 17 (19) cycles above, remove 4, (4*4=16)\n\t// us is at least 6 so we can substract 4\n\tus -= 4; // = 2 cycles\n\n#else\n\t// for the 1 MHz internal clock (default settings for common Atmega microcontrollers)\n\n\t// the overhead of the function calls is 14 (16) cycles\n\tif (us <= 16) return; //= 3 cycles, (4 when true)\n\tif (us <= 25) return; //= 3 cycles, (4 when true), (must be at least 25 if we want to substract 22)\n\n\t// compensate for the time taken by the preceeding and next commands (about 22 cycles)\n\tus -= 22; // = 2 cycles\n\t// the following loop takes 4 microseconds (4 cycles)\n\t// per iteration, so execute it us/4 times\n\t// us is at least 4, divided by 4 gives us 1 (no zero delay bug)\n\tus >>= 2; // us div 4, = 4 cycles\n\t\n\n#endif\n\n\t// busy wait\n\t__asm__ __volatile__ (\n\t\t\"1: sbiw %0,1\" \"\\n\\t\" // 2 cycles\n\t\t\"brne 1b\" : \"=w\" (us) : \"0\" (us) // 2 cycles\n\t);\n\t// return = 4 cycles\n}\n\nvoid init()\n{\n\t// this needs to be called before setup() or some functions won't\n\t// work there\n\tsei();\n\t\n\t// on the ATmega168, timer 0 is also used for fast hardware pwm\n\t// (using phase-correct PWM would mean that timer 0 overflowed half as often\n\t// resulting in different millis() behavior on the ATmega8 and ATmega168)\n#if defined(TCCR0A) && defined(WGM01)\n\tsbi(TCCR0A, WGM01);\n\tsbi(TCCR0A, WGM00);\n#endif\n\n\t// set timer 0 prescale factor to 64\n#if defined(__AVR_ATmega128__)\n\t// CPU specific: different values for the ATmega128\n\tsbi(TCCR0, CS02);\n#elif defined(TCCR0) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard atmega8\n\tsbi(TCCR0, CS01);\n\tsbi(TCCR0, CS00);\n#elif defined(TCCR0B) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard 168/328/1280/2560\n\tsbi(TCCR0B, CS01);\n\tsbi(TCCR0B, CS00);\n#elif defined(TCCR0A) && defined(CS01) && defined(CS00)\n\t// this combination is for the __AVR_ATmega645__ series\n\tsbi(TCCR0A, CS01);\n\tsbi(TCCR0A, CS00);\n#else\n\t#error Timer 0 prescale factor 64 not set correctly\n#endif\n\n\t// enable timer 0 overflow interrupt\n#if defined(TIMSK) && defined(TOIE0)\n\tsbi(TIMSK, TOIE0);\n#elif defined(TIMSK0) && defined(TOIE0)\n\tsbi(TIMSK0, TOIE0);\n#else\n\t#error\tTimer 0 overflow interrupt not set correctly\n#endif\n\n\t// timers 1 and 2 are used for phase-correct hardware pwm\n\t// this is better for motors as it ensures an even waveform\n\t// note, however, that fast pwm mode can achieve a frequency of up\n\t// 8 MHz (with a 16 MHz clock) at 50% duty cycle\n\n#if defined(TCCR1B) && defined(CS11) && defined(CS10)\n\tTCCR1B = 0;\n\n\t// set timer 1 prescale factor to 64\n\tsbi(TCCR1B, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1B, CS10);\n#endif\n#elif defined(TCCR1) && defined(CS11) && defined(CS10)\n\tsbi(TCCR1, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1, CS10);\n#endif\n#endif\n\t// put timer 1 in 8-bit phase correct pwm mode\n#if defined(TCCR1A) && defined(WGM10)\n\tsbi(TCCR1A, WGM10);\n#endif\n\n\t// set timer 2 prescale factor to 64\n#if defined(TCCR2) && defined(CS22)\n\tsbi(TCCR2, CS22);\n#elif defined(TCCR2B) && defined(CS22)\n\tsbi(TCCR2B, CS22);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n\t// configure timer 2 for phase correct pwm (8-bit)\n#if defined(TCCR2) && defined(WGM20)\n\tsbi(TCCR2, WGM20);\n#elif defined(TCCR2A) && defined(WGM20)\n\tsbi(TCCR2A, WGM20);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n#if defined(TCCR3B) && defined(CS31) && defined(WGM30)\n\tsbi(TCCR3B, CS31);\t\t// set timer 3 prescale factor to 64\n\tsbi(TCCR3B, CS30);\n\tsbi(TCCR3A, WGM30);\t\t// put timer 3 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(TCCR4A) && defined(TCCR4B) && defined(TCCR4D) /* beginning of timer4 block for 32U4 and similar */\n\tsbi(TCCR4B, CS42);\t\t// set timer4 prescale factor to 64\n\tsbi(TCCR4B, CS41);\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4D, WGM40);\t\t// put timer 4 in phase- and frequency-correct PWM mode\t\n\tsbi(TCCR4A, PWM4A);\t\t// enable PWM mode for comparator OCR4A\n\tsbi(TCCR4C, PWM4D);\t\t// enable PWM mode for comparator OCR4D\n#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */\n#if defined(TCCR4B) && defined(CS41) && defined(WGM40)\n\tsbi(TCCR4B, CS41);\t\t// set timer 4 prescale factor to 64\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4A, WGM40);\t\t// put timer 4 in 8-bit phase correct pwm mode\n#endif\n#endif /* end timer4 block for ATMEGA1280/2560 and similar */\t\n\n#if defined(TCCR5B) && defined(CS51) && defined(WGM50)\n\tsbi(TCCR5B, CS51);\t\t// set timer 5 prescale factor to 64\n\tsbi(TCCR5B, CS50);\n\tsbi(TCCR5A, WGM50);\t\t// put timer 5 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(ADCSRA)\n\t// set a2d prescaler so we are inside the desired 50-200 KHz range.\n\t#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 4000000 // 4 MHz / 32 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 2000000 // 2 MHz / 16 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 1000000 // 1 MHz / 8 = 125 KHz\n\t\tcbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#else // 128 kHz / 2 = 64 KHz -> This is the closest you can get, the prescaler is 2\n\t\tcbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#endif\n\t// enable a2d conversions\n\tsbi(ADCSRA, ADEN);\n#endif\n\n\t// the bootloader connects pins 0 and 1 to the USART; disconnect them\n\t// here so they can be used as normal digital i/o; they will be\n\t// reconnected in Serial.begin()\n#if defined(UCSRB)\n\tUCSRB = 0;\n#elif defined(UCSR0B)\n\tUCSR0B = 0;\n#endif\n}\n"}}}Content-Length: 183

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c"}}}
>>>
Content-Length: 193

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":306,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":12}}}
>>>
Content-Length: 251

{"id":306,"result":{"contents":{"kind":"markdown","value":"### variable `microServo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo microServo\n```"},"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":307,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":12}}}
>>>
Content-Length: 565

{"id":307,"result":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}},"kind":1},{"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":12}},"kind":1},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":14}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":14}},"kind":1},{"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":14}},"kind":1},{"range":{"start":{"line":49,"character":4},"end":{"line":49,"character":14}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":308,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":49,"character":4},"end":{"line":49,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":308,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":309,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":12}}}
>>>
Content-Length: 40

{"id":309,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":310,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":12}}}
>>>
Content-Length: 38

{"id":310,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":311,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":12}}}
>>>
Content-Length: 38

{"id":311,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":312,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":312,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":313,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":12}}}
>>>
Content-Length: 201

{"id":313,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":314,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":12}}}
>>>
Content-Length: 251

{"id":314,"result":{"contents":{"kind":"markdown","value":"### variable `microServo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo microServo\n```"},"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":315,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":315,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":316,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":316,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":317,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":317,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":307},"contentChanges":[{"range":{"start":{"line":50,"character":10},"end":{"line":50,"character":13}},"rangeLength":3,"text":"150"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":318,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":318,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":319,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":16}}}
>>>
Content-Length: 200

{"id":319,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":10},"end":{"line":7,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":320,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":50,"character":13},"end":{"line":50,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":320,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":321,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":9}}}
>>>
Content-Length: 201

{"id":321,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":307}}}Content-Length: 219

{"jsonrpc":"2.0","id":322,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":11}}}
>>>
Content-Length: 38

{"id":322,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":323,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":11}}}
>>>
Content-Length: 38

{"id":323,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":324,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":324,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":325,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":43,"character":11}}}
>>>
Content-Length: 38

{"id":325,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":326,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":41,"character":11}}}
>>>
Content-Length: 38

{"id":326,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":327,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":41,"character":10}}}
>>>
Content-Length: 40

{"id":327,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":328,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":41,"character":11}}}
>>>
Content-Length: 40

{"id":328,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":329,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":41,"character":11}}}
>>>
Content-Length: 38

{"id":329,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":330,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":41,"character":11}}}
>>>
Content-Length: 38

{"id":330,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":308},"contentChanges":[{"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":13}},"rangeLength":3,"text":"150"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":331,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":12}}}
>>>
Content-Length: 230

{"id":331,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":332,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":13}}}
>>>
Content-Length: 223

{"id":332,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","range":{"start":{"line":105,"character":5},"end":{"line":105,"character":10}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":333,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":41,"character":13},"end":{"line":41,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":333,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 12891

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","languageId":"c","version":1,"text":"/*\n  wiring.c - Partial implementation of the Wiring API for the ATmega8.\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#include \"wiring_private.h\"\n\n// the prescaler is set so that timer0 ticks every 64 clock cycles, and the\n// the overflow handler is called every 256 ticks.\n#define MICROSECONDS_PER_TIMER0_OVERFLOW (clockCyclesToMicroseconds(64 * 256))\n\n// the whole number of milliseconds per timer0 overflow\n#define MILLIS_INC (MICROSECONDS_PER_TIMER0_OVERFLOW / 1000)\n\n// the fractional number of milliseconds per timer0 overflow. we shift right\n// by three to fit these numbers into a byte. (for the clock speeds we care\n// about - 8 and 16 MHz - this doesn't lose precision.)\n#define FRACT_INC ((MICROSECONDS_PER_TIMER0_OVERFLOW % 1000) >> 3)\n#define FRACT_MAX (1000 >> 3)\n\nvolatile unsigned long timer0_overflow_count = 0;\nvolatile unsigned long timer0_millis = 0;\nstatic unsigned char timer0_fract = 0;\n\n#if defined(TIM0_OVF_vect)\nISR(TIM0_OVF_vect)\n#else\nISR(TIMER0_OVF_vect)\n#endif\n{\n\t// copy these to local variables so they can be stored in registers\n\t// (volatile variables must be read from memory on every access)\n\tunsigned long m = timer0_millis;\n\tunsigned char f = timer0_fract;\n\n\tm += MILLIS_INC;\n\tf += FRACT_INC;\n\tif (f >= FRACT_MAX) {\n\t\tf -= FRACT_MAX;\n\t\tm += 1;\n\t}\n\n\ttimer0_fract = f;\n\ttimer0_millis = m;\n\ttimer0_overflow_count++;\n}\n\nunsigned long millis()\n{\n\tunsigned long m;\n\tuint8_t oldSREG = SREG;\n\n\t// disable interrupts while we read timer0_millis or we might get an\n\t// inconsistent value (e.g. in the middle of a write to timer0_millis)\n\tcli();\n\tm = timer0_millis;\n\tSREG = oldSREG;\n\n\treturn m;\n}\n\nunsigned long micros() {\n\tunsigned long m;\n\tuint8_t oldSREG = SREG, t;\n\t\n\tcli();\n\tm = timer0_overflow_count;\n#if defined(TCNT0)\n\tt = TCNT0;\n#elif defined(TCNT0L)\n\tt = TCNT0L;\n#else\n\t#error TIMER 0 not defined\n#endif\n\n#ifdef TIFR0\n\tif ((TIFR0 & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#else\n\tif ((TIFR & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#endif\n\n\tSREG = oldSREG;\n\t\n\treturn ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());\n}\n\nvoid delay(unsigned long ms)\n{\n\tuint32_t start = micros();\n\n\twhile (ms > 0) {\n\t\tyield();\n\t\twhile ( ms > 0 && (micros() - start) >= 1000) {\n\t\t\tms--;\n\t\t\tstart += 1000;\n\t\t}\n\t}\n}\n\n/* Delay for the given number of microseconds.  Assumes a 1, 8, 12, 16, 20 or 24 MHz clock. */\nvoid delayMicroseconds(unsigned int us)\n{\n\t// call = 4 cycles + 2 to 4 cycles to init us(2 for constant delay, 4 for variable)\n\n\t// calling avrlib's delay_us() function with low values (e.g. 1 or\n\t// 2 microseconds) gives delays longer than desired.\n\t//delay_us(us);\n#if F_CPU >= 24000000L\n\t// for the 24 MHz clock for the aventurous ones, trying to overclock\n\n\t// zero delay fix\n\tif (!us) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/6 of a microsecond (4 cycles)\n\t// per iteration, so execute it six times for each microsecond of\n\t// delay requested.\n\tus *= 6; // x6 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 22 (24) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //=2 cycles\n\n#elif F_CPU >= 20000000L\n\t// for the 20 MHz clock on rare Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 18 (20) cycles, which is 1us\n\t__asm__ __volatile__ (\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\"); //just waiting 4 cycles\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/5 of a microsecond (4 cycles)\n\t// per iteration, so execute it five times for each microsecond of\n\t// delay requested.\n\tus = (us << 2) + us; // x5 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 26 (28) cycles above, remove 7, (7*4=28)\n\t// us is at least 10 so we can substract 7\n\tus -= 7; // 2 cycles\n\n#elif F_CPU >= 16000000L\n\t// for the 16 MHz clock on most Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/4 of a microsecond (4 cycles)\n\t// per iteration, so execute it four times for each microsecond of\n\t// delay requested.\n\tus <<= 2; // x4 us, = 4 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 19 (21) cycles above, remove 5, (5*4=20)\n\t// us is at least 8 so we can substract 5\n\tus -= 5; // = 2 cycles,\n\n#elif F_CPU >= 12000000L\n\t// for the 12 MHz clock if somebody is working with USB\n\n\t// for a 1 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1.5us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/3 of a microsecond (4 cycles)\n\t// per iteration, so execute it three times for each microsecond of\n\t// delay requested.\n\tus = (us << 1) + us; // x3 us, = 5 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 20 (22) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //2 cycles\n\n#elif F_CPU >= 8000000L\n\t// for the 8 MHz internal clock\n\n\t// for a 1 and 2 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 2us\n\tif (us <= 2) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/2 of a microsecond (4 cycles)\n\t// per iteration, so execute it twice for each microsecond of\n\t// delay requested.\n\tus <<= 1; //x2 us, = 2 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 17 (19) cycles above, remove 4, (4*4=16)\n\t// us is at least 6 so we can substract 4\n\tus -= 4; // = 2 cycles\n\n#else\n\t// for the 1 MHz internal clock (default settings for common Atmega microcontrollers)\n\n\t// the overhead of the function calls is 14 (16) cycles\n\tif (us <= 16) return; //= 3 cycles, (4 when true)\n\tif (us <= 25) return; //= 3 cycles, (4 when true), (must be at least 25 if we want to substract 22)\n\n\t// compensate for the time taken by the preceeding and next commands (about 22 cycles)\n\tus -= 22; // = 2 cycles\n\t// the following loop takes 4 microseconds (4 cycles)\n\t// per iteration, so execute it us/4 times\n\t// us is at least 4, divided by 4 gives us 1 (no zero delay bug)\n\tus >>= 2; // us div 4, = 4 cycles\n\t\n\n#endif\n\n\t// busy wait\n\t__asm__ __volatile__ (\n\t\t\"1: sbiw %0,1\" \"\\n\\t\" // 2 cycles\n\t\t\"brne 1b\" : \"=w\" (us) : \"0\" (us) // 2 cycles\n\t);\n\t// return = 4 cycles\n}\n\nvoid init()\n{\n\t// this needs to be called before setup() or some functions won't\n\t// work there\n\tsei();\n\t\n\t// on the ATmega168, timer 0 is also used for fast hardware pwm\n\t// (using phase-correct PWM would mean that timer 0 overflowed half as often\n\t// resulting in different millis() behavior on the ATmega8 and ATmega168)\n#if defined(TCCR0A) && defined(WGM01)\n\tsbi(TCCR0A, WGM01);\n\tsbi(TCCR0A, WGM00);\n#endif\n\n\t// set timer 0 prescale factor to 64\n#if defined(__AVR_ATmega128__)\n\t// CPU specific: different values for the ATmega128\n\tsbi(TCCR0, CS02);\n#elif defined(TCCR0) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard atmega8\n\tsbi(TCCR0, CS01);\n\tsbi(TCCR0, CS00);\n#elif defined(TCCR0B) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard 168/328/1280/2560\n\tsbi(TCCR0B, CS01);\n\tsbi(TCCR0B, CS00);\n#elif defined(TCCR0A) && defined(CS01) && defined(CS00)\n\t// this combination is for the __AVR_ATmega645__ series\n\tsbi(TCCR0A, CS01);\n\tsbi(TCCR0A, CS00);\n#else\n\t#error Timer 0 prescale factor 64 not set correctly\n#endif\n\n\t// enable timer 0 overflow interrupt\n#if defined(TIMSK) && defined(TOIE0)\n\tsbi(TIMSK, TOIE0);\n#elif defined(TIMSK0) && defined(TOIE0)\n\tsbi(TIMSK0, TOIE0);\n#else\n\t#error\tTimer 0 overflow interrupt not set correctly\n#endif\n\n\t// timers 1 and 2 are used for phase-correct hardware pwm\n\t// this is better for motors as it ensures an even waveform\n\t// note, however, that fast pwm mode can achieve a frequency of up\n\t// 8 MHz (with a 16 MHz clock) at 50% duty cycle\n\n#if defined(TCCR1B) && defined(CS11) && defined(CS10)\n\tTCCR1B = 0;\n\n\t// set timer 1 prescale factor to 64\n\tsbi(TCCR1B, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1B, CS10);\n#endif\n#elif defined(TCCR1) && defined(CS11) && defined(CS10)\n\tsbi(TCCR1, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1, CS10);\n#endif\n#endif\n\t// put timer 1 in 8-bit phase correct pwm mode\n#if defined(TCCR1A) && defined(WGM10)\n\tsbi(TCCR1A, WGM10);\n#endif\n\n\t// set timer 2 prescale factor to 64\n#if defined(TCCR2) && defined(CS22)\n\tsbi(TCCR2, CS22);\n#elif defined(TCCR2B) && defined(CS22)\n\tsbi(TCCR2B, CS22);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n\t// configure timer 2 for phase correct pwm (8-bit)\n#if defined(TCCR2) && defined(WGM20)\n\tsbi(TCCR2, WGM20);\n#elif defined(TCCR2A) && defined(WGM20)\n\tsbi(TCCR2A, WGM20);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n#if defined(TCCR3B) && defined(CS31) && defined(WGM30)\n\tsbi(TCCR3B, CS31);\t\t// set timer 3 prescale factor to 64\n\tsbi(TCCR3B, CS30);\n\tsbi(TCCR3A, WGM30);\t\t// put timer 3 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(TCCR4A) && defined(TCCR4B) && defined(TCCR4D) /* beginning of timer4 block for 32U4 and similar */\n\tsbi(TCCR4B, CS42);\t\t// set timer4 prescale factor to 64\n\tsbi(TCCR4B, CS41);\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4D, WGM40);\t\t// put timer 4 in phase- and frequency-correct PWM mode\t\n\tsbi(TCCR4A, PWM4A);\t\t// enable PWM mode for comparator OCR4A\n\tsbi(TCCR4C, PWM4D);\t\t// enable PWM mode for comparator OCR4D\n#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */\n#if defined(TCCR4B) && defined(CS41) && defined(WGM40)\n\tsbi(TCCR4B, CS41);\t\t// set timer 4 prescale factor to 64\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4A, WGM40);\t\t// put timer 4 in 8-bit phase correct pwm mode\n#endif\n#endif /* end timer4 block for ATMEGA1280/2560 and similar */\t\n\n#if defined(TCCR5B) && defined(CS51) && defined(WGM50)\n\tsbi(TCCR5B, CS51);\t\t// set timer 5 prescale factor to 64\n\tsbi(TCCR5B, CS50);\n\tsbi(TCCR5A, WGM50);\t\t// put timer 5 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(ADCSRA)\n\t// set a2d prescaler so we are inside the desired 50-200 KHz range.\n\t#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 4000000 // 4 MHz / 32 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 2000000 // 2 MHz / 16 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 1000000 // 1 MHz / 8 = 125 KHz\n\t\tcbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#else // 128 kHz / 2 = 64 KHz -> This is the closest you can get, the prescaler is 2\n\t\tcbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#endif\n\t// enable a2d conversions\n\tsbi(ADCSRA, ADEN);\n#endif\n\n\t// the bootloader connects pins 0 and 1 to the USART; disconnect them\n\t// here so they can be used as normal digital i/o; they will be\n\t// reconnected in Serial.begin()\n#if defined(UCSRB)\n\tUCSRB = 0;\n#elif defined(UCSR0B)\n\tUCSR0B = 0;\n#endif\n}\n"}}}Content-Length: 212

{"jsonrpc":"2.0","id":334,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":13}}}
>>>
Content-Length: 201

{"id":334,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 183

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c"}}}
>>>
Content-Length: 193

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":308}}}Content-Length: 207

{"jsonrpc":"2.0","id":335,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":11}}}
>>>
Content-Length: 251

{"id":335,"result":{"contents":{"kind":"markdown","value":"### variable `microServo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo microServo\n```"},"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":336,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":336,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":337,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":337,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":338,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":12}}}
>>>
Content-Length: 230

{"id":338,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":339,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":50,"character":10},"end":{"line":50,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":339,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":50,"character":10},"end":{"line":50,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 211

{"jsonrpc":"2.0","id":340,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":41,"character":9}}}
>>>
Content-Length: 223

{"id":340,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","range":{"start":{"line":105,"character":5},"end":{"line":105,"character":10}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 12891

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","languageId":"c","version":1,"text":"/*\n  wiring.c - Partial implementation of the Wiring API for the ATmega8.\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#include \"wiring_private.h\"\n\n// the prescaler is set so that timer0 ticks every 64 clock cycles, and the\n// the overflow handler is called every 256 ticks.\n#define MICROSECONDS_PER_TIMER0_OVERFLOW (clockCyclesToMicroseconds(64 * 256))\n\n// the whole number of milliseconds per timer0 overflow\n#define MILLIS_INC (MICROSECONDS_PER_TIMER0_OVERFLOW / 1000)\n\n// the fractional number of milliseconds per timer0 overflow. we shift right\n// by three to fit these numbers into a byte. (for the clock speeds we care\n// about - 8 and 16 MHz - this doesn't lose precision.)\n#define FRACT_INC ((MICROSECONDS_PER_TIMER0_OVERFLOW % 1000) >> 3)\n#define FRACT_MAX (1000 >> 3)\n\nvolatile unsigned long timer0_overflow_count = 0;\nvolatile unsigned long timer0_millis = 0;\nstatic unsigned char timer0_fract = 0;\n\n#if defined(TIM0_OVF_vect)\nISR(TIM0_OVF_vect)\n#else\nISR(TIMER0_OVF_vect)\n#endif\n{\n\t// copy these to local variables so they can be stored in registers\n\t// (volatile variables must be read from memory on every access)\n\tunsigned long m = timer0_millis;\n\tunsigned char f = timer0_fract;\n\n\tm += MILLIS_INC;\n\tf += FRACT_INC;\n\tif (f >= FRACT_MAX) {\n\t\tf -= FRACT_MAX;\n\t\tm += 1;\n\t}\n\n\ttimer0_fract = f;\n\ttimer0_millis = m;\n\ttimer0_overflow_count++;\n}\n\nunsigned long millis()\n{\n\tunsigned long m;\n\tuint8_t oldSREG = SREG;\n\n\t// disable interrupts while we read timer0_millis or we might get an\n\t// inconsistent value (e.g. in the middle of a write to timer0_millis)\n\tcli();\n\tm = timer0_millis;\n\tSREG = oldSREG;\n\n\treturn m;\n}\n\nunsigned long micros() {\n\tunsigned long m;\n\tuint8_t oldSREG = SREG, t;\n\t\n\tcli();\n\tm = timer0_overflow_count;\n#if defined(TCNT0)\n\tt = TCNT0;\n#elif defined(TCNT0L)\n\tt = TCNT0L;\n#else\n\t#error TIMER 0 not defined\n#endif\n\n#ifdef TIFR0\n\tif ((TIFR0 & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#else\n\tif ((TIFR & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#endif\n\n\tSREG = oldSREG;\n\t\n\treturn ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());\n}\n\nvoid delay(unsigned long ms)\n{\n\tuint32_t start = micros();\n\n\twhile (ms > 0) {\n\t\tyield();\n\t\twhile ( ms > 0 && (micros() - start) >= 1000) {\n\t\t\tms--;\n\t\t\tstart += 1000;\n\t\t}\n\t}\n}\n\n/* Delay for the given number of microseconds.  Assumes a 1, 8, 12, 16, 20 or 24 MHz clock. */\nvoid delayMicroseconds(unsigned int us)\n{\n\t// call = 4 cycles + 2 to 4 cycles to init us(2 for constant delay, 4 for variable)\n\n\t// calling avrlib's delay_us() function with low values (e.g. 1 or\n\t// 2 microseconds) gives delays longer than desired.\n\t//delay_us(us);\n#if F_CPU >= 24000000L\n\t// for the 24 MHz clock for the aventurous ones, trying to overclock\n\n\t// zero delay fix\n\tif (!us) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/6 of a microsecond (4 cycles)\n\t// per iteration, so execute it six times for each microsecond of\n\t// delay requested.\n\tus *= 6; // x6 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 22 (24) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //=2 cycles\n\n#elif F_CPU >= 20000000L\n\t// for the 20 MHz clock on rare Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 18 (20) cycles, which is 1us\n\t__asm__ __volatile__ (\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\"); //just waiting 4 cycles\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/5 of a microsecond (4 cycles)\n\t// per iteration, so execute it five times for each microsecond of\n\t// delay requested.\n\tus = (us << 2) + us; // x5 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 26 (28) cycles above, remove 7, (7*4=28)\n\t// us is at least 10 so we can substract 7\n\tus -= 7; // 2 cycles\n\n#elif F_CPU >= 16000000L\n\t// for the 16 MHz clock on most Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/4 of a microsecond (4 cycles)\n\t// per iteration, so execute it four times for each microsecond of\n\t// delay requested.\n\tus <<= 2; // x4 us, = 4 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 19 (21) cycles above, remove 5, (5*4=20)\n\t// us is at least 8 so we can substract 5\n\tus -= 5; // = 2 cycles,\n\n#elif F_CPU >= 12000000L\n\t// for the 12 MHz clock if somebody is working with USB\n\n\t// for a 1 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1.5us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/3 of a microsecond (4 cycles)\n\t// per iteration, so execute it three times for each microsecond of\n\t// delay requested.\n\tus = (us << 1) + us; // x3 us, = 5 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 20 (22) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //2 cycles\n\n#elif F_CPU >= 8000000L\n\t// for the 8 MHz internal clock\n\n\t// for a 1 and 2 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 2us\n\tif (us <= 2) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/2 of a microsecond (4 cycles)\n\t// per iteration, so execute it twice for each microsecond of\n\t// delay requested.\n\tus <<= 1; //x2 us, = 2 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 17 (19) cycles above, remove 4, (4*4=16)\n\t// us is at least 6 so we can substract 4\n\tus -= 4; // = 2 cycles\n\n#else\n\t// for the 1 MHz internal clock (default settings for common Atmega microcontrollers)\n\n\t// the overhead of the function calls is 14 (16) cycles\n\tif (us <= 16) return; //= 3 cycles, (4 when true)\n\tif (us <= 25) return; //= 3 cycles, (4 when true), (must be at least 25 if we want to substract 22)\n\n\t// compensate for the time taken by the preceeding and next commands (about 22 cycles)\n\tus -= 22; // = 2 cycles\n\t// the following loop takes 4 microseconds (4 cycles)\n\t// per iteration, so execute it us/4 times\n\t// us is at least 4, divided by 4 gives us 1 (no zero delay bug)\n\tus >>= 2; // us div 4, = 4 cycles\n\t\n\n#endif\n\n\t// busy wait\n\t__asm__ __volatile__ (\n\t\t\"1: sbiw %0,1\" \"\\n\\t\" // 2 cycles\n\t\t\"brne 1b\" : \"=w\" (us) : \"0\" (us) // 2 cycles\n\t);\n\t// return = 4 cycles\n}\n\nvoid init()\n{\n\t// this needs to be called before setup() or some functions won't\n\t// work there\n\tsei();\n\t\n\t// on the ATmega168, timer 0 is also used for fast hardware pwm\n\t// (using phase-correct PWM would mean that timer 0 overflowed half as often\n\t// resulting in different millis() behavior on the ATmega8 and ATmega168)\n#if defined(TCCR0A) && defined(WGM01)\n\tsbi(TCCR0A, WGM01);\n\tsbi(TCCR0A, WGM00);\n#endif\n\n\t// set timer 0 prescale factor to 64\n#if defined(__AVR_ATmega128__)\n\t// CPU specific: different values for the ATmega128\n\tsbi(TCCR0, CS02);\n#elif defined(TCCR0) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard atmega8\n\tsbi(TCCR0, CS01);\n\tsbi(TCCR0, CS00);\n#elif defined(TCCR0B) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard 168/328/1280/2560\n\tsbi(TCCR0B, CS01);\n\tsbi(TCCR0B, CS00);\n#elif defined(TCCR0A) && defined(CS01) && defined(CS00)\n\t// this combination is for the __AVR_ATmega645__ series\n\tsbi(TCCR0A, CS01);\n\tsbi(TCCR0A, CS00);\n#else\n\t#error Timer 0 prescale factor 64 not set correctly\n#endif\n\n\t// enable timer 0 overflow interrupt\n#if defined(TIMSK) && defined(TOIE0)\n\tsbi(TIMSK, TOIE0);\n#elif defined(TIMSK0) && defined(TOIE0)\n\tsbi(TIMSK0, TOIE0);\n#else\n\t#error\tTimer 0 overflow interrupt not set correctly\n#endif\n\n\t// timers 1 and 2 are used for phase-correct hardware pwm\n\t// this is better for motors as it ensures an even waveform\n\t// note, however, that fast pwm mode can achieve a frequency of up\n\t// 8 MHz (with a 16 MHz clock) at 50% duty cycle\n\n#if defined(TCCR1B) && defined(CS11) && defined(CS10)\n\tTCCR1B = 0;\n\n\t// set timer 1 prescale factor to 64\n\tsbi(TCCR1B, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1B, CS10);\n#endif\n#elif defined(TCCR1) && defined(CS11) && defined(CS10)\n\tsbi(TCCR1, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1, CS10);\n#endif\n#endif\n\t// put timer 1 in 8-bit phase correct pwm mode\n#if defined(TCCR1A) && defined(WGM10)\n\tsbi(TCCR1A, WGM10);\n#endif\n\n\t// set timer 2 prescale factor to 64\n#if defined(TCCR2) && defined(CS22)\n\tsbi(TCCR2, CS22);\n#elif defined(TCCR2B) && defined(CS22)\n\tsbi(TCCR2B, CS22);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n\t// configure timer 2 for phase correct pwm (8-bit)\n#if defined(TCCR2) && defined(WGM20)\n\tsbi(TCCR2, WGM20);\n#elif defined(TCCR2A) && defined(WGM20)\n\tsbi(TCCR2A, WGM20);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n#if defined(TCCR3B) && defined(CS31) && defined(WGM30)\n\tsbi(TCCR3B, CS31);\t\t// set timer 3 prescale factor to 64\n\tsbi(TCCR3B, CS30);\n\tsbi(TCCR3A, WGM30);\t\t// put timer 3 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(TCCR4A) && defined(TCCR4B) && defined(TCCR4D) /* beginning of timer4 block for 32U4 and similar */\n\tsbi(TCCR4B, CS42);\t\t// set timer4 prescale factor to 64\n\tsbi(TCCR4B, CS41);\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4D, WGM40);\t\t// put timer 4 in phase- and frequency-correct PWM mode\t\n\tsbi(TCCR4A, PWM4A);\t\t// enable PWM mode for comparator OCR4A\n\tsbi(TCCR4C, PWM4D);\t\t// enable PWM mode for comparator OCR4D\n#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */\n#if defined(TCCR4B) && defined(CS41) && defined(WGM40)\n\tsbi(TCCR4B, CS41);\t\t// set timer 4 prescale factor to 64\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4A, WGM40);\t\t// put timer 4 in 8-bit phase correct pwm mode\n#endif\n#endif /* end timer4 block for ATMEGA1280/2560 and similar */\t\n\n#if defined(TCCR5B) && defined(CS51) && defined(WGM50)\n\tsbi(TCCR5B, CS51);\t\t// set timer 5 prescale factor to 64\n\tsbi(TCCR5B, CS50);\n\tsbi(TCCR5A, WGM50);\t\t// put timer 5 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(ADCSRA)\n\t// set a2d prescaler so we are inside the desired 50-200 KHz range.\n\t#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 4000000 // 4 MHz / 32 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 2000000 // 2 MHz / 16 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 1000000 // 1 MHz / 8 = 125 KHz\n\t\tcbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#else // 128 kHz / 2 = 64 KHz -> This is the closest you can get, the prescaler is 2\n\t\tcbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#endif\n\t// enable a2d conversions\n\tsbi(ADCSRA, ADEN);\n#endif\n\n\t// the bootloader connects pins 0 and 1 to the USART; disconnect them\n\t// here so they can be used as normal digital i/o; they will be\n\t// reconnected in Serial.begin()\n#if defined(UCSRB)\n\tUCSRB = 0;\n#elif defined(UCSR0B)\n\tUCSR0B = 0;\n#endif\n}\n"}}}Content-Length: 183

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c"}}}
>>>
Content-Length: 193

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":341,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":9}}}
>>>
Content-Length: 201

{"id":341,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":10,"character":6},"end":{"line":10,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":342,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":9}}}
>>>
Content-Length: 223

{"id":342,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","range":{"start":{"line":105,"character":5},"end":{"line":105,"character":10}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 12891

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","languageId":"c","version":1,"text":"/*\n  wiring.c - Partial implementation of the Wiring API for the ATmega8.\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#include \"wiring_private.h\"\n\n// the prescaler is set so that timer0 ticks every 64 clock cycles, and the\n// the overflow handler is called every 256 ticks.\n#define MICROSECONDS_PER_TIMER0_OVERFLOW (clockCyclesToMicroseconds(64 * 256))\n\n// the whole number of milliseconds per timer0 overflow\n#define MILLIS_INC (MICROSECONDS_PER_TIMER0_OVERFLOW / 1000)\n\n// the fractional number of milliseconds per timer0 overflow. we shift right\n// by three to fit these numbers into a byte. (for the clock speeds we care\n// about - 8 and 16 MHz - this doesn't lose precision.)\n#define FRACT_INC ((MICROSECONDS_PER_TIMER0_OVERFLOW % 1000) >> 3)\n#define FRACT_MAX (1000 >> 3)\n\nvolatile unsigned long timer0_overflow_count = 0;\nvolatile unsigned long timer0_millis = 0;\nstatic unsigned char timer0_fract = 0;\n\n#if defined(TIM0_OVF_vect)\nISR(TIM0_OVF_vect)\n#else\nISR(TIMER0_OVF_vect)\n#endif\n{\n\t// copy these to local variables so they can be stored in registers\n\t// (volatile variables must be read from memory on every access)\n\tunsigned long m = timer0_millis;\n\tunsigned char f = timer0_fract;\n\n\tm += MILLIS_INC;\n\tf += FRACT_INC;\n\tif (f >= FRACT_MAX) {\n\t\tf -= FRACT_MAX;\n\t\tm += 1;\n\t}\n\n\ttimer0_fract = f;\n\ttimer0_millis = m;\n\ttimer0_overflow_count++;\n}\n\nunsigned long millis()\n{\n\tunsigned long m;\n\tuint8_t oldSREG = SREG;\n\n\t// disable interrupts while we read timer0_millis or we might get an\n\t// inconsistent value (e.g. in the middle of a write to timer0_millis)\n\tcli();\n\tm = timer0_millis;\n\tSREG = oldSREG;\n\n\treturn m;\n}\n\nunsigned long micros() {\n\tunsigned long m;\n\tuint8_t oldSREG = SREG, t;\n\t\n\tcli();\n\tm = timer0_overflow_count;\n#if defined(TCNT0)\n\tt = TCNT0;\n#elif defined(TCNT0L)\n\tt = TCNT0L;\n#else\n\t#error TIMER 0 not defined\n#endif\n\n#ifdef TIFR0\n\tif ((TIFR0 & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#else\n\tif ((TIFR & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#endif\n\n\tSREG = oldSREG;\n\t\n\treturn ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());\n}\n\nvoid delay(unsigned long ms)\n{\n\tuint32_t start = micros();\n\n\twhile (ms > 0) {\n\t\tyield();\n\t\twhile ( ms > 0 && (micros() - start) >= 1000) {\n\t\t\tms--;\n\t\t\tstart += 1000;\n\t\t}\n\t}\n}\n\n/* Delay for the given number of microseconds.  Assumes a 1, 8, 12, 16, 20 or 24 MHz clock. */\nvoid delayMicroseconds(unsigned int us)\n{\n\t// call = 4 cycles + 2 to 4 cycles to init us(2 for constant delay, 4 for variable)\n\n\t// calling avrlib's delay_us() function with low values (e.g. 1 or\n\t// 2 microseconds) gives delays longer than desired.\n\t//delay_us(us);\n#if F_CPU >= 24000000L\n\t// for the 24 MHz clock for the aventurous ones, trying to overclock\n\n\t// zero delay fix\n\tif (!us) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/6 of a microsecond (4 cycles)\n\t// per iteration, so execute it six times for each microsecond of\n\t// delay requested.\n\tus *= 6; // x6 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 22 (24) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //=2 cycles\n\n#elif F_CPU >= 20000000L\n\t// for the 20 MHz clock on rare Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 18 (20) cycles, which is 1us\n\t__asm__ __volatile__ (\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\"); //just waiting 4 cycles\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/5 of a microsecond (4 cycles)\n\t// per iteration, so execute it five times for each microsecond of\n\t// delay requested.\n\tus = (us << 2) + us; // x5 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 26 (28) cycles above, remove 7, (7*4=28)\n\t// us is at least 10 so we can substract 7\n\tus -= 7; // 2 cycles\n\n#elif F_CPU >= 16000000L\n\t// for the 16 MHz clock on most Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/4 of a microsecond (4 cycles)\n\t// per iteration, so execute it four times for each microsecond of\n\t// delay requested.\n\tus <<= 2; // x4 us, = 4 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 19 (21) cycles above, remove 5, (5*4=20)\n\t// us is at least 8 so we can substract 5\n\tus -= 5; // = 2 cycles,\n\n#elif F_CPU >= 12000000L\n\t// for the 12 MHz clock if somebody is working with USB\n\n\t// for a 1 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1.5us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/3 of a microsecond (4 cycles)\n\t// per iteration, so execute it three times for each microsecond of\n\t// delay requested.\n\tus = (us << 1) + us; // x3 us, = 5 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 20 (22) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //2 cycles\n\n#elif F_CPU >= 8000000L\n\t// for the 8 MHz internal clock\n\n\t// for a 1 and 2 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 2us\n\tif (us <= 2) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/2 of a microsecond (4 cycles)\n\t// per iteration, so execute it twice for each microsecond of\n\t// delay requested.\n\tus <<= 1; //x2 us, = 2 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 17 (19) cycles above, remove 4, (4*4=16)\n\t// us is at least 6 so we can substract 4\n\tus -= 4; // = 2 cycles\n\n#else\n\t// for the 1 MHz internal clock (default settings for common Atmega microcontrollers)\n\n\t// the overhead of the function calls is 14 (16) cycles\n\tif (us <= 16) return; //= 3 cycles, (4 when true)\n\tif (us <= 25) return; //= 3 cycles, (4 when true), (must be at least 25 if we want to substract 22)\n\n\t// compensate for the time taken by the preceeding and next commands (about 22 cycles)\n\tus -= 22; // = 2 cycles\n\t// the following loop takes 4 microseconds (4 cycles)\n\t// per iteration, so execute it us/4 times\n\t// us is at least 4, divided by 4 gives us 1 (no zero delay bug)\n\tus >>= 2; // us div 4, = 4 cycles\n\t\n\n#endif\n\n\t// busy wait\n\t__asm__ __volatile__ (\n\t\t\"1: sbiw %0,1\" \"\\n\\t\" // 2 cycles\n\t\t\"brne 1b\" : \"=w\" (us) : \"0\" (us) // 2 cycles\n\t);\n\t// return = 4 cycles\n}\n\nvoid init()\n{\n\t// this needs to be called before setup() or some functions won't\n\t// work there\n\tsei();\n\t\n\t// on the ATmega168, timer 0 is also used for fast hardware pwm\n\t// (using phase-correct PWM would mean that timer 0 overflowed half as often\n\t// resulting in different millis() behavior on the ATmega8 and ATmega168)\n#if defined(TCCR0A) && defined(WGM01)\n\tsbi(TCCR0A, WGM01);\n\tsbi(TCCR0A, WGM00);\n#endif\n\n\t// set timer 0 prescale factor to 64\n#if defined(__AVR_ATmega128__)\n\t// CPU specific: different values for the ATmega128\n\tsbi(TCCR0, CS02);\n#elif defined(TCCR0) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard atmega8\n\tsbi(TCCR0, CS01);\n\tsbi(TCCR0, CS00);\n#elif defined(TCCR0B) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard 168/328/1280/2560\n\tsbi(TCCR0B, CS01);\n\tsbi(TCCR0B, CS00);\n#elif defined(TCCR0A) && defined(CS01) && defined(CS00)\n\t// this combination is for the __AVR_ATmega645__ series\n\tsbi(TCCR0A, CS01);\n\tsbi(TCCR0A, CS00);\n#else\n\t#error Timer 0 prescale factor 64 not set correctly\n#endif\n\n\t// enable timer 0 overflow interrupt\n#if defined(TIMSK) && defined(TOIE0)\n\tsbi(TIMSK, TOIE0);\n#elif defined(TIMSK0) && defined(TOIE0)\n\tsbi(TIMSK0, TOIE0);\n#else\n\t#error\tTimer 0 overflow interrupt not set correctly\n#endif\n\n\t// timers 1 and 2 are used for phase-correct hardware pwm\n\t// this is better for motors as it ensures an even waveform\n\t// note, however, that fast pwm mode can achieve a frequency of up\n\t// 8 MHz (with a 16 MHz clock) at 50% duty cycle\n\n#if defined(TCCR1B) && defined(CS11) && defined(CS10)\n\tTCCR1B = 0;\n\n\t// set timer 1 prescale factor to 64\n\tsbi(TCCR1B, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1B, CS10);\n#endif\n#elif defined(TCCR1) && defined(CS11) && defined(CS10)\n\tsbi(TCCR1, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1, CS10);\n#endif\n#endif\n\t// put timer 1 in 8-bit phase correct pwm mode\n#if defined(TCCR1A) && defined(WGM10)\n\tsbi(TCCR1A, WGM10);\n#endif\n\n\t// set timer 2 prescale factor to 64\n#if defined(TCCR2) && defined(CS22)\n\tsbi(TCCR2, CS22);\n#elif defined(TCCR2B) && defined(CS22)\n\tsbi(TCCR2B, CS22);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n\t// configure timer 2 for phase correct pwm (8-bit)\n#if defined(TCCR2) && defined(WGM20)\n\tsbi(TCCR2, WGM20);\n#elif defined(TCCR2A) && defined(WGM20)\n\tsbi(TCCR2A, WGM20);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n#if defined(TCCR3B) && defined(CS31) && defined(WGM30)\n\tsbi(TCCR3B, CS31);\t\t// set timer 3 prescale factor to 64\n\tsbi(TCCR3B, CS30);\n\tsbi(TCCR3A, WGM30);\t\t// put timer 3 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(TCCR4A) && defined(TCCR4B) && defined(TCCR4D) /* beginning of timer4 block for 32U4 and similar */\n\tsbi(TCCR4B, CS42);\t\t// set timer4 prescale factor to 64\n\tsbi(TCCR4B, CS41);\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4D, WGM40);\t\t// put timer 4 in phase- and frequency-correct PWM mode\t\n\tsbi(TCCR4A, PWM4A);\t\t// enable PWM mode for comparator OCR4A\n\tsbi(TCCR4C, PWM4D);\t\t// enable PWM mode for comparator OCR4D\n#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */\n#if defined(TCCR4B) && defined(CS41) && defined(WGM40)\n\tsbi(TCCR4B, CS41);\t\t// set timer 4 prescale factor to 64\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4A, WGM40);\t\t// put timer 4 in 8-bit phase correct pwm mode\n#endif\n#endif /* end timer4 block for ATMEGA1280/2560 and similar */\t\n\n#if defined(TCCR5B) && defined(CS51) && defined(WGM50)\n\tsbi(TCCR5B, CS51);\t\t// set timer 5 prescale factor to 64\n\tsbi(TCCR5B, CS50);\n\tsbi(TCCR5A, WGM50);\t\t// put timer 5 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(ADCSRA)\n\t// set a2d prescaler so we are inside the desired 50-200 KHz range.\n\t#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 4000000 // 4 MHz / 32 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 2000000 // 2 MHz / 16 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 1000000 // 1 MHz / 8 = 125 KHz\n\t\tcbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#else // 128 kHz / 2 = 64 KHz -> This is the closest you can get, the prescaler is 2\n\t\tcbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#endif\n\t// enable a2d conversions\n\tsbi(ADCSRA, ADEN);\n#endif\n\n\t// the bootloader connects pins 0 and 1 to the USART; disconnect them\n\t// here so they can be used as normal digital i/o; they will be\n\t// reconnected in Serial.begin()\n#if defined(UCSRB)\n\tUCSRB = 0;\n#elif defined(UCSR0B)\n\tUCSR0B = 0;\n#endif\n}\n"}}}Content-Length: 183

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c"}}}
>>>
Content-Length: 193

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":343,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":10}}}
>>>
Content-Length: 223

{"id":343,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","range":{"start":{"line":105,"character":5},"end":{"line":105,"character":10}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 12891

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","languageId":"c","version":1,"text":"/*\n  wiring.c - Partial implementation of the Wiring API for the ATmega8.\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#include \"wiring_private.h\"\n\n// the prescaler is set so that timer0 ticks every 64 clock cycles, and the\n// the overflow handler is called every 256 ticks.\n#define MICROSECONDS_PER_TIMER0_OVERFLOW (clockCyclesToMicroseconds(64 * 256))\n\n// the whole number of milliseconds per timer0 overflow\n#define MILLIS_INC (MICROSECONDS_PER_TIMER0_OVERFLOW / 1000)\n\n// the fractional number of milliseconds per timer0 overflow. we shift right\n// by three to fit these numbers into a byte. (for the clock speeds we care\n// about - 8 and 16 MHz - this doesn't lose precision.)\n#define FRACT_INC ((MICROSECONDS_PER_TIMER0_OVERFLOW % 1000) >> 3)\n#define FRACT_MAX (1000 >> 3)\n\nvolatile unsigned long timer0_overflow_count = 0;\nvolatile unsigned long timer0_millis = 0;\nstatic unsigned char timer0_fract = 0;\n\n#if defined(TIM0_OVF_vect)\nISR(TIM0_OVF_vect)\n#else\nISR(TIMER0_OVF_vect)\n#endif\n{\n\t// copy these to local variables so they can be stored in registers\n\t// (volatile variables must be read from memory on every access)\n\tunsigned long m = timer0_millis;\n\tunsigned char f = timer0_fract;\n\n\tm += MILLIS_INC;\n\tf += FRACT_INC;\n\tif (f >= FRACT_MAX) {\n\t\tf -= FRACT_MAX;\n\t\tm += 1;\n\t}\n\n\ttimer0_fract = f;\n\ttimer0_millis = m;\n\ttimer0_overflow_count++;\n}\n\nunsigned long millis()\n{\n\tunsigned long m;\n\tuint8_t oldSREG = SREG;\n\n\t// disable interrupts while we read timer0_millis or we might get an\n\t// inconsistent value (e.g. in the middle of a write to timer0_millis)\n\tcli();\n\tm = timer0_millis;\n\tSREG = oldSREG;\n\n\treturn m;\n}\n\nunsigned long micros() {\n\tunsigned long m;\n\tuint8_t oldSREG = SREG, t;\n\t\n\tcli();\n\tm = timer0_overflow_count;\n#if defined(TCNT0)\n\tt = TCNT0;\n#elif defined(TCNT0L)\n\tt = TCNT0L;\n#else\n\t#error TIMER 0 not defined\n#endif\n\n#ifdef TIFR0\n\tif ((TIFR0 & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#else\n\tif ((TIFR & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#endif\n\n\tSREG = oldSREG;\n\t\n\treturn ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());\n}\n\nvoid delay(unsigned long ms)\n{\n\tuint32_t start = micros();\n\n\twhile (ms > 0) {\n\t\tyield();\n\t\twhile ( ms > 0 && (micros() - start) >= 1000) {\n\t\t\tms--;\n\t\t\tstart += 1000;\n\t\t}\n\t}\n}\n\n/* Delay for the given number of microseconds.  Assumes a 1, 8, 12, 16, 20 or 24 MHz clock. */\nvoid delayMicroseconds(unsigned int us)\n{\n\t// call = 4 cycles + 2 to 4 cycles to init us(2 for constant delay, 4 for variable)\n\n\t// calling avrlib's delay_us() function with low values (e.g. 1 or\n\t// 2 microseconds) gives delays longer than desired.\n\t//delay_us(us);\n#if F_CPU >= 24000000L\n\t// for the 24 MHz clock for the aventurous ones, trying to overclock\n\n\t// zero delay fix\n\tif (!us) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/6 of a microsecond (4 cycles)\n\t// per iteration, so execute it six times for each microsecond of\n\t// delay requested.\n\tus *= 6; // x6 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 22 (24) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //=2 cycles\n\n#elif F_CPU >= 20000000L\n\t// for the 20 MHz clock on rare Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 18 (20) cycles, which is 1us\n\t__asm__ __volatile__ (\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\"); //just waiting 4 cycles\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/5 of a microsecond (4 cycles)\n\t// per iteration, so execute it five times for each microsecond of\n\t// delay requested.\n\tus = (us << 2) + us; // x5 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 26 (28) cycles above, remove 7, (7*4=28)\n\t// us is at least 10 so we can substract 7\n\tus -= 7; // 2 cycles\n\n#elif F_CPU >= 16000000L\n\t// for the 16 MHz clock on most Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/4 of a microsecond (4 cycles)\n\t// per iteration, so execute it four times for each microsecond of\n\t// delay requested.\n\tus <<= 2; // x4 us, = 4 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 19 (21) cycles above, remove 5, (5*4=20)\n\t// us is at least 8 so we can substract 5\n\tus -= 5; // = 2 cycles,\n\n#elif F_CPU >= 12000000L\n\t// for the 12 MHz clock if somebody is working with USB\n\n\t// for a 1 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1.5us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/3 of a microsecond (4 cycles)\n\t// per iteration, so execute it three times for each microsecond of\n\t// delay requested.\n\tus = (us << 1) + us; // x3 us, = 5 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 20 (22) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //2 cycles\n\n#elif F_CPU >= 8000000L\n\t// for the 8 MHz internal clock\n\n\t// for a 1 and 2 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 2us\n\tif (us <= 2) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/2 of a microsecond (4 cycles)\n\t// per iteration, so execute it twice for each microsecond of\n\t// delay requested.\n\tus <<= 1; //x2 us, = 2 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 17 (19) cycles above, remove 4, (4*4=16)\n\t// us is at least 6 so we can substract 4\n\tus -= 4; // = 2 cycles\n\n#else\n\t// for the 1 MHz internal clock (default settings for common Atmega microcontrollers)\n\n\t// the overhead of the function calls is 14 (16) cycles\n\tif (us <= 16) return; //= 3 cycles, (4 when true)\n\tif (us <= 25) return; //= 3 cycles, (4 when true), (must be at least 25 if we want to substract 22)\n\n\t// compensate for the time taken by the preceeding and next commands (about 22 cycles)\n\tus -= 22; // = 2 cycles\n\t// the following loop takes 4 microseconds (4 cycles)\n\t// per iteration, so execute it us/4 times\n\t// us is at least 4, divided by 4 gives us 1 (no zero delay bug)\n\tus >>= 2; // us div 4, = 4 cycles\n\t\n\n#endif\n\n\t// busy wait\n\t__asm__ __volatile__ (\n\t\t\"1: sbiw %0,1\" \"\\n\\t\" // 2 cycles\n\t\t\"brne 1b\" : \"=w\" (us) : \"0\" (us) // 2 cycles\n\t);\n\t// return = 4 cycles\n}\n\nvoid init()\n{\n\t// this needs to be called before setup() or some functions won't\n\t// work there\n\tsei();\n\t\n\t// on the ATmega168, timer 0 is also used for fast hardware pwm\n\t// (using phase-correct PWM would mean that timer 0 overflowed half as often\n\t// resulting in different millis() behavior on the ATmega8 and ATmega168)\n#if defined(TCCR0A) && defined(WGM01)\n\tsbi(TCCR0A, WGM01);\n\tsbi(TCCR0A, WGM00);\n#endif\n\n\t// set timer 0 prescale factor to 64\n#if defined(__AVR_ATmega128__)\n\t// CPU specific: different values for the ATmega128\n\tsbi(TCCR0, CS02);\n#elif defined(TCCR0) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard atmega8\n\tsbi(TCCR0, CS01);\n\tsbi(TCCR0, CS00);\n#elif defined(TCCR0B) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard 168/328/1280/2560\n\tsbi(TCCR0B, CS01);\n\tsbi(TCCR0B, CS00);\n#elif defined(TCCR0A) && defined(CS01) && defined(CS00)\n\t// this combination is for the __AVR_ATmega645__ series\n\tsbi(TCCR0A, CS01);\n\tsbi(TCCR0A, CS00);\n#else\n\t#error Timer 0 prescale factor 64 not set correctly\n#endif\n\n\t// enable timer 0 overflow interrupt\n#if defined(TIMSK) && defined(TOIE0)\n\tsbi(TIMSK, TOIE0);\n#elif defined(TIMSK0) && defined(TOIE0)\n\tsbi(TIMSK0, TOIE0);\n#else\n\t#error\tTimer 0 overflow interrupt not set correctly\n#endif\n\n\t// timers 1 and 2 are used for phase-correct hardware pwm\n\t// this is better for motors as it ensures an even waveform\n\t// note, however, that fast pwm mode can achieve a frequency of up\n\t// 8 MHz (with a 16 MHz clock) at 50% duty cycle\n\n#if defined(TCCR1B) && defined(CS11) && defined(CS10)\n\tTCCR1B = 0;\n\n\t// set timer 1 prescale factor to 64\n\tsbi(TCCR1B, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1B, CS10);\n#endif\n#elif defined(TCCR1) && defined(CS11) && defined(CS10)\n\tsbi(TCCR1, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1, CS10);\n#endif\n#endif\n\t// put timer 1 in 8-bit phase correct pwm mode\n#if defined(TCCR1A) && defined(WGM10)\n\tsbi(TCCR1A, WGM10);\n#endif\n\n\t// set timer 2 prescale factor to 64\n#if defined(TCCR2) && defined(CS22)\n\tsbi(TCCR2, CS22);\n#elif defined(TCCR2B) && defined(CS22)\n\tsbi(TCCR2B, CS22);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n\t// configure timer 2 for phase correct pwm (8-bit)\n#if defined(TCCR2) && defined(WGM20)\n\tsbi(TCCR2, WGM20);\n#elif defined(TCCR2A) && defined(WGM20)\n\tsbi(TCCR2A, WGM20);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n#if defined(TCCR3B) && defined(CS31) && defined(WGM30)\n\tsbi(TCCR3B, CS31);\t\t// set timer 3 prescale factor to 64\n\tsbi(TCCR3B, CS30);\n\tsbi(TCCR3A, WGM30);\t\t// put timer 3 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(TCCR4A) && defined(TCCR4B) && defined(TCCR4D) /* beginning of timer4 block for 32U4 and similar */\n\tsbi(TCCR4B, CS42);\t\t// set timer4 prescale factor to 64\n\tsbi(TCCR4B, CS41);\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4D, WGM40);\t\t// put timer 4 in phase- and frequency-correct PWM mode\t\n\tsbi(TCCR4A, PWM4A);\t\t// enable PWM mode for comparator OCR4A\n\tsbi(TCCR4C, PWM4D);\t\t// enable PWM mode for comparator OCR4D\n#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */\n#if defined(TCCR4B) && defined(CS41) && defined(WGM40)\n\tsbi(TCCR4B, CS41);\t\t// set timer 4 prescale factor to 64\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4A, WGM40);\t\t// put timer 4 in 8-bit phase correct pwm mode\n#endif\n#endif /* end timer4 block for ATMEGA1280/2560 and similar */\t\n\n#if defined(TCCR5B) && defined(CS51) && defined(WGM50)\n\tsbi(TCCR5B, CS51);\t\t// set timer 5 prescale factor to 64\n\tsbi(TCCR5B, CS50);\n\tsbi(TCCR5A, WGM50);\t\t// put timer 5 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(ADCSRA)\n\t// set a2d prescaler so we are inside the desired 50-200 KHz range.\n\t#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 4000000 // 4 MHz / 32 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 2000000 // 2 MHz / 16 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 1000000 // 1 MHz / 8 = 125 KHz\n\t\tcbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#else // 128 kHz / 2 = 64 KHz -> This is the closest you can get, the prescaler is 2\n\t\tcbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#endif\n\t// enable a2d conversions\n\tsbi(ADCSRA, ADEN);\n#endif\n\n\t// the bootloader connects pins 0 and 1 to the USART; disconnect them\n\t// here so they can be used as normal digital i/o; they will be\n\t// reconnected in Serial.begin()\n#if defined(UCSRB)\n\tUCSRB = 0;\n#elif defined(UCSR0B)\n\tUCSR0B = 0;\n#endif\n}\n"}}}Content-Length: 183

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c"}}}
>>>
Content-Length: 193

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":344,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":9}}}
>>>
Content-Length: 285

{"id":344,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":48,"character":4},"end":{"line":48,"character":9}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":345,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":10}}}
>>>
Content-Length: 472

{"id":345,"result":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":9}},"kind":1},{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":9}},"kind":1},{"range":{"start":{"line":48,"character":4},"end":{"line":48,"character":9}},"kind":1},{"range":{"start":{"line":50,"character":4},"end":{"line":50,"character":9}},"kind":1},{"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":7}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":309},"contentChanges":[{"range":{"start":{"line":39,"character":10},"end":{"line":39,"character":13}},"rangeLength":3,"text":"150"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":346,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":39,"character":10}}}
>>>
Content-Length: 223

{"id":346,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","range":{"start":{"line":105,"character":5},"end":{"line":105,"character":10}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 12891

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","languageId":"c","version":1,"text":"/*\n  wiring.c - Partial implementation of the Wiring API for the ATmega8.\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#include \"wiring_private.h\"\n\n// the prescaler is set so that timer0 ticks every 64 clock cycles, and the\n// the overflow handler is called every 256 ticks.\n#define MICROSECONDS_PER_TIMER0_OVERFLOW (clockCyclesToMicroseconds(64 * 256))\n\n// the whole number of milliseconds per timer0 overflow\n#define MILLIS_INC (MICROSECONDS_PER_TIMER0_OVERFLOW / 1000)\n\n// the fractional number of milliseconds per timer0 overflow. we shift right\n// by three to fit these numbers into a byte. (for the clock speeds we care\n// about - 8 and 16 MHz - this doesn't lose precision.)\n#define FRACT_INC ((MICROSECONDS_PER_TIMER0_OVERFLOW % 1000) >> 3)\n#define FRACT_MAX (1000 >> 3)\n\nvolatile unsigned long timer0_overflow_count = 0;\nvolatile unsigned long timer0_millis = 0;\nstatic unsigned char timer0_fract = 0;\n\n#if defined(TIM0_OVF_vect)\nISR(TIM0_OVF_vect)\n#else\nISR(TIMER0_OVF_vect)\n#endif\n{\n\t// copy these to local variables so they can be stored in registers\n\t// (volatile variables must be read from memory on every access)\n\tunsigned long m = timer0_millis;\n\tunsigned char f = timer0_fract;\n\n\tm += MILLIS_INC;\n\tf += FRACT_INC;\n\tif (f >= FRACT_MAX) {\n\t\tf -= FRACT_MAX;\n\t\tm += 1;\n\t}\n\n\ttimer0_fract = f;\n\ttimer0_millis = m;\n\ttimer0_overflow_count++;\n}\n\nunsigned long millis()\n{\n\tunsigned long m;\n\tuint8_t oldSREG = SREG;\n\n\t// disable interrupts while we read timer0_millis or we might get an\n\t// inconsistent value (e.g. in the middle of a write to timer0_millis)\n\tcli();\n\tm = timer0_millis;\n\tSREG = oldSREG;\n\n\treturn m;\n}\n\nunsigned long micros() {\n\tunsigned long m;\n\tuint8_t oldSREG = SREG, t;\n\t\n\tcli();\n\tm = timer0_overflow_count;\n#if defined(TCNT0)\n\tt = TCNT0;\n#elif defined(TCNT0L)\n\tt = TCNT0L;\n#else\n\t#error TIMER 0 not defined\n#endif\n\n#ifdef TIFR0\n\tif ((TIFR0 & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#else\n\tif ((TIFR & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#endif\n\n\tSREG = oldSREG;\n\t\n\treturn ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());\n}\n\nvoid delay(unsigned long ms)\n{\n\tuint32_t start = micros();\n\n\twhile (ms > 0) {\n\t\tyield();\n\t\twhile ( ms > 0 && (micros() - start) >= 1000) {\n\t\t\tms--;\n\t\t\tstart += 1000;\n\t\t}\n\t}\n}\n\n/* Delay for the given number of microseconds.  Assumes a 1, 8, 12, 16, 20 or 24 MHz clock. */\nvoid delayMicroseconds(unsigned int us)\n{\n\t// call = 4 cycles + 2 to 4 cycles to init us(2 for constant delay, 4 for variable)\n\n\t// calling avrlib's delay_us() function with low values (e.g. 1 or\n\t// 2 microseconds) gives delays longer than desired.\n\t//delay_us(us);\n#if F_CPU >= 24000000L\n\t// for the 24 MHz clock for the aventurous ones, trying to overclock\n\n\t// zero delay fix\n\tif (!us) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/6 of a microsecond (4 cycles)\n\t// per iteration, so execute it six times for each microsecond of\n\t// delay requested.\n\tus *= 6; // x6 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 22 (24) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //=2 cycles\n\n#elif F_CPU >= 20000000L\n\t// for the 20 MHz clock on rare Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 18 (20) cycles, which is 1us\n\t__asm__ __volatile__ (\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\"); //just waiting 4 cycles\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/5 of a microsecond (4 cycles)\n\t// per iteration, so execute it five times for each microsecond of\n\t// delay requested.\n\tus = (us << 2) + us; // x5 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 26 (28) cycles above, remove 7, (7*4=28)\n\t// us is at least 10 so we can substract 7\n\tus -= 7; // 2 cycles\n\n#elif F_CPU >= 16000000L\n\t// for the 16 MHz clock on most Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/4 of a microsecond (4 cycles)\n\t// per iteration, so execute it four times for each microsecond of\n\t// delay requested.\n\tus <<= 2; // x4 us, = 4 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 19 (21) cycles above, remove 5, (5*4=20)\n\t// us is at least 8 so we can substract 5\n\tus -= 5; // = 2 cycles,\n\n#elif F_CPU >= 12000000L\n\t// for the 12 MHz clock if somebody is working with USB\n\n\t// for a 1 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1.5us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/3 of a microsecond (4 cycles)\n\t// per iteration, so execute it three times for each microsecond of\n\t// delay requested.\n\tus = (us << 1) + us; // x3 us, = 5 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 20 (22) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //2 cycles\n\n#elif F_CPU >= 8000000L\n\t// for the 8 MHz internal clock\n\n\t// for a 1 and 2 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 2us\n\tif (us <= 2) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/2 of a microsecond (4 cycles)\n\t// per iteration, so execute it twice for each microsecond of\n\t// delay requested.\n\tus <<= 1; //x2 us, = 2 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 17 (19) cycles above, remove 4, (4*4=16)\n\t// us is at least 6 so we can substract 4\n\tus -= 4; // = 2 cycles\n\n#else\n\t// for the 1 MHz internal clock (default settings for common Atmega microcontrollers)\n\n\t// the overhead of the function calls is 14 (16) cycles\n\tif (us <= 16) return; //= 3 cycles, (4 when true)\n\tif (us <= 25) return; //= 3 cycles, (4 when true), (must be at least 25 if we want to substract 22)\n\n\t// compensate for the time taken by the preceeding and next commands (about 22 cycles)\n\tus -= 22; // = 2 cycles\n\t// the following loop takes 4 microseconds (4 cycles)\n\t// per iteration, so execute it us/4 times\n\t// us is at least 4, divided by 4 gives us 1 (no zero delay bug)\n\tus >>= 2; // us div 4, = 4 cycles\n\t\n\n#endif\n\n\t// busy wait\n\t__asm__ __volatile__ (\n\t\t\"1: sbiw %0,1\" \"\\n\\t\" // 2 cycles\n\t\t\"brne 1b\" : \"=w\" (us) : \"0\" (us) // 2 cycles\n\t);\n\t// return = 4 cycles\n}\n\nvoid init()\n{\n\t// this needs to be called before setup() or some functions won't\n\t// work there\n\tsei();\n\t\n\t// on the ATmega168, timer 0 is also used for fast hardware pwm\n\t// (using phase-correct PWM would mean that timer 0 overflowed half as often\n\t// resulting in different millis() behavior on the ATmega8 and ATmega168)\n#if defined(TCCR0A) && defined(WGM01)\n\tsbi(TCCR0A, WGM01);\n\tsbi(TCCR0A, WGM00);\n#endif\n\n\t// set timer 0 prescale factor to 64\n#if defined(__AVR_ATmega128__)\n\t// CPU specific: different values for the ATmega128\n\tsbi(TCCR0, CS02);\n#elif defined(TCCR0) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard atmega8\n\tsbi(TCCR0, CS01);\n\tsbi(TCCR0, CS00);\n#elif defined(TCCR0B) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard 168/328/1280/2560\n\tsbi(TCCR0B, CS01);\n\tsbi(TCCR0B, CS00);\n#elif defined(TCCR0A) && defined(CS01) && defined(CS00)\n\t// this combination is for the __AVR_ATmega645__ series\n\tsbi(TCCR0A, CS01);\n\tsbi(TCCR0A, CS00);\n#else\n\t#error Timer 0 prescale factor 64 not set correctly\n#endif\n\n\t// enable timer 0 overflow interrupt\n#if defined(TIMSK) && defined(TOIE0)\n\tsbi(TIMSK, TOIE0);\n#elif defined(TIMSK0) && defined(TOIE0)\n\tsbi(TIMSK0, TOIE0);\n#else\n\t#error\tTimer 0 overflow interrupt not set correctly\n#endif\n\n\t// timers 1 and 2 are used for phase-correct hardware pwm\n\t// this is better for motors as it ensures an even waveform\n\t// note, however, that fast pwm mode can achieve a frequency of up\n\t// 8 MHz (with a 16 MHz clock) at 50% duty cycle\n\n#if defined(TCCR1B) && defined(CS11) && defined(CS10)\n\tTCCR1B = 0;\n\n\t// set timer 1 prescale factor to 64\n\tsbi(TCCR1B, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1B, CS10);\n#endif\n#elif defined(TCCR1) && defined(CS11) && defined(CS10)\n\tsbi(TCCR1, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1, CS10);\n#endif\n#endif\n\t// put timer 1 in 8-bit phase correct pwm mode\n#if defined(TCCR1A) && defined(WGM10)\n\tsbi(TCCR1A, WGM10);\n#endif\n\n\t// set timer 2 prescale factor to 64\n#if defined(TCCR2) && defined(CS22)\n\tsbi(TCCR2, CS22);\n#elif defined(TCCR2B) && defined(CS22)\n\tsbi(TCCR2B, CS22);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n\t// configure timer 2 for phase correct pwm (8-bit)\n#if defined(TCCR2) && defined(WGM20)\n\tsbi(TCCR2, WGM20);\n#elif defined(TCCR2A) && defined(WGM20)\n\tsbi(TCCR2A, WGM20);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n#if defined(TCCR3B) && defined(CS31) && defined(WGM30)\n\tsbi(TCCR3B, CS31);\t\t// set timer 3 prescale factor to 64\n\tsbi(TCCR3B, CS30);\n\tsbi(TCCR3A, WGM30);\t\t// put timer 3 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(TCCR4A) && defined(TCCR4B) && defined(TCCR4D) /* beginning of timer4 block for 32U4 and similar */\n\tsbi(TCCR4B, CS42);\t\t// set timer4 prescale factor to 64\n\tsbi(TCCR4B, CS41);\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4D, WGM40);\t\t// put timer 4 in phase- and frequency-correct PWM mode\t\n\tsbi(TCCR4A, PWM4A);\t\t// enable PWM mode for comparator OCR4A\n\tsbi(TCCR4C, PWM4D);\t\t// enable PWM mode for comparator OCR4D\n#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */\n#if defined(TCCR4B) && defined(CS41) && defined(WGM40)\n\tsbi(TCCR4B, CS41);\t\t// set timer 4 prescale factor to 64\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4A, WGM40);\t\t// put timer 4 in 8-bit phase correct pwm mode\n#endif\n#endif /* end timer4 block for ATMEGA1280/2560 and similar */\t\n\n#if defined(TCCR5B) && defined(CS51) && defined(WGM50)\n\tsbi(TCCR5B, CS51);\t\t// set timer 5 prescale factor to 64\n\tsbi(TCCR5B, CS50);\n\tsbi(TCCR5A, WGM50);\t\t// put timer 5 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(ADCSRA)\n\t// set a2d prescaler so we are inside the desired 50-200 KHz range.\n\t#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 4000000 // 4 MHz / 32 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 2000000 // 2 MHz / 16 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 1000000 // 1 MHz / 8 = 125 KHz\n\t\tcbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#else // 128 kHz / 2 = 64 KHz -> This is the closest you can get, the prescaler is 2\n\t\tcbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#endif\n\t// enable a2d conversions\n\tsbi(ADCSRA, ADEN);\n#endif\n\n\t// the bootloader connects pins 0 and 1 to the USART; disconnect them\n\t// here so they can be used as normal digital i/o; they will be\n\t// reconnected in Serial.begin()\n#if defined(UCSRB)\n\tUCSRB = 0;\n#elif defined(UCSR0B)\n\tUCSR0B = 0;\n#endif\n}\n"}}}Content-Length: 183

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c"}}}
>>>
Content-Length: 193

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":347,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":39,"character":13},"end":{"line":39,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":347,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":348,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":41,"character":10}}}
>>>
Content-Length: 40

{"id":348,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":349,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":41,"character":11}}}
>>>
Content-Length: 38

{"id":349,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":309}}}Content-Length: 281

{"jsonrpc":"2.0","id":350,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":350,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":41,"character":10},"end":{"line":41,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":351,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":49,"character":12}}}
>>>
Content-Length: 251

{"id":351,"result":{"contents":{"kind":"markdown","value":"### variable `microServo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo microServo\n```"},"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":352,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":12}}}
>>>
Content-Length: 38

{"id":352,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":353,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":0},"end":{"line":49,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":353,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":354,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":13}}}
>>>
Content-Length: 472

{"id":354,"result":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":9}},"kind":1},{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":9}},"kind":1},{"range":{"start":{"line":48,"character":4},"end":{"line":48,"character":9}},"kind":1},{"range":{"start":{"line":50,"character":4},"end":{"line":50,"character":9}},"kind":1},{"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":7}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":355,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":355,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":310},"contentChanges":[{"range":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}},"rangeLength":3,"text":"2"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":311},"contentChanges":[{"range":{"start":{"line":48,"character":11},"end":{"line":48,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":312},"contentChanges":[{"range":{"start":{"line":48,"character":12},"end":{"line":48,"character":12}},"rangeLength":0,"text":"0"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":356,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":13},"end":{"line":48,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":356,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":357,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":13}}}
>>>
Content-Length: 223

{"id":357,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","range":{"start":{"line":105,"character":5},"end":{"line":105,"character":10}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":312}}}Content-Length: 12891

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","languageId":"c","version":1,"text":"/*\n  wiring.c - Partial implementation of the Wiring API for the ATmega8.\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#include \"wiring_private.h\"\n\n// the prescaler is set so that timer0 ticks every 64 clock cycles, and the\n// the overflow handler is called every 256 ticks.\n#define MICROSECONDS_PER_TIMER0_OVERFLOW (clockCyclesToMicroseconds(64 * 256))\n\n// the whole number of milliseconds per timer0 overflow\n#define MILLIS_INC (MICROSECONDS_PER_TIMER0_OVERFLOW / 1000)\n\n// the fractional number of milliseconds per timer0 overflow. we shift right\n// by three to fit these numbers into a byte. (for the clock speeds we care\n// about - 8 and 16 MHz - this doesn't lose precision.)\n#define FRACT_INC ((MICROSECONDS_PER_TIMER0_OVERFLOW % 1000) >> 3)\n#define FRACT_MAX (1000 >> 3)\n\nvolatile unsigned long timer0_overflow_count = 0;\nvolatile unsigned long timer0_millis = 0;\nstatic unsigned char timer0_fract = 0;\n\n#if defined(TIM0_OVF_vect)\nISR(TIM0_OVF_vect)\n#else\nISR(TIMER0_OVF_vect)\n#endif\n{\n\t// copy these to local variables so they can be stored in registers\n\t// (volatile variables must be read from memory on every access)\n\tunsigned long m = timer0_millis;\n\tunsigned char f = timer0_fract;\n\n\tm += MILLIS_INC;\n\tf += FRACT_INC;\n\tif (f >= FRACT_MAX) {\n\t\tf -= FRACT_MAX;\n\t\tm += 1;\n\t}\n\n\ttimer0_fract = f;\n\ttimer0_millis = m;\n\ttimer0_overflow_count++;\n}\n\nunsigned long millis()\n{\n\tunsigned long m;\n\tuint8_t oldSREG = SREG;\n\n\t// disable interrupts while we read timer0_millis or we might get an\n\t// inconsistent value (e.g. in the middle of a write to timer0_millis)\n\tcli();\n\tm = timer0_millis;\n\tSREG = oldSREG;\n\n\treturn m;\n}\n\nunsigned long micros() {\n\tunsigned long m;\n\tuint8_t oldSREG = SREG, t;\n\t\n\tcli();\n\tm = timer0_overflow_count;\n#if defined(TCNT0)\n\tt = TCNT0;\n#elif defined(TCNT0L)\n\tt = TCNT0L;\n#else\n\t#error TIMER 0 not defined\n#endif\n\n#ifdef TIFR0\n\tif ((TIFR0 & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#else\n\tif ((TIFR & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#endif\n\n\tSREG = oldSREG;\n\t\n\treturn ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());\n}\n\nvoid delay(unsigned long ms)\n{\n\tuint32_t start = micros();\n\n\twhile (ms > 0) {\n\t\tyield();\n\t\twhile ( ms > 0 && (micros() - start) >= 1000) {\n\t\t\tms--;\n\t\t\tstart += 1000;\n\t\t}\n\t}\n}\n\n/* Delay for the given number of microseconds.  Assumes a 1, 8, 12, 16, 20 or 24 MHz clock. */\nvoid delayMicroseconds(unsigned int us)\n{\n\t// call = 4 cycles + 2 to 4 cycles to init us(2 for constant delay, 4 for variable)\n\n\t// calling avrlib's delay_us() function with low values (e.g. 1 or\n\t// 2 microseconds) gives delays longer than desired.\n\t//delay_us(us);\n#if F_CPU >= 24000000L\n\t// for the 24 MHz clock for the aventurous ones, trying to overclock\n\n\t// zero delay fix\n\tif (!us) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/6 of a microsecond (4 cycles)\n\t// per iteration, so execute it six times for each microsecond of\n\t// delay requested.\n\tus *= 6; // x6 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 22 (24) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //=2 cycles\n\n#elif F_CPU >= 20000000L\n\t// for the 20 MHz clock on rare Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 18 (20) cycles, which is 1us\n\t__asm__ __volatile__ (\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\"); //just waiting 4 cycles\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/5 of a microsecond (4 cycles)\n\t// per iteration, so execute it five times for each microsecond of\n\t// delay requested.\n\tus = (us << 2) + us; // x5 us, = 7 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 26 (28) cycles above, remove 7, (7*4=28)\n\t// us is at least 10 so we can substract 7\n\tus -= 7; // 2 cycles\n\n#elif F_CPU >= 16000000L\n\t// for the 16 MHz clock on most Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/4 of a microsecond (4 cycles)\n\t// per iteration, so execute it four times for each microsecond of\n\t// delay requested.\n\tus <<= 2; // x4 us, = 4 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 19 (21) cycles above, remove 5, (5*4=20)\n\t// us is at least 8 so we can substract 5\n\tus -= 5; // = 2 cycles,\n\n#elif F_CPU >= 12000000L\n\t// for the 12 MHz clock if somebody is working with USB\n\n\t// for a 1 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1.5us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/3 of a microsecond (4 cycles)\n\t// per iteration, so execute it three times for each microsecond of\n\t// delay requested.\n\tus = (us << 1) + us; // x3 us, = 5 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 20 (22) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can substract 5\n\tus -= 5; //2 cycles\n\n#elif F_CPU >= 8000000L\n\t// for the 8 MHz internal clock\n\n\t// for a 1 and 2 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 2us\n\tif (us <= 2) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/2 of a microsecond (4 cycles)\n\t// per iteration, so execute it twice for each microsecond of\n\t// delay requested.\n\tus <<= 1; //x2 us, = 2 cycles\n\n\t// account for the time taken in the preceeding commands.\n\t// we just burned 17 (19) cycles above, remove 4, (4*4=16)\n\t// us is at least 6 so we can substract 4\n\tus -= 4; // = 2 cycles\n\n#else\n\t// for the 1 MHz internal clock (default settings for common Atmega microcontrollers)\n\n\t// the overhead of the function calls is 14 (16) cycles\n\tif (us <= 16) return; //= 3 cycles, (4 when true)\n\tif (us <= 25) return; //= 3 cycles, (4 when true), (must be at least 25 if we want to substract 22)\n\n\t// compensate for the time taken by the preceeding and next commands (about 22 cycles)\n\tus -= 22; // = 2 cycles\n\t// the following loop takes 4 microseconds (4 cycles)\n\t// per iteration, so execute it us/4 times\n\t// us is at least 4, divided by 4 gives us 1 (no zero delay bug)\n\tus >>= 2; // us div 4, = 4 cycles\n\t\n\n#endif\n\n\t// busy wait\n\t__asm__ __volatile__ (\n\t\t\"1: sbiw %0,1\" \"\\n\\t\" // 2 cycles\n\t\t\"brne 1b\" : \"=w\" (us) : \"0\" (us) // 2 cycles\n\t);\n\t// return = 4 cycles\n}\n\nvoid init()\n{\n\t// this needs to be called before setup() or some functions won't\n\t// work there\n\tsei();\n\t\n\t// on the ATmega168, timer 0 is also used for fast hardware pwm\n\t// (using phase-correct PWM would mean that timer 0 overflowed half as often\n\t// resulting in different millis() behavior on the ATmega8 and ATmega168)\n#if defined(TCCR0A) && defined(WGM01)\n\tsbi(TCCR0A, WGM01);\n\tsbi(TCCR0A, WGM00);\n#endif\n\n\t// set timer 0 prescale factor to 64\n#if defined(__AVR_ATmega128__)\n\t// CPU specific: different values for the ATmega128\n\tsbi(TCCR0, CS02);\n#elif defined(TCCR0) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard atmega8\n\tsbi(TCCR0, CS01);\n\tsbi(TCCR0, CS00);\n#elif defined(TCCR0B) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard 168/328/1280/2560\n\tsbi(TCCR0B, CS01);\n\tsbi(TCCR0B, CS00);\n#elif defined(TCCR0A) && defined(CS01) && defined(CS00)\n\t// this combination is for the __AVR_ATmega645__ series\n\tsbi(TCCR0A, CS01);\n\tsbi(TCCR0A, CS00);\n#else\n\t#error Timer 0 prescale factor 64 not set correctly\n#endif\n\n\t// enable timer 0 overflow interrupt\n#if defined(TIMSK) && defined(TOIE0)\n\tsbi(TIMSK, TOIE0);\n#elif defined(TIMSK0) && defined(TOIE0)\n\tsbi(TIMSK0, TOIE0);\n#else\n\t#error\tTimer 0 overflow interrupt not set correctly\n#endif\n\n\t// timers 1 and 2 are used for phase-correct hardware pwm\n\t// this is better for motors as it ensures an even waveform\n\t// note, however, that fast pwm mode can achieve a frequency of up\n\t// 8 MHz (with a 16 MHz clock) at 50% duty cycle\n\n#if defined(TCCR1B) && defined(CS11) && defined(CS10)\n\tTCCR1B = 0;\n\n\t// set timer 1 prescale factor to 64\n\tsbi(TCCR1B, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1B, CS10);\n#endif\n#elif defined(TCCR1) && defined(CS11) && defined(CS10)\n\tsbi(TCCR1, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1, CS10);\n#endif\n#endif\n\t// put timer 1 in 8-bit phase correct pwm mode\n#if defined(TCCR1A) && defined(WGM10)\n\tsbi(TCCR1A, WGM10);\n#endif\n\n\t// set timer 2 prescale factor to 64\n#if defined(TCCR2) && defined(CS22)\n\tsbi(TCCR2, CS22);\n#elif defined(TCCR2B) && defined(CS22)\n\tsbi(TCCR2B, CS22);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n\t// configure timer 2 for phase correct pwm (8-bit)\n#if defined(TCCR2) && defined(WGM20)\n\tsbi(TCCR2, WGM20);\n#elif defined(TCCR2A) && defined(WGM20)\n\tsbi(TCCR2A, WGM20);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n#if defined(TCCR3B) && defined(CS31) && defined(WGM30)\n\tsbi(TCCR3B, CS31);\t\t// set timer 3 prescale factor to 64\n\tsbi(TCCR3B, CS30);\n\tsbi(TCCR3A, WGM30);\t\t// put timer 3 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(TCCR4A) && defined(TCCR4B) && defined(TCCR4D) /* beginning of timer4 block for 32U4 and similar */\n\tsbi(TCCR4B, CS42);\t\t// set timer4 prescale factor to 64\n\tsbi(TCCR4B, CS41);\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4D, WGM40);\t\t// put timer 4 in phase- and frequency-correct PWM mode\t\n\tsbi(TCCR4A, PWM4A);\t\t// enable PWM mode for comparator OCR4A\n\tsbi(TCCR4C, PWM4D);\t\t// enable PWM mode for comparator OCR4D\n#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */\n#if defined(TCCR4B) && defined(CS41) && defined(WGM40)\n\tsbi(TCCR4B, CS41);\t\t// set timer 4 prescale factor to 64\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4A, WGM40);\t\t// put timer 4 in 8-bit phase correct pwm mode\n#endif\n#endif /* end timer4 block for ATMEGA1280/2560 and similar */\t\n\n#if defined(TCCR5B) && defined(CS51) && defined(WGM50)\n\tsbi(TCCR5B, CS51);\t\t// set timer 5 prescale factor to 64\n\tsbi(TCCR5B, CS50);\n\tsbi(TCCR5A, WGM50);\t\t// put timer 5 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(ADCSRA)\n\t// set a2d prescaler so we are inside the desired 50-200 KHz range.\n\t#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 4000000 // 4 MHz / 32 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 2000000 // 2 MHz / 16 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 1000000 // 1 MHz / 8 = 125 KHz\n\t\tcbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#else // 128 kHz / 2 = 64 KHz -> This is the closest you can get, the prescaler is 2\n\t\tcbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#endif\n\t// enable a2d conversions\n\tsbi(ADCSRA, ADEN);\n#endif\n\n\t// the bootloader connects pins 0 and 1 to the USART; disconnect them\n\t// here so they can be used as normal digital i/o; they will be\n\t// reconnected in Serial.begin()\n#if defined(UCSRB)\n\tUCSRB = 0;\n#elif defined(UCSR0B)\n\tUCSR0B = 0;\n#endif\n}\n"}}}Content-Length: 183

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c"}}}
>>>
Content-Length: 193

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":358,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":13}}}
>>>
Content-Length: 287

{"id":358,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":57,"character":13},"end":{"line":57,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":359,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":12}}}
>>>
Content-Length: 38

{"id":359,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":360,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":12}}}
>>>
Content-Length: 38

{"id":360,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":361,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":361,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":362,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":362,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":48,"character":10},"end":{"line":48,"character":13}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":363,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":11}}}
>>>
Content-Length: 40

{"id":363,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":364,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":364,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313},"contentChanges":[{"range":{"start":{"line":50,"character":10},"end":{"line":50,"character":13}},"rangeLength":3,"text":"200"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":365,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":50,"character":13},"end":{"line":50,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":365,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313}}}Content-Length: 212

{"jsonrpc":"2.0","id":366,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":50,"character":12}}}
>>>
Content-Length: 38

{"id":366,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":367,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":29}}}
>>>
Content-Length: 40

{"id":367,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":368,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":47,"character":0},"end":{"line":50,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 420

{"id":368,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server931132580/sketch/DistanceSensor.ino.cpp","selection":{"start":{"line":56,"character":0},"end":{"line":59,"character":15}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":369,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":0},"end":{"line":50,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 420

{"id":369,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server931132580/sketch/DistanceSensor.ino.cpp","selection":{"start":{"line":57,"character":0},"end":{"line":59,"character":15}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313}}}Content-Length: 281

{"jsonrpc":"2.0","id":370,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":48,"character":15},"end":{"line":48,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":370,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313}}}Content-Length: 281

{"jsonrpc":"2.0","id":371,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":46},"end":{"line":43,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":371,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":313}}}Content-Length: 207

{"jsonrpc":"2.0","id":372,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":23}}}
>>>
Content-Length: 309

{"id":372,"result":{"contents":{"kind":"markdown","value":"### variable `greenPin`  \n\n---\nType: `const int`  \nValue = `5`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int greenPin = 5\n```"},"range":{"start":{"line":54,"character":20},"end":{"line":54,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":373,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":26}}}
>>>
Content-Length: 309

{"id":373,"result":{"contents":{"kind":"markdown","value":"### variable `greenPin`  \n\n---\nType: `const int`  \nValue = `5`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int greenPin = 5\n```"},"range":{"start":{"line":54,"character":20},"end":{"line":54,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":374,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":33}}}
>>>
Content-Length: 311

{"id":374,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":54,"character":33},"end":{"line":54,"character":34}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":375,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":32}}}
>>>
Content-Length: 38

{"id":375,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":376,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":30},"end":{"line":45,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":376,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":45,"character":30},"end":{"line":45,"character":33}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":314},"contentChanges":[{"range":{"start":{"line":45,"character":30},"end":{"line":45,"character":33}},"rangeLength":3,"text":"2"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":315},"contentChanges":[{"range":{"start":{"line":45,"character":31},"end":{"line":45,"character":31}},"rangeLength":0,"text":"0"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":316},"contentChanges":[{"range":{"start":{"line":45,"character":32},"end":{"line":45,"character":32}},"rangeLength":0,"text":"0"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":377,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":33},"end":{"line":45,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":377,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":316}}}Content-Length: 219

{"jsonrpc":"2.0","id":378,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":19}}}
>>>
Content-Length: 393

{"id":378,"result":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"kind":1},{"range":{"start":{"line":40,"character":15},"end":{"line":40,"character":20}},"kind":1},{"range":{"start":{"line":47,"character":15},"end":{"line":47,"character":20}},"kind":1},{"range":{"start":{"line":49,"character":15},"end":{"line":49,"character":20}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":379,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":40,"character":18}}}
>>>
Content-Length: 208

{"id":379,"result":[{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","range":{"start":{"line":263,"character":12},"end":{"line":263,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 11436

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","languageId":"cpp","version":1,"text":"/*\n Servo.cpp - Interrupt driven Servo library for Arduino using 16 bit timers- Version 2\n Copyright (c) 2009 Michael Margolis.  All right reserved.\n\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\n#if defined(ARDUINO_ARCH_AVR)\n\n#include <avr/interrupt.h>\n#include <Arduino.h>\n\n#include \"Servo.h\"\n\n#define usToTicks(_us)    (( clockCyclesPerMicrosecond()* _us) / 8)     // converts microseconds to tick (assumes prescale of 8)  // 12 Aug 2009\n#define ticksToUs(_ticks) (( (unsigned)_ticks * 8)/ clockCyclesPerMicrosecond() ) // converts from ticks back to microseconds\n\n\n#define TRIM_DURATION       2                               // compensation ticks to trim adjust for digitalWrite delays // 12 August 2009\n\n//#define NBR_TIMERS        (MAX_SERVOS / SERVOS_PER_TIMER)\n\nstatic servo_t servos[MAX_SERVOS];                          // static array of servo structures\nstatic volatile int8_t Channel[_Nbr_16timers ];             // counter for the servo being pulsed for each timer (or -1 if refresh interval)\n\nuint8_t ServoCount = 0;                                     // the total number of attached servos\n\n\n// convenience macros\n#define SERVO_INDEX_TO_TIMER(_servo_nbr) ((timer16_Sequence_t)(_servo_nbr / SERVOS_PER_TIMER)) // returns the timer controlling this servo\n#define SERVO_INDEX_TO_CHANNEL(_servo_nbr) (_servo_nbr % SERVOS_PER_TIMER)       // returns the index of the servo on this timer\n#define SERVO_INDEX(_timer,_channel)  ((_timer*SERVOS_PER_TIMER) + _channel)     // macro to access servo index by timer and channel\n#define SERVO(_timer,_channel)  (servos[SERVO_INDEX(_timer,_channel)])            // macro to access servo class by timer and channel\n\n#define SERVO_MIN() (MIN_PULSE_WIDTH - this->min * 4)  // minimum value in uS for this servo\n#define SERVO_MAX() (MAX_PULSE_WIDTH - this->max * 4)  // maximum value in uS for this servo\n\n/************ static functions common to all instances ***********************/\n\nstatic inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)\n{\n  if( Channel[timer] < 0 )\n    *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer\n  else{\n    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated\n  }\n\n  Channel[timer]++;    // increment to the next channel\n  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {\n    *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;\n    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high\n  }\n  else {\n    // finished all channels so wait for the refresh period to expire before starting over\n    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed\n      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);\n    else\n      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed\n    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel\n  }\n}\n\n#ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform\n// Interrupt handlers for Arduino\n#if defined(_useTimer1)\nSIGNAL (TIMER1_COMPA_vect)\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n\n#if defined(_useTimer3)\nSIGNAL (TIMER3_COMPA_vect)\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n\n#if defined(_useTimer4)\nSIGNAL (TIMER4_COMPA_vect)\n{\n  handle_interrupts(_timer4, &TCNT4, &OCR4A);\n}\n#endif\n\n#if defined(_useTimer5)\nSIGNAL (TIMER5_COMPA_vect)\n{\n  handle_interrupts(_timer5, &TCNT5, &OCR5A);\n}\n#endif\n\n#elif defined WIRING\n// Interrupt handlers for Wiring\n#if defined(_useTimer1)\nvoid Timer1Service()\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n#if defined(_useTimer3)\nvoid Timer3Service()\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n#endif\n\n\nstatic void initISR(timer16_Sequence_t timer)\n{\n#if defined (_useTimer1)\n  if(timer == _timer1) {\n    TCCR1A = 0;             // normal counting mode\n    TCCR1B = _BV(CS11);     // set prescaler of 8\n    TCNT1 = 0;              // clear the timer count\n#if defined(__AVR_ATmega8__)|| defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF1A);      // clear any pending interrupts;\n    TIMSK |=  _BV(OCIE1A) ;  // enable the output compare interrupt\n#else\n    // here if not ATmega8 or ATmega128\n    TIFR1 |= _BV(OCF1A);     // clear any pending interrupts;\n    TIMSK1 |=  _BV(OCIE1A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER1OUTCOMPAREA_INT, Timer1Service);\n#endif\n  }\n#endif\n\n#if defined (_useTimer3)\n  if(timer == _timer3) {\n    TCCR3A = 0;             // normal counting mode\n    TCCR3B = _BV(CS31);     // set prescaler of 8\n    TCNT3 = 0;              // clear the timer count\n#if defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF3A);     // clear any pending interrupts;\n\tETIMSK |= _BV(OCIE3A);  // enable the output compare interrupt\n#else\n    TIFR3 = _BV(OCF3A);     // clear any pending interrupts;\n    TIMSK3 =  _BV(OCIE3A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER3OUTCOMPAREA_INT, Timer3Service);  // for Wiring platform only\n#endif\n  }\n#endif\n\n#if defined (_useTimer4)\n  if(timer == _timer4) {\n    TCCR4A = 0;             // normal counting mode\n    TCCR4B = _BV(CS41);     // set prescaler of 8\n    TCNT4 = 0;              // clear the timer count\n    TIFR4 = _BV(OCF4A);     // clear any pending interrupts;\n    TIMSK4 =  _BV(OCIE4A) ; // enable the output compare interrupt\n  }\n#endif\n\n#if defined (_useTimer5)\n  if(timer == _timer5) {\n    TCCR5A = 0;             // normal counting mode\n    TCCR5B = _BV(CS51);     // set prescaler of 8\n    TCNT5 = 0;              // clear the timer count\n    TIFR5 = _BV(OCF5A);     // clear any pending interrupts;\n    TIMSK5 =  _BV(OCIE5A) ; // enable the output compare interrupt\n  }\n#endif\n}\n\nstatic void finISR(timer16_Sequence_t timer)\n{\n    //disable use of the given timer\n#if defined WIRING   // Wiring\n  if(timer == _timer1) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK1 &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #else\n    TIMSK &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #endif\n    timerDetach(TIMER1OUTCOMPAREA_INT);\n  }\n  else if(timer == _timer3) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK3 &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #else\n    ETIMSK &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #endif\n    timerDetach(TIMER3OUTCOMPAREA_INT);\n  }\n#else\n  //For arduino - in future: call here to a currently undefined function to reset the timer\n  (void) timer;  // squash \"unused parameter 'timer' [-Wunused-parameter]\" warning\n#endif\n}\n\nstatic boolean isTimerActive(timer16_Sequence_t timer)\n{\n  // returns true if any servo is active on this timer\n  for(uint8_t channel=0; channel < SERVOS_PER_TIMER; channel++) {\n    if(SERVO(timer,channel).Pin.isActive == true)\n      return true;\n  }\n  return false;\n}\n\n\n/****************** end of static functions ******************************/\n\nServo::Servo()\n{\n  if( ServoCount < MAX_SERVOS) {\n    this->servoIndex = ServoCount++;                    // assign a servo index to this instance\n\tservos[this->servoIndex].ticks = usToTicks(DEFAULT_PULSE_WIDTH);   // store default values  - 12 Aug 2009\n  }\n  else\n    this->servoIndex = INVALID_SERVO ;  // too many servos\n}\n\nuint8_t Servo::attach(int pin)\n{\n  return this->attach(pin, MIN_PULSE_WIDTH, MAX_PULSE_WIDTH);\n}\n\nuint8_t Servo::attach(int pin, int min, int max)\n{\n  if(this->servoIndex < MAX_SERVOS ) {\n    pinMode( pin, OUTPUT) ;                                   // set servo pin to output\n    servos[this->servoIndex].Pin.nbr = pin;\n    // todo min/max check: abs(min - MIN_PULSE_WIDTH) /4 < 128\n    this->min  = (MIN_PULSE_WIDTH - min)/4; //resolution of min/max is 4 uS\n    this->max  = (MAX_PULSE_WIDTH - max)/4;\n    // initialize the timer if it has not already been initialized\n    timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n    if(isTimerActive(timer) == false)\n      initISR(timer);\n    servos[this->servoIndex].Pin.isActive = true;  // this must be set after the check for isTimerActive\n  }\n  return this->servoIndex ;\n}\n\nvoid Servo::detach()\n{\n  servos[this->servoIndex].Pin.isActive = false;\n  timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n  if(isTimerActive(timer) == false) {\n    finISR(timer);\n  }\n}\n\nvoid Servo::write(int value)\n{\n  if(value < MIN_PULSE_WIDTH)\n  {  // treat values less than 544 as angles in degrees (valid values in microseconds are handled as microseconds)\n    if(value < 0) value = 0;\n    if(value > 180) value = 180;\n    value = map(value, 0, 180, SERVO_MIN(),  SERVO_MAX());\n  }\n  this->writeMicroseconds(value);\n}\n\nvoid Servo::writeMicroseconds(int value)\n{\n  // calculate and store the values for the given channel\n  byte channel = this->servoIndex;\n  if( (channel < MAX_SERVOS) )   // ensure channel is valid\n  {\n    if( value < SERVO_MIN() )          // ensure pulse width is valid\n      value = SERVO_MIN();\n    else if( value > SERVO_MAX() )\n      value = SERVO_MAX();\n\n    value = value - TRIM_DURATION;\n    value = usToTicks(value);  // convert to ticks after compensating for interrupt overhead - 12 Aug 2009\n\n    uint8_t oldSREG = SREG;\n    cli();\n    servos[channel].ticks = value;\n    SREG = oldSREG;\n  }\n}\n\nint Servo::read() // return the value as degrees\n{\n  return  map( this->readMicroseconds()+1, SERVO_MIN(), SERVO_MAX(), 0, 180);\n}\n\nint Servo::readMicroseconds()\n{\n  unsigned int pulsewidth;\n  if( this->servoIndex != INVALID_SERVO )\n    pulsewidth = ticksToUs(servos[this->servoIndex].ticks)  + TRIM_DURATION ;   // 12 aug 2009\n  else\n    pulsewidth  = 0;\n\n  return pulsewidth;\n}\n\nbool Servo::attached()\n{\n  return servos[this->servoIndex].Pin.isActive ;\n}\n\n#endif // ARDUINO_ARCH_AVR\n\n"}}}Content-Length: 281

{"jsonrpc":"2.0","id":380,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":19},"end":{"line":40,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":380,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp"}}}
>>>
Content-Length: 177

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":316}}}Content-Length: 219

{"jsonrpc":"2.0","id":381,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":28}}}
>>>
Content-Length: 829

{"id":381,"result":[{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":15}},"kind":1},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":15}},"kind":1},{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":15}},"kind":1},{"range":{"start":{"line":44,"character":4},"end":{"line":44,"character":15}},"kind":1},{"range":{"start":{"line":45,"character":8},"end":{"line":45,"character":19}},"kind":1},{"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":15}},"kind":1},{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}},"kind":1},{"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":15}},"kind":1},{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":15}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":382,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":28},"end":{"line":45,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":382,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":383,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":383,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":316}}}Content-Length: 212

{"jsonrpc":"2.0","id":384,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":25}}}
>>>
Content-Length: 38

{"id":384,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":385,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":24}}}
>>>
Content-Length: 311

{"id":385,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":45,"character":23},"end":{"line":45,"character":24}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":386,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":21}}}
>>>
Content-Length: 200

{"id":386,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":10},"end":{"line":7,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":387,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":21}}}
>>>
Content-Length: 307

{"id":387,"result":{"contents":{"kind":"markdown","value":"### variable `bluePin`  \n\n---\nType: `const int`  \nValue = `6`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int bluePin = 6\n```"},"range":{"start":{"line":45,"character":16},"end":{"line":45,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":388,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":35,"character":26}}}
>>>
Content-Length: 38

{"id":388,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":389,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":35,"character":24},"end":{"line":35,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":389,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":35,"character":24},"end":{"line":35,"character":27}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":390,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":43,"character":26}}}
>>>
Content-Length: 272

{"id":390,"result":{"contents":{"kind":"markdown","value":"### variable `distance`  \n\n---\nType: `float`  \nValue = `0.000000e+00`  \n\n---\n```cpp\nfloat distance = 0\n```"},"range":{"start":{"line":52,"character":18},"end":{"line":52,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":391,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":43,"character":26}}}
>>>
Content-Length: 566

{"id":391,"result":[{"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":14}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":10}},"kind":3},{"range":{"start":{"line":30,"character":15},"end":{"line":30,"character":23}},"kind":2},{"range":{"start":{"line":33,"character":6},"end":{"line":33,"character":14}},"kind":2},{"range":{"start":{"line":43,"character":18},"end":{"line":43,"character":26}},"kind":2},{"range":{"start":{"line":43,"character":30},"end":{"line":43,"character":38}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":392,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":26},"end":{"line":43,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":392,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":393,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":25}}}
>>>
Content-Length: 480

{"id":393,"result":[{"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":18}},"kind":1},{"range":{"start":{"line":20,"character":10},"end":{"line":20,"character":18}},"kind":2},{"range":{"start":{"line":37,"character":16},"end":{"line":37,"character":24}},"kind":2},{"range":{"start":{"line":45,"character":20},"end":{"line":45,"character":28}},"kind":2},{"range":{"start":{"line":54,"character":16},"end":{"line":54,"character":24}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":394,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":25},"end":{"line":45,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":394,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":395,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":25}}}
>>>
Content-Length: 40

{"id":395,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":396,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":25}}}
>>>
Content-Length: 38

{"id":396,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":397,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":24},"end":{"line":44,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":397,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":44,"character":24},"end":{"line":44,"character":27}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":317},"contentChanges":[{"range":{"start":{"line":44,"character":24},"end":{"line":44,"character":27}},"rangeLength":3,"text":"2"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":398,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":25},"end":{"line":44,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":398,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":318},"contentChanges":[{"range":{"start":{"line":44,"character":25},"end":{"line":44,"character":25}},"rangeLength":0,"text":"5"}]}}Content-Length: 207

{"jsonrpc":"2.0","id":399,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":25}}}
>>>
Content-Length: 40

{"id":399,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":400,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":26},"end":{"line":44,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":400,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":318}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":319},"contentChanges":[{"range":{"start":{"line":44,"character":26},"end":{"line":44,"character":26}},"rangeLength":0,"text":"2"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":401,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":27},"end":{"line":44,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":401,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":402,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":44,"character":29}}}
>>>
Content-Length: 40

{"id":402,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":319}}}Content-Length: 219

{"jsonrpc":"2.0","id":403,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":30}}}
>>>
Content-Length: 38

{"id":403,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":404,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":30},"end":{"line":45,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":404,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":405,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":30},"end":{"line":45,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":405,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":45,"character":30},"end":{"line":45,"character":33}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":320},"contentChanges":[{"range":{"start":{"line":45,"character":30},"end":{"line":45,"character":33}},"rangeLength":3,"text":"2"}]}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":321},"contentChanges":[{"range":{"start":{"line":45,"character":31},"end":{"line":45,"character":31}},"rangeLength":0,"text":"2"}]}}Content-Length: 207

{"jsonrpc":"2.0","id":406,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":29}}}
>>>
Content-Length: 311

{"id":406,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":54,"character":28},"end":{"line":54,"character":29}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":407,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":32},"end":{"line":45,"character":32}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":407,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":322},"contentChanges":[{"range":{"start":{"line":45,"character":32},"end":{"line":45,"character":32}},"rangeLength":0,"text":"5"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":408,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":45,"character":33},"end":{"line":45,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":408,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":322}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":322}}}Content-Length: 212

{"jsonrpc":"2.0","id":409,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":30}}}
>>>
Content-Length: 38

{"id":409,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":410,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":29}}}
>>>
Content-Length: 311

{"id":410,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":54,"character":28},"end":{"line":54,"character":29}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":411,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":26}}}
>>>
Content-Length: 311

{"id":411,"result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"start":{"line":55,"character":26},"end":{"line":55,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":412,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":25}}}
>>>
Content-Length: 40

{"id":412,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":413,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":25}}}
>>>
Content-Length: 40

{"id":413,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":414,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":25}}}
>>>
Content-Length: 38

{"id":414,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":415,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":25},"end":{"line":46,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 399

{"id":415,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":46,"character":25},"end":{"line":46,"character":26}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":323},"contentChanges":[{"range":{"start":{"line":46,"character":25},"end":{"line":46,"character":26}},"rangeLength":1,"text":"5"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":416,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":46,"character":26},"end":{"line":46,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":416,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":323}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":323}}}Content-Length: 212

{"jsonrpc":"2.0","id":417,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":32}}}
>>>
Content-Length: 38

{"id":417,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":418,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":45,"character":31}}}
>>>
Content-Length: 40

{"id":418,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":419,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":36,"character":15}}}
>>>
Content-Length: 230

{"id":419,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":420,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":43,"character":46},"end":{"line":43,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":420,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":323}}}Content-Length: 281

{"jsonrpc":"2.0","id":421,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":44,"character":29},"end":{"line":44,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":421,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":422,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":43,"character":31}}}
>>>
Content-Length: 199

{"id":422,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":9,"character":6},"end":{"line":9,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":323}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":323}}}Content-Length: 279

{"jsonrpc":"2.0","id":423,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":7,"character":22},"end":{"line":7,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":423,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":324},"contentChanges":[{"range":{"start":{"line":7,"character":22},"end":{"line":7,"character":22}},"rangeLength":0,"text":"\n"}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":325},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":0}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 338

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'i'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":326},"contentChanges":[{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":1}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 339

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'in'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":327},"contentChanges":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":2}},"rangeLength":0,"text":"t"}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":328},"contentChanges":[{"range":{"start":{"line":8,"character":3},"end":{"line":8,"character":3}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 388

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'int' declaration specifier"}]},"jsonrpc":"2.0"}Content-Length: 388

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'int' declaration specifier"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":329},"contentChanges":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":4}},"rangeLength":0,"text":"b"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":424,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":424,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":329}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":330},"contentChanges":[{"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"rangeLength":0,"text":"u"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":331},"contentChanges":[{"range":{"start":{"line":8,"character":6},"end":{"line":8,"character":6}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":332},"contentChanges":[{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":7}},"rangeLength":0,"text":"t"}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":333},"contentChanges":[{"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":8}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":334},"contentChanges":[{"range":{"start":{"line":8,"character":9},"end":{"line":8,"character":9}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":425,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":425,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":335},"contentChanges":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":336},"contentChanges":[{"range":{"start":{"line":8,"character":11},"end":{"line":8,"character":11}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":337},"contentChanges":[{"range":{"start":{"line":8,"character":12},"end":{"line":8,"character":12}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":5}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":338},"contentChanges":[{"range":{"start":{"line":8,"character":13},"end":{"line":8,"character":13}},"rangeLength":0,"text":" "}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":339},"contentChanges":[{"range":{"start":{"line":8,"character":14},"end":{"line":8,"character":14}},"rangeLength":0,"text":"="}]}}
>>>
Content-Length: 1335

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":14}},"severity":1,"code":"expected_lparen_after_type","source":"clang","message":"Expected '(' for function-style cast or type construction"},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'distance'"},{"range":{"start":{"line":31,"character":15},"end":{"line":31,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'distance'"},{"range":{"start":{"line":34,"character":6},"end":{"line":34,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'distance'"},{"range":{"start":{"line":44,"character":18},"end":{"line":44,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'distance'"},{"range":{"start":{"line":44,"character":30},"end":{"line":44,"character":38}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'distance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":340},"contentChanges":[{"range":{"start":{"line":8,"character":15},"end":{"line":8,"character":15}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 1335

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":14}},"severity":1,"code":"expected_lparen_after_type","source":"clang","message":"Expected '(' for function-style cast or type construction"},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'distance'"},{"range":{"start":{"line":31,"character":15},"end":{"line":31,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'distance'"},{"range":{"start":{"line":34,"character":6},"end":{"line":34,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'distance'"},{"range":{"start":{"line":44,"character":18},"end":{"line":44,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'distance'"},{"range":{"start":{"line":44,"character":30},"end":{"line":44,"character":38}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'distance'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":340}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":341},"contentChanges":[{"range":{"start":{"line":8,"character":16},"end":{"line":8,"character":16}},"rangeLength":0,"text":"2"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":342},"contentChanges":[{"range":{"start":{"line":8,"character":17},"end":{"line":8,"character":17}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":426,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":426,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":342}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":342}}}Content-Length: 206

{"jsonrpc":"2.0","id":427,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":7,"character":21}}}
>>>
Content-Length: 40

{"id":427,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":428,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":428,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":429,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":7,"character":0},"end":{"line":8,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":429,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":430,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":430,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":431,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":431,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":432,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":15,"character":19}}}
>>>
Content-Length: 231

{"id":432,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","range":{"start":{"line":120,"character":9},"end":{"line":120,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5658

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial.h - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#ifndef HardwareSerial_h\n#define HardwareSerial_h\n\n#include <inttypes.h>\n\n#include \"Stream.h\"\n\n// Define constants and variables for buffering incoming serial data.  We're\n// using a ring buffer (I think), in which head is the index of the location\n// to which to write the next incoming character and tail is the index of the\n// location from which to read.\n// NOTE: a \"power of 2\" buffer size is reccomended to dramatically\n//       optimize all the modulo operations for ring buffers.\n// WARNING: When buffer sizes are increased to > 256, the buffer index\n// variables are automatically increased in size, but the extra\n// atomicity guards needed for that are not implemented. This will\n// often work, but occasionally a race condition can occur that makes\n// Serial behave erratically. See https://github.com/arduino/Arduino/issues/2405\n#if !defined(SERIAL_TX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) < 1023)\n#define SERIAL_TX_BUFFER_SIZE 16\n#else\n#define SERIAL_TX_BUFFER_SIZE 64\n#endif\n#endif\n#if !defined(SERIAL_RX_BUFFER_SIZE)\n#if ((RAMEND - RAMSTART) < 1023)\n#define SERIAL_RX_BUFFER_SIZE 16\n#else\n#define SERIAL_RX_BUFFER_SIZE 64\n#endif\n#endif\n#if (SERIAL_TX_BUFFER_SIZE>256)\ntypedef uint16_t tx_buffer_index_t;\n#else\ntypedef uint8_t tx_buffer_index_t;\n#endif\n#if  (SERIAL_RX_BUFFER_SIZE>256)\ntypedef uint16_t rx_buffer_index_t;\n#else\ntypedef uint8_t rx_buffer_index_t;\n#endif\n\n// Define config for Serial.begin(baud, config);\n#define SERIAL_5N1 0x00\n#define SERIAL_6N1 0x02\n#define SERIAL_7N1 0x04\n#define SERIAL_8N1 0x06\n#define SERIAL_5N2 0x08\n#define SERIAL_6N2 0x0A\n#define SERIAL_7N2 0x0C\n#define SERIAL_8N2 0x0E\n#define SERIAL_5E1 0x20\n#define SERIAL_6E1 0x22\n#define SERIAL_7E1 0x24\n#define SERIAL_8E1 0x26\n#define SERIAL_5E2 0x28\n#define SERIAL_6E2 0x2A\n#define SERIAL_7E2 0x2C\n#define SERIAL_8E2 0x2E\n#define SERIAL_5O1 0x30\n#define SERIAL_6O1 0x32\n#define SERIAL_7O1 0x34\n#define SERIAL_8O1 0x36\n#define SERIAL_5O2 0x38\n#define SERIAL_6O2 0x3A\n#define SERIAL_7O2 0x3C\n#define SERIAL_8O2 0x3E\n\nclass HardwareSerial : public Stream\n{\n  protected:\n    volatile uint8_t * const _ubrrh;\n    volatile uint8_t * const _ubrrl;\n    volatile uint8_t * const _ucsra;\n    volatile uint8_t * const _ucsrb;\n    volatile uint8_t * const _ucsrc;\n    volatile uint8_t * const _udr;\n    // Has any byte been written to the UART since begin()\n    bool _written;\n\n    volatile rx_buffer_index_t _rx_buffer_head;\n    volatile rx_buffer_index_t _rx_buffer_tail;\n    volatile tx_buffer_index_t _tx_buffer_head;\n    volatile tx_buffer_index_t _tx_buffer_tail;\n\n    // Don't put any members after these buffers, since only the first\n    // 32 bytes of this struct can be accessed quickly using the ldd\n    // instruction.\n    unsigned char _rx_buffer[SERIAL_RX_BUFFER_SIZE];\n    unsigned char _tx_buffer[SERIAL_TX_BUFFER_SIZE];\n\n  public:\n    inline HardwareSerial(\n      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,\n      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,\n      volatile uint8_t *ucsrc, volatile uint8_t *udr);\n    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }\n    void begin(unsigned long, uint8_t);\n    void end();\n    virtual int available(void);\n    virtual int peek(void);\n    virtual int read(void);\n    virtual int availableForWrite(void);\n    virtual void flush(void);\n    virtual size_t write(uint8_t);\n    inline size_t write(unsigned long n) { return write((uint8_t)n); }\n    inline size_t write(long n) { return write((uint8_t)n); }\n    inline size_t write(unsigned int n) { return write((uint8_t)n); }\n    inline size_t write(int n) { return write((uint8_t)n); }\n    using Print::write; // pull in write(str) and write(buf, size) from Print\n    operator bool() { return true; }\n\n    // Interrupt handlers - Not intended to be called externally\n    inline void _rx_complete_irq(void);\n    void _tx_udr_empty_irq(void);\n};\n\n#if defined(UBRRH) || defined(UBRR0H)\n  extern HardwareSerial Serial;\n  #define HAVE_HWSERIAL0\n#endif\n#if defined(UBRR1H)\n  extern HardwareSerial Serial1;\n  #define HAVE_HWSERIAL1\n#endif\n#if defined(UBRR2H)\n  extern HardwareSerial Serial2;\n  #define HAVE_HWSERIAL2\n#endif\n#if defined(UBRR3H)\n  extern HardwareSerial Serial3;\n  #define HAVE_HWSERIAL3\n#endif\n\nextern void serialEventRun(void) __attribute__((weak));\n\n#endif\n"}}}Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h"}}}
>>>
Content-Length: 201

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":433,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":17,"character":23}}}
>>>
Content-Length: 222

{"id":433,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","range":{"start":{"line":43,"character":8},"end":{"line":43,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8117

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 184

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}}
>>>
Content-Length: 194

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":434,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":18,"character":26},"end":{"line":18,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":434,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 307

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":343},"contentChanges":[{"range":{"start":{"line":18,"character":26},"end":{"line":18,"character":26}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":344},"contentChanges":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":2}},"rangeLength":0,"text":"p"}]}}
>>>
Content-Length: 340

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'p'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":345},"contentChanges":[{"range":{"start":{"line":19,"character":3},"end":{"line":19,"character":3}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'pi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":346},"contentChanges":[{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":4}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 782

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":5}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pin'; did you mean 'sin'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/bin/../lib/gcc/avr/7.3.0/../../../../avr/include/math.h:133:15:\nnote: 'sin' declared here"},{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 688

{"jsonrpc":"2.0","id":435,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":19,"character":5},"end":{"line":19,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":5}},"message":"Use of undeclared identifier 'pin'; did you mean 'sin'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/bin/../lib/gcc/avr/7.3.0/../../../../avr/include/math.h:133:15:\nnote: 'sin' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":435,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":346}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":347},"contentChanges":[{"range":{"start":{"line":19,"character":5},"end":{"line":19,"character":5}},"rangeLength":0,"text":"M"}]}}
>>>
Content-Length: 343

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'pinM'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":348},"contentChanges":[{"range":{"start":{"line":19,"character":6},"end":{"line":19,"character":6}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 344

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'pinMo'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":349},"contentChanges":[{"range":{"start":{"line":19,"character":7},"end":{"line":19,"character":7}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 739

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMod'; did you mean 'pinMode'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":350},"contentChanges":[{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":8}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":436,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":19,"character":9},"end":{"line":19,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":436,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":351},"contentChanges":[{"range":{"start":{"line":19,"character":9},"end":{"line":19,"character":9}},"rangeLength":0,"text":"()"}]}}
>>>
Content-Length: 756

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'pinMode'\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided"},{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 286

{"jsonrpc":"2.0","id":437,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":19,"character":10},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 183

{"id":437,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":438,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":438,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":351}}}Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":352},"contentChanges":[{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":10}},"rangeLength":0,"text":"int buttonPin = 2;"}]}}
>>>
Content-Length: 388

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":14},"end":{"line":19,"character":23}},"severity":1,"code":"expected_lparen_after_type","source":"clang","message":"Expected '(' for function-style cast or type construction"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":439,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":19,"character":28},"end":{"line":19,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":439,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":352}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":353},"contentChanges":[{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":28}},"rangeLength":18,"text":""}]}}
>>>
Content-Length: 756

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'pinMode'\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided"},{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":440,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":440,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":353}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":354},"contentChanges":[{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":10}},"rangeLength":0,"text":"b"}]}}
>>>
Content-Length: 555

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'b'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":355},"contentChanges":[{"range":{"start":{"line":19,"character":11},"end":{"line":19,"character":11}},"rangeLength":0,"text":"u"}]}}
>>>
Content-Length: 556

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'bu'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":356},"contentChanges":[{"range":{"start":{"line":19,"character":12},"end":{"line":19,"character":12}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 557

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'but'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":357},"contentChanges":[{"range":{"start":{"line":19,"character":13},"end":{"line":19,"character":13}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 558

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'butt'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":358},"contentChanges":[{"range":{"start":{"line":19,"character":14},"end":{"line":19,"character":14}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 559

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'butto'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":359},"contentChanges":[{"range":{"start":{"line":19,"character":15},"end":{"line":19,"character":15}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 560

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'button'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 468

{"jsonrpc":"2.0","id":441,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":19,"character":16},"end":{"line":19,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":16}},"message":"Use of undeclared identifier 'button'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":441,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":360},"contentChanges":[{"range":{"start":{"line":19,"character":16},"end":{"line":19,"character":16}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 561

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'buttonP'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":361},"contentChanges":[{"range":{"start":{"line":19,"character":17},"end":{"line":19,"character":17}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 562

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'buttonPi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":362},"contentChanges":[{"range":{"start":{"line":19,"character":18},"end":{"line":19,"character":18}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 755

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'pinMode'\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:134:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided"},{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":442,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":19,"character":19},"end":{"line":19,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":442,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":362}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":363},"contentChanges":[{"range":{"start":{"line":19,"character":19},"end":{"line":19,"character":19}},"rangeLength":0,"text":","}]}}
>>>
Content-Length: 343

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":20},"end":{"line":19,"character":21}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 286

{"jsonrpc":"2.0","id":443,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":19,"character":20},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 183

{"id":443,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":364},"contentChanges":[{"range":{"start":{"line":19,"character":20},"end":{"line":19,"character":20}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 343

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":19,"character":21},"end":{"line":19,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 451

{"jsonrpc":"2.0","id":444,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":19,"character":21},"end":{"line":19,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":19,"character":21},"end":{"line":19,"character":22}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":444,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":364}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":364}}}Content-Length: 207

{"jsonrpc":"2.0","id":445,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":18,"character":25}}}
>>>
Content-Length: 313

{"id":445,"result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"start":{"line":27,"character":25},"end":{"line":27,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":446,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":17,"character":24}}}
>>>
Content-Length: 217

{"id":446,"result":{"contents":{"kind":"markdown","value":"### macro `OUTPUT`  \n\n---\n```cpp\n#define OUTPUT 0x1\n```"},"range":{"start":{"line":26,"character":19},"end":{"line":26,"character":25}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":447,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":17,"character":25}}}
>>>
Content-Length: 217

{"id":447,"result":{"contents":{"kind":"markdown","value":"### macro `OUTPUT`  \n\n---\n```cpp\n#define OUTPUT 0x1\n```"},"range":{"start":{"line":26,"character":19},"end":{"line":26,"character":25}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":448,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":17,"character":27},"end":{"line":17,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":448,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":449,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":17,"character":26}}}
>>>
Content-Length: 313

{"id":449,"result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"start":{"line":26,"character":26},"end":{"line":26,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":450,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":17,"character":27}}}
>>>
Content-Length: 40

{"id":450,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":451,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":17,"character":27}}}
>>>
Content-Length: 40

{"id":451,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":452,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":13,"character":14},"end":{"line":13,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":452,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":364}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":364}}}Content-Length: 212

{"jsonrpc":"2.0","id":453,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":14,"character":19}}}
>>>
Content-Length: 201

{"id":453,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":13,"character":5},"end":{"line":13,"character":10}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":364}}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":364}}}Content-Length: 207

{"jsonrpc":"2.0","id":454,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":14,"character":12}}}
>>>
Content-Length: 40

{"id":454,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":455,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":11,"character":14}}}
>>>
Content-Length: 251

{"id":455,"result":{"contents":{"kind":"markdown","value":"### variable `microServo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo microServo\n```"},"range":{"start":{"line":13,"character":6},"end":{"line":13,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":456,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":11,"character":15}}}
>>>
Content-Length: 251

{"id":456,"result":{"contents":{"kind":"markdown","value":"### variable `microServo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo microServo\n```"},"range":{"start":{"line":13,"character":6},"end":{"line":13,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":365},"contentChanges":[{"range":{"start":{"line":19,"character":21},"end":{"line":19,"character":21}},"rangeLength":0,"text":"INPUT_PULLUP"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":457,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":18,"character":21}}}
>>>
Content-Length: 222

{"id":457,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","range":{"start":{"line":42,"character":8},"end":{"line":42,"character":13}}}],"jsonrpc":"2.0"}Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":21,"character":2},"end":{"line":21,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 8117

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include <stdlib.h>\n#include <stdbool.h>\n#include <string.h>\n#include <math.h>\n\n#include <avr/pgmspace.h>\n#include <avr/io.h>\n#include <avr/interrupt.h>\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define abs(x) ((x)>0?(x):-(x))\n#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))\n#define round(x)     ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) & 0xff))\n#define highByte(w) ((uint8_t) ((w) >> 8))\n\n#define bitRead(value, bit) (((value) >> (bit)) & 0x01)\n#define bitSet(value, bit) ((value) |= (1UL << (bit)))\n#define bitClear(value, bit) ((value) &= ~(1UL << (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL << (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL << (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) && defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}}}Content-Length: 184

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}}
>>>
Content-Length: 194

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":458,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":17,"character":26}}}
>>>
Content-Length: 313

{"id":458,"result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"start":{"line":26,"character":26},"end":{"line":26,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":459,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":19,"character":33},"end":{"line":19,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 433

{"id":459,"result":[{"title":"Expand macro 'INPUT_PULLUP'","kind":"refactor","command":{"title":"Expand macro 'INPUT_PULLUP'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server931132580/sketch/DistanceSensor.ino.cpp","selection":{"start":{"line":28,"character":33},"end":{"line":28,"character":33}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":365}}}Content-Length: 207

{"jsonrpc":"2.0","id":460,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":21,"character":13}}}
>>>
Content-Length: 305

{"id":460,"result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `const int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int redPin = 3\n```"},"range":{"start":{"line":30,"character":10},"end":{"line":30,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":461,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":21,"character":13}}}
>>>
Content-Length: 200

{"id":461,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":5,"character":10},"end":{"line":5,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":462,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":21,"character":9}}}
>>>
Content-Length: 229

{"id":462,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","range":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5578

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out &= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) && defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) && defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out &= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) & bit) return HIGH;\n\treturn LOW;\n}\n"}}}Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}}
>>>
Content-Length: 201

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":365}}}Content-Length: 211

{"jsonrpc":"2.0","id":463,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":21,"character":4}}}
>>>
Content-Length: 229

{"id":463,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","range":{"start":{"line":28,"character":5},"end":{"line":28,"character":12}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5578

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out &= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) && defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) && defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out &= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) & bit) return HIGH;\n\treturn LOW;\n}\n"}}}Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}}
>>>
Content-Length: 201

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":464,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":21,"character":4}}}
>>>
Content-Length: 311

{"id":464,"result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}}},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":465,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":19,"character":34},"end":{"line":19,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":465,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":366},"contentChanges":[{"range":{"start":{"line":19,"character":34},"end":{"line":19,"character":34}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":466,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":19,"character":35},"end":{"line":19,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":466,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":366}}}Content-Length: 279

{"jsonrpc":"2.0","id":467,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":58,"character":3},"end":{"line":58,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":467,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":468,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":57,"character":22}}}
>>>
Content-Length: 307

{"id":468,"result":{"contents":{"kind":"markdown","value":"### variable `bluePin`  \n\n---\nType: `const int`  \nValue = `6`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nconst int bluePin = 6\n```"},"range":{"start":{"line":66,"character":16},"end":{"line":66,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":367},"contentChanges":[{"range":{"start":{"line":58,"character":3},"end":{"line":58,"character":3}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":367}}}Content-Length: 409

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":368},"contentChanges":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":59,"character":0},"end":{"line":59,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":369},"contentChanges":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":2}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 340

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'i'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":370},"contentChanges":[{"range":{"start":{"line":60,"character":3},"end":{"line":60,"character":3}},"rangeLength":0,"text":"f"}]}}
>>>
Content-Length: 347

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":2},"end":{"line":62,"character":7}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'if'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":371},"contentChanges":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":4}},"rangeLength":0,"text":"()"}]}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":6}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 285

{"jsonrpc":"2.0","id":469,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":5},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 93

{"id":469,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"jsonrpc":"2.0","id":470,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":6}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":470,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":371}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":372},"contentChanges":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":5}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'd'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":373},"contentChanges":[{"range":{"start":{"line":60,"character":6},"end":{"line":60,"character":6}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'di'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":374},"contentChanges":[{"range":{"start":{"line":60,"character":7},"end":{"line":60,"character":7}},"rangeLength":0,"text":"g"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":375},"contentChanges":[{"range":{"start":{"line":60,"character":8},"end":{"line":60,"character":8}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 584

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'dig'; did you mean 'div'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/bin/../lib/gcc/avr/7.3.0/../../../../avr/include/stdlib.h:162:14:\nnote: 'div' declared here"}]},"jsonrpc":"2.0"}Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":376},"contentChanges":[{"range":{"start":{"line":60,"character":9},"end":{"line":60,"character":9}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 358

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digit'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 466

{"jsonrpc":"2.0","id":471,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":10}},"message":"Use of undeclared identifier 'digit'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":471,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":376}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":377},"contentChanges":[{"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 359

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digita'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":378},"contentChanges":[{"range":{"start":{"line":60,"character":11},"end":{"line":60,"character":11}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 360

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digital'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 468

{"jsonrpc":"2.0","id":472,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":12},"end":{"line":60,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":12}},"message":"Use of undeclared identifier 'digital'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":472,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":378}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":379},"contentChanges":[{"range":{"start":{"line":60,"character":12},"end":{"line":60,"character":12}},"rangeLength":0,"text":"R"}]}}
>>>
Content-Length: 361

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalR'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":380},"contentChanges":[{"range":{"start":{"line":60,"character":13},"end":{"line":60,"character":13}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 551

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalRe'; did you mean 'digitalRead'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:136:5:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":381},"contentChanges":[{"range":{"start":{"line":60,"character":14},"end":{"line":60,"character":14}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 552

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":15}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalRea'; did you mean 'digitalRead'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:136:5:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":382},"contentChanges":[{"range":{"start":{"line":60,"character":15},"end":{"line":60,"character":15}},"rangeLength":0,"text":"d"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":473,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":16},"end":{"line":60,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":473,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":382}}}Content-Length: 305

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":383},"contentChanges":[{"range":{"start":{"line":60,"character":16},"end":{"line":60,"character":16}},"rangeLength":0,"text":"()"}]}}
>>>
Content-Length: 582

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":16}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'digitalRead'\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:136:5:\nnote: candidate function not viable: requires single argument 'pin', but no arguments were provided"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 286

{"jsonrpc":"2.0","id":474,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":17},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 183

{"id":474,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":475,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":475,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":383}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":384},"contentChanges":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":17}},"rangeLength":0,"text":"b"}]}}
>>>
Content-Length: 355

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'b'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":385},"contentChanges":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":18}},"rangeLength":0,"text":"u"}]}}
>>>
Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'bu'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":386},"contentChanges":[{"range":{"start":{"line":60,"character":19},"end":{"line":60,"character":19}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 357

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'but'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":387},"contentChanges":[{"range":{"start":{"line":60,"character":20},"end":{"line":60,"character":20}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 358

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'butt'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":388},"contentChanges":[{"range":{"start":{"line":60,"character":21},"end":{"line":60,"character":21}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 359

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'butto'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":389},"contentChanges":[{"range":{"start":{"line":60,"character":22},"end":{"line":60,"character":22}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 360

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'button'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 468

{"jsonrpc":"2.0","id":476,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":23},"end":{"line":60,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":23}},"message":"Use of undeclared identifier 'button'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":476,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":389}}}Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":390},"contentChanges":[{"range":{"start":{"line":60,"character":23},"end":{"line":60,"character":23}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 710

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":24}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'buttonP'; did you mean 'buttonPin'? (fix available)\n\nDistanceSensor.ino.cpp:11:5: note: 'buttonPin' declared here"},{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":13}},"severity":3,"message":"'buttonPin' declared here\n\nDistanceSensor.ino.cpp:70:18: error: use of undeclared identifier 'buttonP'; did you mean 'buttonPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 584

{"jsonrpc":"2.0","id":477,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":24},"end":{"line":60,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":24}},"message":"Use of undeclared identifier 'buttonP'; did you mean 'buttonPin'? (fix available)\n\nDistanceSensor.ino.cpp:11:5: note: 'buttonPin' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":477,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":391},"contentChanges":[{"range":{"start":{"line":60,"character":24},"end":{"line":60,"character":24}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 712

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":25}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'buttonPi'; did you mean 'buttonPin'? (fix available)\n\nDistanceSensor.ino.cpp:11:5: note: 'buttonPin' declared here"},{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":13}},"severity":3,"message":"'buttonPin' declared here\n\nDistanceSensor.ino.cpp:70:18: error: use of undeclared identifier 'buttonPi'; did you mean 'buttonPin'?"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 585

{"jsonrpc":"2.0","id":478,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":25},"end":{"line":60,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":17},"end":{"line":60,"character":25}},"message":"Use of undeclared identifier 'buttonPi'; did you mean 'buttonPin'? (fix available)\n\nDistanceSensor.ino.cpp:11:5: note: 'buttonPin' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":478,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":392},"contentChanges":[{"range":{"start":{"line":60,"character":25},"end":{"line":60,"character":25}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":479,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":26},"end":{"line":60,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":479,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 176

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":392}}}Content-Length: 630

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":393},"contentChanges":[{"range":{"start":{"line":40,"character":0},"end":{"line":54,"character":0}},"rangeLength":327,"text":"    microServo.write(0);\n    delay(150);\n    microServo.write(150);\n    delay(150);\n\n  } else if (10 < distance && distance < 20) {\n    analogWrite(redPin, 252);\n        analogWrite(greenPin, 225);\n    analogWrite(bluePin, 5);\n    microServo.write(45);\n    delay(200);\n    microServo.write(115);\n    delay(200);\n\n"}]}}Content-Length: 60

{"jsonrpc":"2.0","id":480,"method":"shutdown","params":null}
>>>
Content-Length: 40

{"id":480,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3069

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":51554,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"/Users/lalit/Desktop/Coding/Arduino/DistanceSensor","rootUri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor","name":"DistanceSensor"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1755

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","languageId":"cpp","version":1,"text":"#include <Servo.h>\n\nconst int trigPin = 11;\nconst int echoPin = 12;\n\nconst int redPin = 3;\nconst int greenPin = 5;\nconst int bluePin = 6;\nint buttonPin = 2;\n\nfloat distance = 0;\nServo microServo;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(9600);\n\n  pinMode(trigPin, OUTPUT);\n  pinMode(echoPin, INPUT);\n  pinMode(buttonPin, INPUT_PULLUP);\n\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n\n  microServo.attach(9);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  distance = getDistance();\n\n  Serial.print(distance);\n  Serial.println(\" in\");\n\n  if (distance <= 10) {\n\n    analogWrite(redPin, 255);\n    analogWrite(bluePin, 0);\n    analogWrite(greenPin, 0);\n    microServo.write(0);\n    delay(150);\n    microServo.write(150);\n    delay(150);\n\n  } else if (10 < distance && distance < 20) {\n    analogWrite(redPin, 252);\n        analogWrite(greenPin, 225);\n    analogWrite(bluePin, 5);\n    microServo.write(45);\n    delay(200);\n    microServo.write(115);\n    delay(200);\n\n  } else {\n    analogWrite(redPin, 0);\n    analogWrite(greenPin, 255);\n    analogWrite(bluePin, 0);\n  }\n\n  if(digitalRead(buttonPin))\n\n  delay(50);\n}\n\n\nfloat getDistance() {\n  float echoTime;\n  float calculatedDistance;\n\n  digitalWrite(trigPin, HIGH);\n  delayMicroseconds(10);\n  digitalWrite(trigPin, LOW);\n\n  echoTime = pulseIn(echoPin, HIGH);\n  calculatedDistance = echoTime / 148.0;\n\n  return(calculatedDistance);\n}"}}}Content-Length: 279

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":26},"end":{"line":60,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/34","percentage":11.764705882352942,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/34","percentage":14.705882352941176,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/34","percentage":14.705882352941176,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/34","percentage":17.647058823529413,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/34","percentage":17.647058823529413,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/34","percentage":20.58823529411765,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/34","percentage":20.58823529411765,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/34","percentage":23.529411764705884,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/34","percentage":26.470588235294116,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/34","percentage":26.470588235294116,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/34","percentage":29.41176470588235,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/34","percentage":29.41176470588235,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/34","percentage":32.35294117647059,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/34","percentage":32.35294117647059,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/34","percentage":35.294117647058826,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/34","percentage":35.294117647058826,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/34","percentage":38.23529411764706,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/34","percentage":38.23529411764706,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/34","percentage":41.1764705882353,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/34","percentage":41.1764705882353,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/34","percentage":44.11764705882353,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/34","percentage":44.11764705882353,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/34","percentage":47.05882352941177,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/34","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/34","percentage":52.94117647058823,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/34","percentage":52.94117647058823,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/34","percentage":55.88235294117647,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/34","percentage":58.8235294117647,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/34","percentage":58.8235294117647,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/34","percentage":61.76470588235294,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/34","percentage":61.76470588235294,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/34","percentage":64.70588235294117,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/34","percentage":64.70588235294117,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/34","percentage":67.6470588235294,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/34","percentage":67.6470588235294,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/34","percentage":70.58823529411765,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/34","percentage":70.58823529411765,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/34","percentage":73.52941176470588,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/34","percentage":73.52941176470588,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/34","percentage":76.47058823529412,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/34","percentage":76.47058823529412,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/34","percentage":79.41176470588235,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/34","percentage":82.3529411764706,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":3}}}
>>>
Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/34","percentage":85.29411764705883,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/34","percentage":88.23529411764706,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/34","percentage":91.17647058823529,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/34","percentage":94.11764705882354,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/34","percentage":97.05882352941177,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":2}}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":2}}}
>>>
Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 363

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":2},"contentChanges":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":28}},"rangeLength":26,"text":"if (digitalRead(firstKeyPin) == LOW) {\n    blue();      \n  }"}]}}
>>>
Content-Length: 549

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'firstKeyPin'"},{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":3},"end":{"line":62,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":6,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":2}}}Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":2}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":29}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 36

{"id":7,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 549

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'firstKeyPin'"},{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 471

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":29}},"message":"Use of undeclared identifier 'firstKeyPin'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 397

{"id":8,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":60,"character":18},"end":{"line":60,"character":29}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":3},"contentChanges":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":29}},"rangeLength":11,"text":"b"}]}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":4},"contentChanges":[{"range":{"start":{"line":60,"character":19},"end":{"line":60,"character":19}},"rangeLength":0,"text":"u"}]}}
>>>
Content-Length: 540

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'bu'"},{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":5},"contentChanges":[{"range":{"start":{"line":60,"character":20},"end":{"line":60,"character":20}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 541

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'but'"},{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":6},"contentChanges":[{"range":{"start":{"line":60,"character":21},"end":{"line":60,"character":21}},"rangeLength":0,"text":"t"}]}}
>>>
Content-Length: 542

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'butt'"},{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 464

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":22},"end":{"line":60,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":22}},"message":"Use of undeclared identifier 'butt'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 174

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":6}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":7},"contentChanges":[{"range":{"start":{"line":60,"character":22},"end":{"line":60,"character":22}},"rangeLength":0,"text":"o"}]}}
>>>
Content-Length: 543

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'butto'"},{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":8},"contentChanges":[{"range":{"start":{"line":60,"character":23},"end":{"line":60,"character":23}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 544

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'button'"},{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 467

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":24},"end":{"line":60,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":24}},"message":"Use of undeclared identifier 'button'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":9},"contentChanges":[{"range":{"start":{"line":60,"character":24},"end":{"line":60,"character":24}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 894

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":25}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'buttonP'; did you mean 'buttonPin'? (fix available)\n\nDistanceSensor.ino.cpp:11:5: note: 'buttonPin' declared here"},{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":13}},"severity":3,"message":"'buttonPin' declared here\n\nDistanceSensor.ino.cpp:70:19: error: use of undeclared identifier 'buttonP'; did you mean 'buttonPin'?"},{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":10},"contentChanges":[{"range":{"start":{"line":60,"character":25},"end":{"line":60,"character":25}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 896

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":18},"end":{"line":60,"character":26}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'buttonPi'; did you mean 'buttonPin'? (fix available)\n\nDistanceSensor.ino.cpp:11:5: note: 'buttonPin' declared here"},{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":13}},"severity":3,"message":"'buttonPin' declared here\n\nDistanceSensor.ino.cpp:70:19: error: use of undeclared identifier 'buttonPi'; did you mean 'buttonPin'?"},{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":11},"contentChanges":[{"range":{"start":{"line":60,"character":26},"end":{"line":60,"character":26}},"rangeLength":0,"text":"n"}]}}
>>>
Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":27},"end":{"line":60,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":11}}}Content-Length: 211

{"jsonrpc":"2.0","id":12,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":14}}}
>>>
Content-Length: 230

{"id":12,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","range":{"start":{"line":164,"character":4},"end":{"line":164,"character":15}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5578

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out &= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) && defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) && defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out &= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) & bit) return HIGH;\n\treturn LOW;\n}\n"}}}Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}}
>>>
Content-Length: 201

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":11}}}Content-Length: 217

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":5}}}
>>>
Content-Length: 37

{"id":13,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 461

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"message":"Use of undeclared identifier 'blue'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 396

{"id":14,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":5}}}
>>>
Content-Length: 39

{"id":15,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 481

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"message":"Use of undeclared identifier 'blue'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 396

{"id":16,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":5}}}
>>>
Content-Length: 39

{"id":17,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":5}}}
>>>
Content-Length: 39

{"id":18,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":5}}}
>>>
Content-Length: 39

{"id":19,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":10},"end":{"line":61,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":20,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 481

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"message":"Use of undeclared identifier 'blue'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 396

{"id":21,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":22,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":5}}}
>>>
Content-Length: 39

{"id":22,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":11},"end":{"line":61,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":23,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 481

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"message":"Use of undeclared identifier 'blue'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 396

{"id":24,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":12},"contentChanges":[{"range":{"start":{"line":61,"character":10},"end":{"line":61,"character":11}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 556

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"},{"range":{"start":{"line":62,"character":2},"end":{"line":62,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":13},"contentChanges":[{"range":{"start":{"line":61,"character":9},"end":{"line":61,"character":10}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 724

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":2},"end":{"line":62,"character":3}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":81,"character":0},"end":{"line":81,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'\n\nDistanceSensor.ino.cpp:70:38: note: to match this '{'"},{"range":{"start":{"line":60,"character":37},"end":{"line":60,"character":38}},"severity":3,"message":"To match this '{'\n\nDistanceSensor.ino.cpp:91:1: error: expected '}'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":14},"contentChanges":[{"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":9}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blue'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":15},"contentChanges":[{"range":{"start":{"line":61,"character":7},"end":{"line":61,"character":8}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 355

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'blu'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":16},"contentChanges":[{"range":{"start":{"line":61,"character":6},"end":{"line":61,"character":7}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'bl'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":17},"contentChanges":[{"range":{"start":{"line":61,"character":5},"end":{"line":61,"character":6}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'b'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":18},"contentChanges":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":5}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":5}}}
>>>
Content-Length: 39

{"id":25,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":18}}}Content-Length: 211

{"jsonrpc":"2.0","id":26,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":47,"character":26}}}
>>>
Content-Length: 199

{"id":26,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":6,"character":10},"end":{"line":6,"character":18}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":27,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":48,"character":26}}}
>>>
Content-Length: 229

{"id":27,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":26},"end":{"line":51,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":28,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":5},"end":{"line":51,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":29,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":31,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":7}}}
>>>
Content-Length: 200

{"id":31,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":11,"character":6},"end":{"line":11,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":19},"contentChanges":[{"range":{"start":{"line":61,"character":10},"end":{"line":61,"character":10}},"rangeLength":0,"text":"microServo.write(115);"}]}}Content-Length: 211

{"jsonrpc":"2.0","id":32,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":15}}}
>>>
Content-Length: 200

{"id":32,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":11,"character":6},"end":{"line":11,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":33,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":15}}}
>>>
Content-Length: 251

{"id":33,"result":{"contents":{"kind":"markdown","value":"### variable `microServo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo microServo\n```"},"range":{"start":{"line":70,"character":10},"end":{"line":70,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":32},"end":{"line":61,"character":32}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":34,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":15}}}
>>>
Content-Length: 251

{"id":35,"result":{"contents":{"kind":"markdown","value":"### variable `microServo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo microServo\n```"},"range":{"start":{"line":70,"character":10},"end":{"line":70,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":19}}}Content-Length: 211

{"jsonrpc":"2.0","id":36,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":27}}}
>>>
Content-Length: 207

{"id":36,"result":[{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","range":{"start":{"line":263,"character":12},"end":{"line":263,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 11436

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","languageId":"cpp","version":1,"text":"/*\n Servo.cpp - Interrupt driven Servo library for Arduino using 16 bit timers- Version 2\n Copyright (c) 2009 Michael Margolis.  All right reserved.\n\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\n#if defined(ARDUINO_ARCH_AVR)\n\n#include <avr/interrupt.h>\n#include <Arduino.h>\n\n#include \"Servo.h\"\n\n#define usToTicks(_us)    (( clockCyclesPerMicrosecond()* _us) / 8)     // converts microseconds to tick (assumes prescale of 8)  // 12 Aug 2009\n#define ticksToUs(_ticks) (( (unsigned)_ticks * 8)/ clockCyclesPerMicrosecond() ) // converts from ticks back to microseconds\n\n\n#define TRIM_DURATION       2                               // compensation ticks to trim adjust for digitalWrite delays // 12 August 2009\n\n//#define NBR_TIMERS        (MAX_SERVOS / SERVOS_PER_TIMER)\n\nstatic servo_t servos[MAX_SERVOS];                          // static array of servo structures\nstatic volatile int8_t Channel[_Nbr_16timers ];             // counter for the servo being pulsed for each timer (or -1 if refresh interval)\n\nuint8_t ServoCount = 0;                                     // the total number of attached servos\n\n\n// convenience macros\n#define SERVO_INDEX_TO_TIMER(_servo_nbr) ((timer16_Sequence_t)(_servo_nbr / SERVOS_PER_TIMER)) // returns the timer controlling this servo\n#define SERVO_INDEX_TO_CHANNEL(_servo_nbr) (_servo_nbr % SERVOS_PER_TIMER)       // returns the index of the servo on this timer\n#define SERVO_INDEX(_timer,_channel)  ((_timer*SERVOS_PER_TIMER) + _channel)     // macro to access servo index by timer and channel\n#define SERVO(_timer,_channel)  (servos[SERVO_INDEX(_timer,_channel)])            // macro to access servo class by timer and channel\n\n#define SERVO_MIN() (MIN_PULSE_WIDTH - this->min * 4)  // minimum value in uS for this servo\n#define SERVO_MAX() (MAX_PULSE_WIDTH - this->max * 4)  // maximum value in uS for this servo\n\n/************ static functions common to all instances ***********************/\n\nstatic inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)\n{\n  if( Channel[timer] < 0 )\n    *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer\n  else{\n    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated\n  }\n\n  Channel[timer]++;    // increment to the next channel\n  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {\n    *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;\n    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high\n  }\n  else {\n    // finished all channels so wait for the refresh period to expire before starting over\n    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed\n      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);\n    else\n      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed\n    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel\n  }\n}\n\n#ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform\n// Interrupt handlers for Arduino\n#if defined(_useTimer1)\nSIGNAL (TIMER1_COMPA_vect)\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n\n#if defined(_useTimer3)\nSIGNAL (TIMER3_COMPA_vect)\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n\n#if defined(_useTimer4)\nSIGNAL (TIMER4_COMPA_vect)\n{\n  handle_interrupts(_timer4, &TCNT4, &OCR4A);\n}\n#endif\n\n#if defined(_useTimer5)\nSIGNAL (TIMER5_COMPA_vect)\n{\n  handle_interrupts(_timer5, &TCNT5, &OCR5A);\n}\n#endif\n\n#elif defined WIRING\n// Interrupt handlers for Wiring\n#if defined(_useTimer1)\nvoid Timer1Service()\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n#if defined(_useTimer3)\nvoid Timer3Service()\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n#endif\n\n\nstatic void initISR(timer16_Sequence_t timer)\n{\n#if defined (_useTimer1)\n  if(timer == _timer1) {\n    TCCR1A = 0;             // normal counting mode\n    TCCR1B = _BV(CS11);     // set prescaler of 8\n    TCNT1 = 0;              // clear the timer count\n#if defined(__AVR_ATmega8__)|| defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF1A);      // clear any pending interrupts;\n    TIMSK |=  _BV(OCIE1A) ;  // enable the output compare interrupt\n#else\n    // here if not ATmega8 or ATmega128\n    TIFR1 |= _BV(OCF1A);     // clear any pending interrupts;\n    TIMSK1 |=  _BV(OCIE1A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER1OUTCOMPAREA_INT, Timer1Service);\n#endif\n  }\n#endif\n\n#if defined (_useTimer3)\n  if(timer == _timer3) {\n    TCCR3A = 0;             // normal counting mode\n    TCCR3B = _BV(CS31);     // set prescaler of 8\n    TCNT3 = 0;              // clear the timer count\n#if defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF3A);     // clear any pending interrupts;\n\tETIMSK |= _BV(OCIE3A);  // enable the output compare interrupt\n#else\n    TIFR3 = _BV(OCF3A);     // clear any pending interrupts;\n    TIMSK3 =  _BV(OCIE3A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER3OUTCOMPAREA_INT, Timer3Service);  // for Wiring platform only\n#endif\n  }\n#endif\n\n#if defined (_useTimer4)\n  if(timer == _timer4) {\n    TCCR4A = 0;             // normal counting mode\n    TCCR4B = _BV(CS41);     // set prescaler of 8\n    TCNT4 = 0;              // clear the timer count\n    TIFR4 = _BV(OCF4A);     // clear any pending interrupts;\n    TIMSK4 =  _BV(OCIE4A) ; // enable the output compare interrupt\n  }\n#endif\n\n#if defined (_useTimer5)\n  if(timer == _timer5) {\n    TCCR5A = 0;             // normal counting mode\n    TCCR5B = _BV(CS51);     // set prescaler of 8\n    TCNT5 = 0;              // clear the timer count\n    TIFR5 = _BV(OCF5A);     // clear any pending interrupts;\n    TIMSK5 =  _BV(OCIE5A) ; // enable the output compare interrupt\n  }\n#endif\n}\n\nstatic void finISR(timer16_Sequence_t timer)\n{\n    //disable use of the given timer\n#if defined WIRING   // Wiring\n  if(timer == _timer1) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK1 &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #else\n    TIMSK &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #endif\n    timerDetach(TIMER1OUTCOMPAREA_INT);\n  }\n  else if(timer == _timer3) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK3 &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #else\n    ETIMSK &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #endif\n    timerDetach(TIMER3OUTCOMPAREA_INT);\n  }\n#else\n  //For arduino - in future: call here to a currently undefined function to reset the timer\n  (void) timer;  // squash \"unused parameter 'timer' [-Wunused-parameter]\" warning\n#endif\n}\n\nstatic boolean isTimerActive(timer16_Sequence_t timer)\n{\n  // returns true if any servo is active on this timer\n  for(uint8_t channel=0; channel < SERVOS_PER_TIMER; channel++) {\n    if(SERVO(timer,channel).Pin.isActive == true)\n      return true;\n  }\n  return false;\n}\n\n\n/****************** end of static functions ******************************/\n\nServo::Servo()\n{\n  if( ServoCount < MAX_SERVOS) {\n    this->servoIndex = ServoCount++;                    // assign a servo index to this instance\n\tservos[this->servoIndex].ticks = usToTicks(DEFAULT_PULSE_WIDTH);   // store default values  - 12 Aug 2009\n  }\n  else\n    this->servoIndex = INVALID_SERVO ;  // too many servos\n}\n\nuint8_t Servo::attach(int pin)\n{\n  return this->attach(pin, MIN_PULSE_WIDTH, MAX_PULSE_WIDTH);\n}\n\nuint8_t Servo::attach(int pin, int min, int max)\n{\n  if(this->servoIndex < MAX_SERVOS ) {\n    pinMode( pin, OUTPUT) ;                                   // set servo pin to output\n    servos[this->servoIndex].Pin.nbr = pin;\n    // todo min/max check: abs(min - MIN_PULSE_WIDTH) /4 < 128\n    this->min  = (MIN_PULSE_WIDTH - min)/4; //resolution of min/max is 4 uS\n    this->max  = (MAX_PULSE_WIDTH - max)/4;\n    // initialize the timer if it has not already been initialized\n    timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n    if(isTimerActive(timer) == false)\n      initISR(timer);\n    servos[this->servoIndex].Pin.isActive = true;  // this must be set after the check for isTimerActive\n  }\n  return this->servoIndex ;\n}\n\nvoid Servo::detach()\n{\n  servos[this->servoIndex].Pin.isActive = false;\n  timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n  if(isTimerActive(timer) == false) {\n    finISR(timer);\n  }\n}\n\nvoid Servo::write(int value)\n{\n  if(value < MIN_PULSE_WIDTH)\n  {  // treat values less than 544 as angles in degrees (valid values in microseconds are handled as microseconds)\n    if(value < 0) value = 0;\n    if(value > 180) value = 180;\n    value = map(value, 0, 180, SERVO_MIN(),  SERVO_MAX());\n  }\n  this->writeMicroseconds(value);\n}\n\nvoid Servo::writeMicroseconds(int value)\n{\n  // calculate and store the values for the given channel\n  byte channel = this->servoIndex;\n  if( (channel < MAX_SERVOS) )   // ensure channel is valid\n  {\n    if( value < SERVO_MIN() )          // ensure pulse width is valid\n      value = SERVO_MIN();\n    else if( value > SERVO_MAX() )\n      value = SERVO_MAX();\n\n    value = value - TRIM_DURATION;\n    value = usToTicks(value);  // convert to ticks after compensating for interrupt overhead - 12 Aug 2009\n\n    uint8_t oldSREG = SREG;\n    cli();\n    servos[channel].ticks = value;\n    SREG = oldSREG;\n  }\n}\n\nint Servo::read() // return the value as degrees\n{\n  return  map( this->readMicroseconds()+1, SERVO_MIN(), SERVO_MAX(), 0, 180);\n}\n\nint Servo::readMicroseconds()\n{\n  unsigned int pulsewidth;\n  if( this->servoIndex != INVALID_SERVO )\n    pulsewidth = ticksToUs(servos[this->servoIndex].ticks)  + TRIM_DURATION ;   // 12 aug 2009\n  else\n    pulsewidth  = 0;\n\n  return pulsewidth;\n}\n\nbool Servo::attached()\n{\n  return servos[this->servoIndex].Pin.isActive ;\n}\n\n#endif // ARDUINO_ARCH_AVR\n\n"}}}Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp"}}}
>>>
Content-Length: 177

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":37,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":27}}}
>>>
Content-Length: 39

{"id":37,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":19}}}Content-Length: 206

{"jsonrpc":"2.0","id":38,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":27}}}
>>>
Content-Length: 39

{"id":38,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":28}}}
>>>
Content-Length: 37

{"id":39,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":27},"end":{"line":61,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 398

{"id":40,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","selection":{"start":{"line":61,"character":27},"end":{"line":61,"character":30}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":41,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":29}}}
>>>
Content-Length: 39

{"id":41,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":20},"contentChanges":[{"range":{"start":{"line":61,"character":27},"end":{"line":61,"character":30}},"rangeLength":3,"text":"0"}]}}Content-Length: 280

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":28},"end":{"line":61,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":42,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":20}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":20}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":20}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":20}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":20}}}Content-Length: 211

{"jsonrpc":"2.0","id":43,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":19}}}
>>>
Content-Length: 198

{"id":43,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":8,"character":4},"end":{"line":8,"character":13}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":44,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":17}}}
>>>
Content-Length: 230

{"id":44,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","range":{"start":{"line":164,"character":4},"end":{"line":164,"character":15}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5578

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out &= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) && defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) && defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out &= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) & bit) return HIGH;\n\treturn LOW;\n}\n"}}}Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}}
>>>
Content-Length: 201

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":45,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":8}}}
>>>
Content-Length: 285

{"id":45,"result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\n→ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"start":{"line":69,"character":6},"end":{"line":69,"character":17}}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":46,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":8}}}
>>>
Content-Length: 39

{"id":46,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":47,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":9}}}
>>>
Content-Length: 39

{"id":47,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":10}}}
>>>
Content-Length: 653

{"id":48,"result":[{"range":{"start":{"line":11,"character":6},"end":{"line":11,"character":16}},"kind":1},{"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":12}},"kind":1},{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":14}},"kind":1},{"range":{"start":{"line":42,"character":4},"end":{"line":42,"character":14}},"kind":1},{"range":{"start":{"line":49,"character":4},"end":{"line":49,"character":14}},"kind":1},{"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":14}},"kind":1},{"range":{"start":{"line":61,"character":10},"end":{"line":61,"character":20}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":10},"end":{"line":61,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":49,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":21},"contentChanges":[{"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":10}},"rangeLength":2,"text":""}]}}Content-Length: 278

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":50,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":22},"contentChanges":[{"range":{"start":{"line":61,"character":6},"end":{"line":61,"character":8}},"rangeLength":2,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":50}}Content-Length: 278

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":6},"end":{"line":61,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":51,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":23},"contentChanges":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":6}},"rangeLength":2,"text":""}]}}Content-Length: 278

{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":52,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":23}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":23}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":23}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":23}}}Content-Length: 280

{"jsonrpc":"2.0","id":53,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":26},"end":{"line":51,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":53,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":0},"end":{"line":52,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":54,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":55,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":51,"character":26},"end":{"line":51,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":55,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":23}}}Content-Length: 211

{"jsonrpc":"2.0","id":56,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":14}}}
>>>
Content-Length: 207

{"id":56,"result":[{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","range":{"start":{"line":263,"character":12},"end":{"line":263,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 11436

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","languageId":"cpp","version":1,"text":"/*\n Servo.cpp - Interrupt driven Servo library for Arduino using 16 bit timers- Version 2\n Copyright (c) 2009 Michael Margolis.  All right reserved.\n\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\n#if defined(ARDUINO_ARCH_AVR)\n\n#include <avr/interrupt.h>\n#include <Arduino.h>\n\n#include \"Servo.h\"\n\n#define usToTicks(_us)    (( clockCyclesPerMicrosecond()* _us) / 8)     // converts microseconds to tick (assumes prescale of 8)  // 12 Aug 2009\n#define ticksToUs(_ticks) (( (unsigned)_ticks * 8)/ clockCyclesPerMicrosecond() ) // converts from ticks back to microseconds\n\n\n#define TRIM_DURATION       2                               // compensation ticks to trim adjust for digitalWrite delays // 12 August 2009\n\n//#define NBR_TIMERS        (MAX_SERVOS / SERVOS_PER_TIMER)\n\nstatic servo_t servos[MAX_SERVOS];                          // static array of servo structures\nstatic volatile int8_t Channel[_Nbr_16timers ];             // counter for the servo being pulsed for each timer (or -1 if refresh interval)\n\nuint8_t ServoCount = 0;                                     // the total number of attached servos\n\n\n// convenience macros\n#define SERVO_INDEX_TO_TIMER(_servo_nbr) ((timer16_Sequence_t)(_servo_nbr / SERVOS_PER_TIMER)) // returns the timer controlling this servo\n#define SERVO_INDEX_TO_CHANNEL(_servo_nbr) (_servo_nbr % SERVOS_PER_TIMER)       // returns the index of the servo on this timer\n#define SERVO_INDEX(_timer,_channel)  ((_timer*SERVOS_PER_TIMER) + _channel)     // macro to access servo index by timer and channel\n#define SERVO(_timer,_channel)  (servos[SERVO_INDEX(_timer,_channel)])            // macro to access servo class by timer and channel\n\n#define SERVO_MIN() (MIN_PULSE_WIDTH - this->min * 4)  // minimum value in uS for this servo\n#define SERVO_MAX() (MAX_PULSE_WIDTH - this->max * 4)  // maximum value in uS for this servo\n\n/************ static functions common to all instances ***********************/\n\nstatic inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)\n{\n  if( Channel[timer] < 0 )\n    *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer\n  else{\n    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated\n  }\n\n  Channel[timer]++;    // increment to the next channel\n  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {\n    *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;\n    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high\n  }\n  else {\n    // finished all channels so wait for the refresh period to expire before starting over\n    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed\n      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);\n    else\n      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed\n    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel\n  }\n}\n\n#ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform\n// Interrupt handlers for Arduino\n#if defined(_useTimer1)\nSIGNAL (TIMER1_COMPA_vect)\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n\n#if defined(_useTimer3)\nSIGNAL (TIMER3_COMPA_vect)\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n\n#if defined(_useTimer4)\nSIGNAL (TIMER4_COMPA_vect)\n{\n  handle_interrupts(_timer4, &TCNT4, &OCR4A);\n}\n#endif\n\n#if defined(_useTimer5)\nSIGNAL (TIMER5_COMPA_vect)\n{\n  handle_interrupts(_timer5, &TCNT5, &OCR5A);\n}\n#endif\n\n#elif defined WIRING\n// Interrupt handlers for Wiring\n#if defined(_useTimer1)\nvoid Timer1Service()\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n#if defined(_useTimer3)\nvoid Timer3Service()\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n#endif\n\n\nstatic void initISR(timer16_Sequence_t timer)\n{\n#if defined (_useTimer1)\n  if(timer == _timer1) {\n    TCCR1A = 0;             // normal counting mode\n    TCCR1B = _BV(CS11);     // set prescaler of 8\n    TCNT1 = 0;              // clear the timer count\n#if defined(__AVR_ATmega8__)|| defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF1A);      // clear any pending interrupts;\n    TIMSK |=  _BV(OCIE1A) ;  // enable the output compare interrupt\n#else\n    // here if not ATmega8 or ATmega128\n    TIFR1 |= _BV(OCF1A);     // clear any pending interrupts;\n    TIMSK1 |=  _BV(OCIE1A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER1OUTCOMPAREA_INT, Timer1Service);\n#endif\n  }\n#endif\n\n#if defined (_useTimer3)\n  if(timer == _timer3) {\n    TCCR3A = 0;             // normal counting mode\n    TCCR3B = _BV(CS31);     // set prescaler of 8\n    TCNT3 = 0;              // clear the timer count\n#if defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF3A);     // clear any pending interrupts;\n\tETIMSK |= _BV(OCIE3A);  // enable the output compare interrupt\n#else\n    TIFR3 = _BV(OCF3A);     // clear any pending interrupts;\n    TIMSK3 =  _BV(OCIE3A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER3OUTCOMPAREA_INT, Timer3Service);  // for Wiring platform only\n#endif\n  }\n#endif\n\n#if defined (_useTimer4)\n  if(timer == _timer4) {\n    TCCR4A = 0;             // normal counting mode\n    TCCR4B = _BV(CS41);     // set prescaler of 8\n    TCNT4 = 0;              // clear the timer count\n    TIFR4 = _BV(OCF4A);     // clear any pending interrupts;\n    TIMSK4 =  _BV(OCIE4A) ; // enable the output compare interrupt\n  }\n#endif\n\n#if defined (_useTimer5)\n  if(timer == _timer5) {\n    TCCR5A = 0;             // normal counting mode\n    TCCR5B = _BV(CS51);     // set prescaler of 8\n    TCNT5 = 0;              // clear the timer count\n    TIFR5 = _BV(OCF5A);     // clear any pending interrupts;\n    TIMSK5 =  _BV(OCIE5A) ; // enable the output compare interrupt\n  }\n#endif\n}\n\nstatic void finISR(timer16_Sequence_t timer)\n{\n    //disable use of the given timer\n#if defined WIRING   // Wiring\n  if(timer == _timer1) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK1 &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #else\n    TIMSK &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #endif\n    timerDetach(TIMER1OUTCOMPAREA_INT);\n  }\n  else if(timer == _timer3) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK3 &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #else\n    ETIMSK &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #endif\n    timerDetach(TIMER3OUTCOMPAREA_INT);\n  }\n#else\n  //For arduino - in future: call here to a currently undefined function to reset the timer\n  (void) timer;  // squash \"unused parameter 'timer' [-Wunused-parameter]\" warning\n#endif\n}\n\nstatic boolean isTimerActive(timer16_Sequence_t timer)\n{\n  // returns true if any servo is active on this timer\n  for(uint8_t channel=0; channel < SERVOS_PER_TIMER; channel++) {\n    if(SERVO(timer,channel).Pin.isActive == true)\n      return true;\n  }\n  return false;\n}\n\n\n/****************** end of static functions ******************************/\n\nServo::Servo()\n{\n  if( ServoCount < MAX_SERVOS) {\n    this->servoIndex = ServoCount++;                    // assign a servo index to this instance\n\tservos[this->servoIndex].ticks = usToTicks(DEFAULT_PULSE_WIDTH);   // store default values  - 12 Aug 2009\n  }\n  else\n    this->servoIndex = INVALID_SERVO ;  // too many servos\n}\n\nuint8_t Servo::attach(int pin)\n{\n  return this->attach(pin, MIN_PULSE_WIDTH, MAX_PULSE_WIDTH);\n}\n\nuint8_t Servo::attach(int pin, int min, int max)\n{\n  if(this->servoIndex < MAX_SERVOS ) {\n    pinMode( pin, OUTPUT) ;                                   // set servo pin to output\n    servos[this->servoIndex].Pin.nbr = pin;\n    // todo min/max check: abs(min - MIN_PULSE_WIDTH) /4 < 128\n    this->min  = (MIN_PULSE_WIDTH - min)/4; //resolution of min/max is 4 uS\n    this->max  = (MAX_PULSE_WIDTH - max)/4;\n    // initialize the timer if it has not already been initialized\n    timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n    if(isTimerActive(timer) == false)\n      initISR(timer);\n    servos[this->servoIndex].Pin.isActive = true;  // this must be set after the check for isTimerActive\n  }\n  return this->servoIndex ;\n}\n\nvoid Servo::detach()\n{\n  servos[this->servoIndex].Pin.isActive = false;\n  timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n  if(isTimerActive(timer) == false) {\n    finISR(timer);\n  }\n}\n\nvoid Servo::write(int value)\n{\n  if(value < MIN_PULSE_WIDTH)\n  {  // treat values less than 544 as angles in degrees (valid values in microseconds are handled as microseconds)\n    if(value < 0) value = 0;\n    if(value > 180) value = 180;\n    value = map(value, 0, 180, SERVO_MIN(),  SERVO_MAX());\n  }\n  this->writeMicroseconds(value);\n}\n\nvoid Servo::writeMicroseconds(int value)\n{\n  // calculate and store the values for the given channel\n  byte channel = this->servoIndex;\n  if( (channel < MAX_SERVOS) )   // ensure channel is valid\n  {\n    if( value < SERVO_MIN() )          // ensure pulse width is valid\n      value = SERVO_MIN();\n    else if( value > SERVO_MAX() )\n      value = SERVO_MAX();\n\n    value = value - TRIM_DURATION;\n    value = usToTicks(value);  // convert to ticks after compensating for interrupt overhead - 12 Aug 2009\n\n    uint8_t oldSREG = SREG;\n    cli();\n    servos[channel].ticks = value;\n    SREG = oldSREG;\n  }\n}\n\nint Servo::read() // return the value as degrees\n{\n  return  map( this->readMicroseconds()+1, SERVO_MIN(), SERVO_MAX(), 0, 180);\n}\n\nint Servo::readMicroseconds()\n{\n  unsigned int pulsewidth;\n  if( this->servoIndex != INVALID_SERVO )\n    pulsewidth = ticksToUs(servos[this->servoIndex].ticks)  + TRIM_DURATION ;   // 12 aug 2009\n  else\n    pulsewidth  = 0;\n\n  return pulsewidth;\n}\n\nbool Servo::attached()\n{\n  return servos[this->servoIndex].Pin.isActive ;\n}\n\n#endif // ARDUINO_ARCH_AVR\n\n"}}}Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp"}}}
>>>
Content-Length: 177

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":57,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":0}}}
>>>
Content-Length: 39

{"id":57,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":5}}}
>>>
Content-Length: 39

{"id":58,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":59,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":17}}}
>>>
Content-Length: 230

{"id":59,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","range":{"start":{"line":164,"character":4},"end":{"line":164,"character":15}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 5578

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out &= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg &= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) && defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) && defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out &= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) & bit) return HIGH;\n\treturn LOW;\n}\n"}}}Content-Length: 191

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}}
>>>
Content-Length: 201

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":60,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":38},"end":{"line":60,"character":38}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":60,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":61,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":34}}}
>>>
Content-Length: 210

{"id":61,"result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"start":{"line":69,"character":32},"end":{"line":69,"character":35}}},"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":62,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":35}}}
>>>
Content-Length: 37

{"id":62,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":35},"end":{"line":60,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 414

{"id":63,"result":[{"title":"Expand macro 'LOW'","kind":"refactor","command":{"title":"Expand macro 'LOW'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server140038214/sketch/DistanceSensor.ino.cpp","selection":{"start":{"line":69,"character":35},"end":{"line":69,"character":35}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":64,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":31}}}
>>>
Content-Length: 39

{"id":64,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":31},"end":{"line":60,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":65,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":24},"contentChanges":[{"range":{"start":{"line":60,"character":31},"end":{"line":60,"character":31}},"rangeLength":0,"text":"="}]}}
>>>
Content-Length: 343

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":31},"end":{"line":60,"character":32}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 450

{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":32},"end":{"line":60,"character":32}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":31},"end":{"line":60,"character":32}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":66,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":24}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":24}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":25},"contentChanges":[{"range":{"start":{"line":60,"character":31},"end":{"line":60,"character":32}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":31},"end":{"line":60,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":67,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":25}}}Content-Length: 280

{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":64,"character":12},"end":{"line":64,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":68,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":69,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":3},"end":{"line":62,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":69,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":70,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":25}}}
>>>
Content-Length: 298

{"id":70,"result":{"contents":{"kind":"markdown","value":"### variable `buttonPin`  \n\n---\nType: `int`  \nValue = `2`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint buttonPin = 2\n```"},"range":{"start":{"line":69,"character":18},"end":{"line":69,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":71,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":25}}}
>>>
Content-Length: 198

{"id":71,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":8,"character":4},"end":{"line":8,"character":13}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":72,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":22}}}
>>>
Content-Length: 298

{"id":72,"result":{"contents":{"kind":"markdown","value":"### variable `buttonPin`  \n\n---\nType: `int`  \nValue = `2`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint buttonPin = 2\n```"},"range":{"start":{"line":69,"character":18},"end":{"line":69,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 209

{"jsonrpc":"2.0","id":73,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":5,"character":8}}}
>>>
Content-Length: 37

{"id":73,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":74,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":8,"character":10}}}
>>>
Content-Length: 198

{"id":74,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":8,"character":4},"end":{"line":8,"character":13}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":75,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":8,"character":9}}}
>>>
Content-Length: 257

{"id":75,"result":{"contents":{"kind":"markdown","value":"### variable `buttonPin`  \n\n---\nType: `int`  \nValue = `2`  \n\n---\n```cpp\nint buttonPin = 2\n```"},"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":13}}},"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":76,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":8,"character":16}}}
>>>
Content-Length: 37

{"id":76,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":77,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":8,"character":16}}}
>>>
Content-Length: 37

{"id":77,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":78,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":8,"character":17}}}
>>>
Content-Length: 39

{"id":78,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":79,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":8,"character":17}}}
>>>
Content-Length: 37

{"id":79,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":80,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":16}}}
>>>
Content-Length: 300

{"id":80,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":60,"character":15},"end":{"line":60,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":81,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":24}}}
>>>
Content-Length: 207

{"id":81,"result":[{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","range":{"start":{"line":263,"character":12},"end":{"line":263,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":25}}}Content-Length: 11436

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","languageId":"cpp","version":1,"text":"/*\n Servo.cpp - Interrupt driven Servo library for Arduino using 16 bit timers- Version 2\n Copyright (c) 2009 Michael Margolis.  All right reserved.\n\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\n#if defined(ARDUINO_ARCH_AVR)\n\n#include <avr/interrupt.h>\n#include <Arduino.h>\n\n#include \"Servo.h\"\n\n#define usToTicks(_us)    (( clockCyclesPerMicrosecond()* _us) / 8)     // converts microseconds to tick (assumes prescale of 8)  // 12 Aug 2009\n#define ticksToUs(_ticks) (( (unsigned)_ticks * 8)/ clockCyclesPerMicrosecond() ) // converts from ticks back to microseconds\n\n\n#define TRIM_DURATION       2                               // compensation ticks to trim adjust for digitalWrite delays // 12 August 2009\n\n//#define NBR_TIMERS        (MAX_SERVOS / SERVOS_PER_TIMER)\n\nstatic servo_t servos[MAX_SERVOS];                          // static array of servo structures\nstatic volatile int8_t Channel[_Nbr_16timers ];             // counter for the servo being pulsed for each timer (or -1 if refresh interval)\n\nuint8_t ServoCount = 0;                                     // the total number of attached servos\n\n\n// convenience macros\n#define SERVO_INDEX_TO_TIMER(_servo_nbr) ((timer16_Sequence_t)(_servo_nbr / SERVOS_PER_TIMER)) // returns the timer controlling this servo\n#define SERVO_INDEX_TO_CHANNEL(_servo_nbr) (_servo_nbr % SERVOS_PER_TIMER)       // returns the index of the servo on this timer\n#define SERVO_INDEX(_timer,_channel)  ((_timer*SERVOS_PER_TIMER) + _channel)     // macro to access servo index by timer and channel\n#define SERVO(_timer,_channel)  (servos[SERVO_INDEX(_timer,_channel)])            // macro to access servo class by timer and channel\n\n#define SERVO_MIN() (MIN_PULSE_WIDTH - this->min * 4)  // minimum value in uS for this servo\n#define SERVO_MAX() (MAX_PULSE_WIDTH - this->max * 4)  // maximum value in uS for this servo\n\n/************ static functions common to all instances ***********************/\n\nstatic inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)\n{\n  if( Channel[timer] < 0 )\n    *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer\n  else{\n    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated\n  }\n\n  Channel[timer]++;    // increment to the next channel\n  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {\n    *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;\n    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high\n  }\n  else {\n    // finished all channels so wait for the refresh period to expire before starting over\n    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed\n      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);\n    else\n      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed\n    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel\n  }\n}\n\n#ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform\n// Interrupt handlers for Arduino\n#if defined(_useTimer1)\nSIGNAL (TIMER1_COMPA_vect)\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n\n#if defined(_useTimer3)\nSIGNAL (TIMER3_COMPA_vect)\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n\n#if defined(_useTimer4)\nSIGNAL (TIMER4_COMPA_vect)\n{\n  handle_interrupts(_timer4, &TCNT4, &OCR4A);\n}\n#endif\n\n#if defined(_useTimer5)\nSIGNAL (TIMER5_COMPA_vect)\n{\n  handle_interrupts(_timer5, &TCNT5, &OCR5A);\n}\n#endif\n\n#elif defined WIRING\n// Interrupt handlers for Wiring\n#if defined(_useTimer1)\nvoid Timer1Service()\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n#if defined(_useTimer3)\nvoid Timer3Service()\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n#endif\n\n\nstatic void initISR(timer16_Sequence_t timer)\n{\n#if defined (_useTimer1)\n  if(timer == _timer1) {\n    TCCR1A = 0;             // normal counting mode\n    TCCR1B = _BV(CS11);     // set prescaler of 8\n    TCNT1 = 0;              // clear the timer count\n#if defined(__AVR_ATmega8__)|| defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF1A);      // clear any pending interrupts;\n    TIMSK |=  _BV(OCIE1A) ;  // enable the output compare interrupt\n#else\n    // here if not ATmega8 or ATmega128\n    TIFR1 |= _BV(OCF1A);     // clear any pending interrupts;\n    TIMSK1 |=  _BV(OCIE1A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER1OUTCOMPAREA_INT, Timer1Service);\n#endif\n  }\n#endif\n\n#if defined (_useTimer3)\n  if(timer == _timer3) {\n    TCCR3A = 0;             // normal counting mode\n    TCCR3B = _BV(CS31);     // set prescaler of 8\n    TCNT3 = 0;              // clear the timer count\n#if defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF3A);     // clear any pending interrupts;\n\tETIMSK |= _BV(OCIE3A);  // enable the output compare interrupt\n#else\n    TIFR3 = _BV(OCF3A);     // clear any pending interrupts;\n    TIMSK3 =  _BV(OCIE3A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER3OUTCOMPAREA_INT, Timer3Service);  // for Wiring platform only\n#endif\n  }\n#endif\n\n#if defined (_useTimer4)\n  if(timer == _timer4) {\n    TCCR4A = 0;             // normal counting mode\n    TCCR4B = _BV(CS41);     // set prescaler of 8\n    TCNT4 = 0;              // clear the timer count\n    TIFR4 = _BV(OCF4A);     // clear any pending interrupts;\n    TIMSK4 =  _BV(OCIE4A) ; // enable the output compare interrupt\n  }\n#endif\n\n#if defined (_useTimer5)\n  if(timer == _timer5) {\n    TCCR5A = 0;             // normal counting mode\n    TCCR5B = _BV(CS51);     // set prescaler of 8\n    TCNT5 = 0;              // clear the timer count\n    TIFR5 = _BV(OCF5A);     // clear any pending interrupts;\n    TIMSK5 =  _BV(OCIE5A) ; // enable the output compare interrupt\n  }\n#endif\n}\n\nstatic void finISR(timer16_Sequence_t timer)\n{\n    //disable use of the given timer\n#if defined WIRING   // Wiring\n  if(timer == _timer1) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK1 &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #else\n    TIMSK &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #endif\n    timerDetach(TIMER1OUTCOMPAREA_INT);\n  }\n  else if(timer == _timer3) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK3 &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #else\n    ETIMSK &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #endif\n    timerDetach(TIMER3OUTCOMPAREA_INT);\n  }\n#else\n  //For arduino - in future: call here to a currently undefined function to reset the timer\n  (void) timer;  // squash \"unused parameter 'timer' [-Wunused-parameter]\" warning\n#endif\n}\n\nstatic boolean isTimerActive(timer16_Sequence_t timer)\n{\n  // returns true if any servo is active on this timer\n  for(uint8_t channel=0; channel < SERVOS_PER_TIMER; channel++) {\n    if(SERVO(timer,channel).Pin.isActive == true)\n      return true;\n  }\n  return false;\n}\n\n\n/****************** end of static functions ******************************/\n\nServo::Servo()\n{\n  if( ServoCount < MAX_SERVOS) {\n    this->servoIndex = ServoCount++;                    // assign a servo index to this instance\n\tservos[this->servoIndex].ticks = usToTicks(DEFAULT_PULSE_WIDTH);   // store default values  - 12 Aug 2009\n  }\n  else\n    this->servoIndex = INVALID_SERVO ;  // too many servos\n}\n\nuint8_t Servo::attach(int pin)\n{\n  return this->attach(pin, MIN_PULSE_WIDTH, MAX_PULSE_WIDTH);\n}\n\nuint8_t Servo::attach(int pin, int min, int max)\n{\n  if(this->servoIndex < MAX_SERVOS ) {\n    pinMode( pin, OUTPUT) ;                                   // set servo pin to output\n    servos[this->servoIndex].Pin.nbr = pin;\n    // todo min/max check: abs(min - MIN_PULSE_WIDTH) /4 < 128\n    this->min  = (MIN_PULSE_WIDTH - min)/4; //resolution of min/max is 4 uS\n    this->max  = (MAX_PULSE_WIDTH - max)/4;\n    // initialize the timer if it has not already been initialized\n    timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n    if(isTimerActive(timer) == false)\n      initISR(timer);\n    servos[this->servoIndex].Pin.isActive = true;  // this must be set after the check for isTimerActive\n  }\n  return this->servoIndex ;\n}\n\nvoid Servo::detach()\n{\n  servos[this->servoIndex].Pin.isActive = false;\n  timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n  if(isTimerActive(timer) == false) {\n    finISR(timer);\n  }\n}\n\nvoid Servo::write(int value)\n{\n  if(value < MIN_PULSE_WIDTH)\n  {  // treat values less than 544 as angles in degrees (valid values in microseconds are handled as microseconds)\n    if(value < 0) value = 0;\n    if(value > 180) value = 180;\n    value = map(value, 0, 180, SERVO_MIN(),  SERVO_MAX());\n  }\n  this->writeMicroseconds(value);\n}\n\nvoid Servo::writeMicroseconds(int value)\n{\n  // calculate and store the values for the given channel\n  byte channel = this->servoIndex;\n  if( (channel < MAX_SERVOS) )   // ensure channel is valid\n  {\n    if( value < SERVO_MIN() )          // ensure pulse width is valid\n      value = SERVO_MIN();\n    else if( value > SERVO_MAX() )\n      value = SERVO_MAX();\n\n    value = value - TRIM_DURATION;\n    value = usToTicks(value);  // convert to ticks after compensating for interrupt overhead - 12 Aug 2009\n\n    uint8_t oldSREG = SREG;\n    cli();\n    servos[channel].ticks = value;\n    SREG = oldSREG;\n  }\n}\n\nint Servo::read() // return the value as degrees\n{\n  return  map( this->readMicroseconds()+1, SERVO_MIN(), SERVO_MAX(), 0, 180);\n}\n\nint Servo::readMicroseconds()\n{\n  unsigned int pulsewidth;\n  if( this->servoIndex != INVALID_SERVO )\n    pulsewidth = ticksToUs(servos[this->servoIndex].ticks)  + TRIM_DURATION ;   // 12 aug 2009\n  else\n    pulsewidth  = 0;\n\n  return pulsewidth;\n}\n\nbool Servo::attached()\n{\n  return servos[this->servoIndex].Pin.isActive ;\n}\n\n#endif // ARDUINO_ARCH_AVR\n\n"}}}Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp"}}}
>>>
Content-Length: 177

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":82,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":51,"character":24}}}
>>>
Content-Length: 300

{"id":82,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":60,"character":24},"end":{"line":60,"character":25}}},"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":15},"end":{"line":8,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":83,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":8,"character":17}}}
>>>
Content-Length: 37

{"id":84,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":85,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":16},"end":{"line":8,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":85,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":26},"contentChanges":[{"range":{"start":{"line":8,"character":16},"end":{"line":8,"character":17}},"rangeLength":1,"text":"1"}]}}Content-Length: 205

{"jsonrpc":"2.0","id":86,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":8,"character":17}}}
>>>
Content-Length: 39

{"id":86,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":87,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":17},"end":{"line":8,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":87,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":27},"contentChanges":[{"range":{"start":{"line":8,"character":17},"end":{"line":8,"character":17}},"rangeLength":0,"text":"2"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":88,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":88,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":27}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":28},"contentChanges":[{"range":{"start":{"line":8,"character":17},"end":{"line":8,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29},"contentChanges":[{"range":{"start":{"line":8,"character":17},"end":{"line":8,"character":17}},"rangeLength":0,"text":"3"}]}}Content-Length: 278

{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":89,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}Content-Length: 210

{"jsonrpc":"2.0","id":90,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":3,"character":15}}}
>>>
Content-Length: 199

{"id":90,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":3,"character":10},"end":{"line":3,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":10,"character":19},"end":{"line":10,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":91,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":92,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":8,"character":0}}}
>>>
Content-Length: 39

{"id":92,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"jsonrpc":"2.0","id":93,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":8,"character":1}}}
>>>
Content-Length: 37

{"id":93,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 276

{"jsonrpc":"2.0","id":94,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":94,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}Content-Length: 280

{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":22,"character":28},"end":{"line":22,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":95,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"jsonrpc":"2.0","id":96,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":17,"character":27},"end":{"line":17,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":96,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}Content-Length: 210

{"jsonrpc":"2.0","id":97,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":25,"character":4}}}
>>>
Content-Length: 200

{"id":97,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":11,"character":6},"end":{"line":11,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}Content-Length: 278

{"jsonrpc":"2.0","id":98,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":26,"character":1},"end":{"line":26,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":98,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}Content-Length: 280

{"jsonrpc":"2.0","id":99,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":72,"character":30},"end":{"line":72,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":99,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":100,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":76,"character":34}}}
>>>
Content-Length: 126

{"id":100,"result":[{"range":{"start":{"line":76,"character":13},"end":{"line":76,"character":20}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":76,"character":34},"end":{"line":76,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 417

{"id":101,"result":[{"title":"Expand macro 'HIGH'","kind":"refactor","command":{"title":"Expand macro 'HIGH'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server140038214/sketch/DistanceSensor.ino.cpp","selection":{"start":{"line":85,"character":34},"end":{"line":85,"character":34}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":77,"character":40},"end":{"line":77,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":102,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 207

{"jsonrpc":"2.0","id":103,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":61,"character":24}}}
>>>
Content-Length: 40

{"id":103,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":104,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":61,"character":24},"end":{"line":61,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":104,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":29}}}Content-Length: 308

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":30},"contentChanges":[{"range":{"start":{"line":61,"character":24},"end":{"line":61,"character":24}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":30}}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":31},"contentChanges":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":4}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 459

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":5},"end":{"line":62,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":5}},"message":"Use of undeclared identifier 's'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":105,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":32},"contentChanges":[{"range":{"start":{"line":62,"character":5},"end":{"line":62,"character":5}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'se'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":6},"end":{"line":62,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":6}},"message":"Use of undeclared identifier 'se'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":106,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":32}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":33},"contentChanges":[{"range":{"start":{"line":62,"character":5},"end":{"line":62,"character":6}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":34},"contentChanges":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":5}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":35},"contentChanges":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":4}},"rangeLength":0,"text":"S"}]}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'S'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":36},"contentChanges":[{"range":{"start":{"line":62,"character":5},"end":{"line":62,"character":5}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Se'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":37},"contentChanges":[{"range":{"start":{"line":62,"character":6},"end":{"line":62,"character":6}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 355

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Ser'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":38},"contentChanges":[{"range":{"start":{"line":62,"character":7},"end":{"line":62,"character":7}},"rangeLength":0,"text":"u"}]}}
>>>
Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seru'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":39},"contentChanges":[{"range":{"start":{"line":62,"character":8},"end":{"line":62,"character":8}},"rangeLength":0,"text":"a"}]}}
>>>
Content-Length: 357

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serua'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":40},"contentChanges":[{"range":{"start":{"line":62,"character":9},"end":{"line":62,"character":9}},"rangeLength":0,"text":"k"}]}}
>>>
Content-Length: 746

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'Seruak'; did you mean 'Serial'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:143:25:\nnote: 'Serial' declared here"},{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 654

{"jsonrpc":"2.0","id":107,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":10},"end":{"line":62,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":10}},"message":"Use of undeclared identifier 'Seruak'; did you mean 'Serial'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:143:25:\nnote: 'Serial' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":107,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":41},"contentChanges":[{"range":{"start":{"line":62,"character":9},"end":{"line":62,"character":10}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 357

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serua'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":42},"contentChanges":[{"range":{"start":{"line":62,"character":8},"end":{"line":62,"character":9}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seru'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":43},"contentChanges":[{"range":{"start":{"line":62,"character":8},"end":{"line":62,"character":8}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 357

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serui'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":44},"contentChanges":[{"range":{"start":{"line":62,"character":8},"end":{"line":62,"character":9}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seru'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":45},"contentChanges":[{"range":{"start":{"line":62,"character":7},"end":{"line":62,"character":8}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 355

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Ser'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":46},"contentChanges":[{"range":{"start":{"line":62,"character":7},"end":{"line":62,"character":7}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 356

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seri'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 462

{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":8},"end":{"line":62,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":8}},"message":"Use of undeclared identifier 'Seri'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":108,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":47},"contentChanges":[{"range":{"start":{"line":62,"character":8},"end":{"line":62,"character":8}},"rangeLength":0,"text":"a"}]}}Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":48},"contentChanges":[{"range":{"start":{"line":62,"character":9},"end":{"line":62,"character":9}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 744

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'Seria'; did you mean 'Serial'? (fix available)\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:143:25:\nnote: 'Serial' declared here"},{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":10},"end":{"line":62,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":109,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":49},"contentChanges":[{"range":{"start":{"line":62,"character":10},"end":{"line":62,"character":10}},"rangeLength":0,"text":"."}]}}Content-Length: 263

{"jsonrpc":"2.0","id":110,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":62,"character":11},"context":{"triggerKind":2,"triggerCharacter":"."}}}
>>>
Content-Length: 6611

{"id":110,"result":{"isIncomplete":false,"items":[{"label":" availableForWrite()","kind":2,"detail":"int","sortText":"3e97ae13availableForWrite","filterText":"availableForWrite","insertText":"availableForWrite()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"availableForWrite()"}},{"label":" read()","kind":2,"detail":"int","sortText":"3e97ae13read","filterText":"read","insertText":"read()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"read()"}},{"label":" write(…)","kind":2,"detail":"[5 overloads]","sortText":"3e97ae13write","filterText":"write","insertText":"write($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"write($0)"}},{"label":" write(…)","kind":2,"detail":"[3 overloads]","sortText":"3e97ae13write","filterText":"write","insertText":"write($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"write($0)"}},{"label":" available()","kind":2,"detail":"int","sortText":"3ee51eb8available","filterText":"available","insertText":"available()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"available()"}},{"label":" begin(…)","kind":2,"detail":"[2 overloads]","sortText":"3ee51eb8begin","filterText":"begin","insertText":"begin($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"begin($0)"}},{"label":" end()","kind":2,"detail":"void","sortText":"3ee51eb8end","filterText":"end","insertText":"end()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"end()"}},{"label":" flush()","kind":2,"detail":"void","sortText":"3ee51eb8flush","filterText":"flush","insertText":"flush()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"flush()"}},{"label":" peek()","kind":2,"detail":"int","sortText":"3ee51eb8peek","filterText":"peek","insertText":"peek()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"peek()"}},{"label":" clearWriteError()","kind":2,"detail":"void","sortText":"3f17ae13clearWriteError","filterText":"clearWriteError","insertText":"clearWriteError()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"clearWriteError()"}},{"label":" getWriteError()","kind":2,"detail":"int","sortText":"3f17ae13getWriteError","filterText":"getWriteError","insertText":"getWriteError()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"getWriteError()"}},{"label":" readBytes(…)","kind":2,"detail":"[2 overloads]","sortText":"3f17ae13readBytes","filterText":"readBytes","insertText":"readBytes($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"readBytes($0)"}},{"label":" readBytesUntil(…)","kind":2,"detail":"[2 overloads]","sortText":"3f17ae13readBytesUntil","filterText":"readBytesUntil","insertText":"readBytesUntil($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"readBytesUntil($0)"}},{"label":" readString()","kind":2,"detail":"String","sortText":"3f17ae13readString","filterText":"readString","insertText":"readString()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"readString()"}},{"label":" readStringUntil(char terminator)","kind":2,"detail":"String","sortText":"3f17ae13readStringUntil","filterText":"readStringUntil","insertText":"readStringUntil(${1:char terminator})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"readStringUntil(${1:char terminator})"}},{"label":" find(…)","kind":2,"detail":"[5 overloads]","sortText":"3f651eb8find","filterText":"find","insertText":"find($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"find($0)"}},{"label":" findUntil(…)","kind":2,"detail":"[4 overloads]","sortText":"3f651eb8findUntil","filterText":"findUntil","insertText":"findUntil($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"findUntil($0)"}},{"label":" getTimeout()","kind":2,"detail":"unsigned long","sortText":"3f651eb8getTimeout","filterText":"getTimeout","insertText":"getTimeout()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"getTimeout()"}},{"label":" parseFloat(LookaheadMode lookahead = SKIP_ALL, char ignore = NO_IGNORE_CHAR)","kind":2,"detail":"float","sortText":"3f651eb8parseFloat","filterText":"parseFloat","insertText":"parseFloat()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"parseFloat()"}},{"label":" parseInt(LookaheadMode lookahead = SKIP_ALL, char ignore = NO_IGNORE_CHAR)","kind":2,"detail":"long","sortText":"3f651eb8parseInt","filterText":"parseInt","insertText":"parseInt()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"parseInt()"}},{"label":" print(…)","kind":2,"detail":"[11 overloads]","sortText":"3f651eb8print","filterText":"print","insertText":"print($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"print($0)"}},{"label":" println(…)","kind":2,"detail":"[12 overloads]","sortText":"3f651eb8println","filterText":"println","insertText":"println($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"println($0)"}},{"label":" setTimeout(unsigned long timeout)","kind":2,"detail":"void","sortText":"3f651eb8setTimeout","filterText":"setTimeout","insertText":"setTimeout(${1:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"newText":"setTimeout(${1:unsigned long timeout})"}}]},"jsonrpc":"2.0"}Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":11},"end":{"line":62,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":111,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":49}}}Content-Length: 206

{"jsonrpc":"2.0","id":112,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":64,"character":0}}}
>>>
Content-Length: 40

{"id":112,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":50},"contentChanges":[{"range":{"start":{"line":62,"character":11},"end":{"line":62,"character":11}},"rangeLength":0,"text":"write()"}]}}
>>>
Content-Length: 2166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":62,"character":4},"end":{"line":62,"character":16}},"severity":1,"code":"ovl_no_viable_member_function_in_call","source":"clang","message":"No matching member function for call to 'write'\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:129:20:\nnote: candidate function not viable: requires 1 argument, but 0 were provided\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:130:19:\nnote: candidate function not viable: requires single argument 'n', but no arguments were provided\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:131:19:\nnote: candidate function not viable: requires single argument 'n', but no arguments were provided\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:132:19:\nnote: candidate function not viable: requires single argument 'n', but no arguments were provided\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial.h:133:19:\nnote: candidate function not viable: requires single argument 'n', but no arguments were provided\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.h:52:12:\nnote: candidate function not viable: requires single argument 'str', but no arguments were provided\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.h:56:20:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.h:57:12:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided"},{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":113,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":17},"end":{"line":62,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":113,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":50}}}Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":51},"contentChanges":[{"range":{"start":{"line":62,"character":17},"end":{"line":62,"character":17}},"rangeLength":0,"text":"\"\""}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":18},"end":{"line":62,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":114,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":51}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":52},"contentChanges":[{"range":{"start":{"line":62,"character":18},"end":{"line":62,"character":18}},"rangeLength":0,"text":"O"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":53},"contentChanges":[{"range":{"start":{"line":62,"character":19},"end":{"line":62,"character":19}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":54},"contentChanges":[{"range":{"start":{"line":62,"character":20},"end":{"line":62,"character":20}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":21},"end":{"line":62,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":115,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":54}}}Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":55},"contentChanges":[{"range":{"start":{"line":62,"character":20},"end":{"line":62,"character":21}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":56},"contentChanges":[{"range":{"start":{"line":62,"character":19},"end":{"line":62,"character":20}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":57},"contentChanges":[{"range":{"start":{"line":62,"character":18},"end":{"line":62,"character":19}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":18},"end":{"line":62,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":116,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":57}}}Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":58},"contentChanges":[{"range":{"start":{"line":62,"character":18},"end":{"line":62,"character":18}},"rangeLength":0,"text":"P"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":59},"contentChanges":[{"range":{"start":{"line":62,"character":19},"end":{"line":62,"character":19}},"rangeLength":0,"text":"r"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":60},"contentChanges":[{"range":{"start":{"line":62,"character":20},"end":{"line":62,"character":20}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":61},"contentChanges":[{"range":{"start":{"line":62,"character":21},"end":{"line":62,"character":21}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":62},"contentChanges":[{"range":{"start":{"line":62,"character":22},"end":{"line":62,"character":22}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 372

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":23},"end":{"line":62,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":117,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":62}}}Content-Length: 281

{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":25},"end":{"line":62,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":118,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":63},"contentChanges":[{"range":{"start":{"line":62,"character":25},"end":{"line":62,"character":25}},"rangeLength":0,"text":";"}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":26},"end":{"line":62,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":119,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":63}}}Content-Length: 211

{"jsonrpc":"2.0","id":120,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":56,"character":5}}}
>>>
Content-Length: 230

{"id":120,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":121,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":57,"character":5}}}
>>>
Content-Length: 230

{"id":121,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":122,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":62,"character":9}}}
>>>
Content-Length: 233

{"id":122,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp","range":{"start":{"line":69,"character":17},"end":{"line":69,"character":23}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 2931

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial0.cpp - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 23 November 2006 by David A. Mellis\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#include \"Arduino.h\"\n#include \"HardwareSerial.h\"\n#include \"HardwareSerial_private.h\"\n\n// Each HardwareSerial is defined in its own file, since the linker pulls\n// in the entire file when any element inside is used. --gc-sections can\n// additionally cause unused symbols to be dropped, but ISRs have the\n// \"used\" attribute so are never dropped and they keep the\n// HardwareSerial instance in as well. Putting each instance in its own\n// file prevents the linker from pulling in any unused instances in the\n// first place.\n\n#if defined(HAVE_HWSERIAL0)\n\n#if defined(USART_RX_vect)\n  ISR(USART_RX_vect)\n#elif defined(USART0_RX_vect)\n  ISR(USART0_RX_vect)\n#elif defined(USART_RXC_vect)\n  ISR(USART_RXC_vect) // ATmega8\n#else\n  #error \"Don't know what the Data Received vector is called for Serial\"\n#endif\n  {\n    Serial._rx_complete_irq();\n  }\n\n#if defined(UART0_UDRE_vect)\nISR(UART0_UDRE_vect)\n#elif defined(UART_UDRE_vect)\nISR(UART_UDRE_vect)\n#elif defined(USART0_UDRE_vect)\nISR(USART0_UDRE_vect)\n#elif defined(USART_UDRE_vect)\nISR(USART_UDRE_vect)\n#else\n  #error \"Don't know what the Data Register Empty vector is called for Serial\"\n#endif\n{\n  Serial._tx_udr_empty_irq();\n}\n\n#if defined(UBRRH) && defined(UBRRL)\n  HardwareSerial Serial(&UBRRH, &UBRRL, &UCSRA, &UCSRB, &UCSRC, &UDR);\n#else\n  HardwareSerial Serial(&UBRR0H, &UBRR0L, &UCSR0A, &UCSR0B, &UCSR0C, &UDR0);\n#endif\n\n// Function that can be weakly referenced by serialEventRun to prevent\n// pulling in this file if it's not otherwise used.\nbool Serial0_available() {\n  return Serial.available();\n}\n\n#endif // HAVE_HWSERIAL0\n"}}}Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}}}
>>>
Content-Length: 204

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":123,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":62,"character":8}}}
>>>
Content-Length: 268

{"id":123,"result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"start":{"line":71,"character":4},"end":{"line":71,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":124,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":2}}}
>>>
Content-Length: 40

{"id":124,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":125,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":2}}}
>>>
Content-Length: 38

{"id":125,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":126,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":127,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":2}}}
>>>
Content-Length: 40

{"id":127,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":64},"contentChanges":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":4}},"rangeLength":2,"text":"e"}]}}
>>>
Content-Length: 555

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'e'"},{"range":{"start":{"line":60,"character":36},"end":{"line":60,"character":37}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":65},"contentChanges":[{"range":{"start":{"line":60,"character":3},"end":{"line":60,"character":3}},"rangeLength":0,"text":"l"}]}}
>>>
Content-Length: 556

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'el'"},{"range":{"start":{"line":60,"character":37},"end":{"line":60,"character":38}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":66},"contentChanges":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":4}},"rangeLength":0,"text":"s"}]}}
>>>
Content-Length: 557

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'els'"},{"range":{"start":{"line":60,"character":38},"end":{"line":60,"character":39}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":67},"contentChanges":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":5}},"rangeLength":0,"text":"e"}]}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":6}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":68},"contentChanges":[{"range":{"start":{"line":60,"character":6},"end":{"line":60,"character":6}},"rangeLength":0,"text":" "}]}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":6}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":69},"contentChanges":[{"range":{"start":{"line":60,"character":7},"end":{"line":60,"character":7}},"rangeLength":0,"text":"i"}]}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":6}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":70},"contentChanges":[{"range":{"start":{"line":60,"character":8},"end":{"line":60,"character":8}},"rangeLength":0,"text":"f"}]}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":6}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":128,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":9},"end":{"line":60,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":128,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":70}}}Content-Length: 211

{"jsonrpc":"2.0","id":129,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":2}}}
>>>
Content-Length: 38

{"id":129,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":130,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":2}}}
>>>
Content-Length: 40

{"id":130,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"jsonrpc":"2.0","id":131,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":60,"character":2},"end":{"line":63,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":6}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":131,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":132,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":2}}}
>>>
Content-Length: 38

{"id":132,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":71},"contentChanges":[{"range":{"start":{"line":60,"character":2},"end":{"line":63,"character":3}},"rangeLength":97,"text":""}]}}
>>>
Content-Length: 173

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":71}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":72},"contentChanges":[{"range":{"start":{"line":60,"character":2},"end":{"line":61,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":73},"contentChanges":[{"range":{"start":{"line":60,"character":2},"end":{"line":61,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":73}}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":74},"contentChanges":[{"range":{"start":{"line":60,"character":0},"end":{"line":60,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":75},"contentChanges":[{"range":{"start":{"line":59,"character":0},"end":{"line":60,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":75}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":75}}}Content-Length: 206

{"jsonrpc":"2.0","id":133,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":55,"character":3}}}
>>>
Content-Length: 40

{"id":133,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":134,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":54,"character":4}}}
>>>
Content-Length: 38

{"id":134,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":135,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":54,"character":4}}}
>>>
Content-Length: 38

{"id":135,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 402

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":76},"contentChanges":[{"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":4}},"rangeLength":0,"text":"else if (digitalRead(buttonPin) == LOW) {\n    microServo.write(0);\n    Serial.write(\"Press\");\n  }"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":136,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":55,"character":10}}}
>>>
Content-Length: 201

{"id":136,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":11,"character":6},"end":{"line":11,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":137,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":57,"character":3},"end":{"line":57,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":137,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":138,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":56,"character":9}}}
>>>
Content-Length: 233

{"id":138,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp","range":{"start":{"line":69,"character":17},"end":{"line":69,"character":23}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 2931

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial0.cpp - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 23 November 2006 by David A. Mellis\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#include \"Arduino.h\"\n#include \"HardwareSerial.h\"\n#include \"HardwareSerial_private.h\"\n\n// Each HardwareSerial is defined in its own file, since the linker pulls\n// in the entire file when any element inside is used. --gc-sections can\n// additionally cause unused symbols to be dropped, but ISRs have the\n// \"used\" attribute so are never dropped and they keep the\n// HardwareSerial instance in as well. Putting each instance in its own\n// file prevents the linker from pulling in any unused instances in the\n// first place.\n\n#if defined(HAVE_HWSERIAL0)\n\n#if defined(USART_RX_vect)\n  ISR(USART_RX_vect)\n#elif defined(USART0_RX_vect)\n  ISR(USART0_RX_vect)\n#elif defined(USART_RXC_vect)\n  ISR(USART_RXC_vect) // ATmega8\n#else\n  #error \"Don't know what the Data Received vector is called for Serial\"\n#endif\n  {\n    Serial._rx_complete_irq();\n  }\n\n#if defined(UART0_UDRE_vect)\nISR(UART0_UDRE_vect)\n#elif defined(UART_UDRE_vect)\nISR(UART_UDRE_vect)\n#elif defined(USART0_UDRE_vect)\nISR(USART0_UDRE_vect)\n#elif defined(USART_UDRE_vect)\nISR(USART_UDRE_vect)\n#else\n  #error \"Don't know what the Data Register Empty vector is called for Serial\"\n#endif\n{\n  Serial._tx_udr_empty_irq();\n}\n\n#if defined(UBRRH) && defined(UBRRL)\n  HardwareSerial Serial(&UBRRH, &UBRRL, &UCSRA, &UCSRB, &UCSRC, &UDR);\n#else\n  HardwareSerial Serial(&UBRR0H, &UBRR0L, &UCSR0A, &UCSR0B, &UCSR0C, &UDR0);\n#endif\n\n// Function that can be weakly referenced by serialEventRun to prevent\n// pulling in this file if it's not otherwise used.\nbool Serial0_available() {\n  return Serial.available();\n}\n\n#endif // HAVE_HWSERIAL0\n"}}}Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}}}
>>>
Content-Length: 204

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":76}}}Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":76}}}Content-Length: 206

{"jsonrpc":"2.0","id":139,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":57,"character":8}}}
>>>
Content-Length: 40

{"id":139,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":140,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":57,"character":8}}}
>>>
Content-Length: 40

{"id":140,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":77},"contentChanges":[{"range":{"start":{"line":57,"character":3},"end":{"line":57,"character":3}},"rangeLength":0,"text":" "}]}}Content-Length: 279

{"jsonrpc":"2.0","id":141,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":57,"character":4},"end":{"line":57,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":141,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":142,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":57,"character":8}}}
>>>
Content-Length: 38

{"id":142,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":77}}}Content-Length: 206

{"jsonrpc":"2.0","id":143,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":57,"character":8}}}
>>>
Content-Length: 40

{"id":143,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":144,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":58,"character":10}}}
>>>
Content-Length: 230

{"id":144,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":145,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"range":{"start":{"line":62,"character":12},"end":{"line":62,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":145,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":146,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"options":{"tabSize":2,"insertSpaces":true}}}
>>>
Content-Length: 227

{"id":146,"result":[{"range":{"start":{"line":46,"character":29},"end":{"line":47,"character":8}},"newText":"\n    "},{"range":{"start":{"line":77,"character":8},"end":{"line":77,"character":8}},"newText":" "}],"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":78},"contentChanges":[{"range":{"start":{"line":77,"character":8},"end":{"line":77,"character":8}},"rangeLength":0,"text":" "},{"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":8}},"rangeLength":4,"text":""}]}}Content-Length: 212

{"jsonrpc":"2.0","id":147,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":60,"character":16}}}
>>>
Content-Length: 200

{"id":147,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":7,"character":10},"end":{"line":7,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":78}}}Content-Length: 212

{"jsonrpc":"2.0","id":148,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":59,"character":16}}}
>>>
Content-Length: 200

{"id":148,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":6,"character":10},"end":{"line":6,"character":18}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":149,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":55,"character":14}}}
>>>
Content-Length: 208

{"id":149,"result":[{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","range":{"start":{"line":263,"character":12},"end":{"line":263,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 11436

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","languageId":"cpp","version":1,"text":"/*\n Servo.cpp - Interrupt driven Servo library for Arduino using 16 bit timers- Version 2\n Copyright (c) 2009 Michael Margolis.  All right reserved.\n\n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n\n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\n#if defined(ARDUINO_ARCH_AVR)\n\n#include <avr/interrupt.h>\n#include <Arduino.h>\n\n#include \"Servo.h\"\n\n#define usToTicks(_us)    (( clockCyclesPerMicrosecond()* _us) / 8)     // converts microseconds to tick (assumes prescale of 8)  // 12 Aug 2009\n#define ticksToUs(_ticks) (( (unsigned)_ticks * 8)/ clockCyclesPerMicrosecond() ) // converts from ticks back to microseconds\n\n\n#define TRIM_DURATION       2                               // compensation ticks to trim adjust for digitalWrite delays // 12 August 2009\n\n//#define NBR_TIMERS        (MAX_SERVOS / SERVOS_PER_TIMER)\n\nstatic servo_t servos[MAX_SERVOS];                          // static array of servo structures\nstatic volatile int8_t Channel[_Nbr_16timers ];             // counter for the servo being pulsed for each timer (or -1 if refresh interval)\n\nuint8_t ServoCount = 0;                                     // the total number of attached servos\n\n\n// convenience macros\n#define SERVO_INDEX_TO_TIMER(_servo_nbr) ((timer16_Sequence_t)(_servo_nbr / SERVOS_PER_TIMER)) // returns the timer controlling this servo\n#define SERVO_INDEX_TO_CHANNEL(_servo_nbr) (_servo_nbr % SERVOS_PER_TIMER)       // returns the index of the servo on this timer\n#define SERVO_INDEX(_timer,_channel)  ((_timer*SERVOS_PER_TIMER) + _channel)     // macro to access servo index by timer and channel\n#define SERVO(_timer,_channel)  (servos[SERVO_INDEX(_timer,_channel)])            // macro to access servo class by timer and channel\n\n#define SERVO_MIN() (MIN_PULSE_WIDTH - this->min * 4)  // minimum value in uS for this servo\n#define SERVO_MAX() (MAX_PULSE_WIDTH - this->max * 4)  // maximum value in uS for this servo\n\n/************ static functions common to all instances ***********************/\n\nstatic inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)\n{\n  if( Channel[timer] < 0 )\n    *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer\n  else{\n    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated\n  }\n\n  Channel[timer]++;    // increment to the next channel\n  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {\n    *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;\n    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated\n      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high\n  }\n  else {\n    // finished all channels so wait for the refresh period to expire before starting over\n    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed\n      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);\n    else\n      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed\n    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel\n  }\n}\n\n#ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform\n// Interrupt handlers for Arduino\n#if defined(_useTimer1)\nSIGNAL (TIMER1_COMPA_vect)\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n\n#if defined(_useTimer3)\nSIGNAL (TIMER3_COMPA_vect)\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n\n#if defined(_useTimer4)\nSIGNAL (TIMER4_COMPA_vect)\n{\n  handle_interrupts(_timer4, &TCNT4, &OCR4A);\n}\n#endif\n\n#if defined(_useTimer5)\nSIGNAL (TIMER5_COMPA_vect)\n{\n  handle_interrupts(_timer5, &TCNT5, &OCR5A);\n}\n#endif\n\n#elif defined WIRING\n// Interrupt handlers for Wiring\n#if defined(_useTimer1)\nvoid Timer1Service()\n{\n  handle_interrupts(_timer1, &TCNT1, &OCR1A);\n}\n#endif\n#if defined(_useTimer3)\nvoid Timer3Service()\n{\n  handle_interrupts(_timer3, &TCNT3, &OCR3A);\n}\n#endif\n#endif\n\n\nstatic void initISR(timer16_Sequence_t timer)\n{\n#if defined (_useTimer1)\n  if(timer == _timer1) {\n    TCCR1A = 0;             // normal counting mode\n    TCCR1B = _BV(CS11);     // set prescaler of 8\n    TCNT1 = 0;              // clear the timer count\n#if defined(__AVR_ATmega8__)|| defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF1A);      // clear any pending interrupts;\n    TIMSK |=  _BV(OCIE1A) ;  // enable the output compare interrupt\n#else\n    // here if not ATmega8 or ATmega128\n    TIFR1 |= _BV(OCF1A);     // clear any pending interrupts;\n    TIMSK1 |=  _BV(OCIE1A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER1OUTCOMPAREA_INT, Timer1Service);\n#endif\n  }\n#endif\n\n#if defined (_useTimer3)\n  if(timer == _timer3) {\n    TCCR3A = 0;             // normal counting mode\n    TCCR3B = _BV(CS31);     // set prescaler of 8\n    TCNT3 = 0;              // clear the timer count\n#if defined(__AVR_ATmega128__)\n    TIFR |= _BV(OCF3A);     // clear any pending interrupts;\n\tETIMSK |= _BV(OCIE3A);  // enable the output compare interrupt\n#else\n    TIFR3 = _BV(OCF3A);     // clear any pending interrupts;\n    TIMSK3 =  _BV(OCIE3A) ; // enable the output compare interrupt\n#endif\n#if defined(WIRING)\n    timerAttach(TIMER3OUTCOMPAREA_INT, Timer3Service);  // for Wiring platform only\n#endif\n  }\n#endif\n\n#if defined (_useTimer4)\n  if(timer == _timer4) {\n    TCCR4A = 0;             // normal counting mode\n    TCCR4B = _BV(CS41);     // set prescaler of 8\n    TCNT4 = 0;              // clear the timer count\n    TIFR4 = _BV(OCF4A);     // clear any pending interrupts;\n    TIMSK4 =  _BV(OCIE4A) ; // enable the output compare interrupt\n  }\n#endif\n\n#if defined (_useTimer5)\n  if(timer == _timer5) {\n    TCCR5A = 0;             // normal counting mode\n    TCCR5B = _BV(CS51);     // set prescaler of 8\n    TCNT5 = 0;              // clear the timer count\n    TIFR5 = _BV(OCF5A);     // clear any pending interrupts;\n    TIMSK5 =  _BV(OCIE5A) ; // enable the output compare interrupt\n  }\n#endif\n}\n\nstatic void finISR(timer16_Sequence_t timer)\n{\n    //disable use of the given timer\n#if defined WIRING   // Wiring\n  if(timer == _timer1) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK1 &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #else\n    TIMSK &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt\n    #endif\n    timerDetach(TIMER1OUTCOMPAREA_INT);\n  }\n  else if(timer == _timer3) {\n    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)\n    TIMSK3 &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #else\n    ETIMSK &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt\n    #endif\n    timerDetach(TIMER3OUTCOMPAREA_INT);\n  }\n#else\n  //For arduino - in future: call here to a currently undefined function to reset the timer\n  (void) timer;  // squash \"unused parameter 'timer' [-Wunused-parameter]\" warning\n#endif\n}\n\nstatic boolean isTimerActive(timer16_Sequence_t timer)\n{\n  // returns true if any servo is active on this timer\n  for(uint8_t channel=0; channel < SERVOS_PER_TIMER; channel++) {\n    if(SERVO(timer,channel).Pin.isActive == true)\n      return true;\n  }\n  return false;\n}\n\n\n/****************** end of static functions ******************************/\n\nServo::Servo()\n{\n  if( ServoCount < MAX_SERVOS) {\n    this->servoIndex = ServoCount++;                    // assign a servo index to this instance\n\tservos[this->servoIndex].ticks = usToTicks(DEFAULT_PULSE_WIDTH);   // store default values  - 12 Aug 2009\n  }\n  else\n    this->servoIndex = INVALID_SERVO ;  // too many servos\n}\n\nuint8_t Servo::attach(int pin)\n{\n  return this->attach(pin, MIN_PULSE_WIDTH, MAX_PULSE_WIDTH);\n}\n\nuint8_t Servo::attach(int pin, int min, int max)\n{\n  if(this->servoIndex < MAX_SERVOS ) {\n    pinMode( pin, OUTPUT) ;                                   // set servo pin to output\n    servos[this->servoIndex].Pin.nbr = pin;\n    // todo min/max check: abs(min - MIN_PULSE_WIDTH) /4 < 128\n    this->min  = (MIN_PULSE_WIDTH - min)/4; //resolution of min/max is 4 uS\n    this->max  = (MAX_PULSE_WIDTH - max)/4;\n    // initialize the timer if it has not already been initialized\n    timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n    if(isTimerActive(timer) == false)\n      initISR(timer);\n    servos[this->servoIndex].Pin.isActive = true;  // this must be set after the check for isTimerActive\n  }\n  return this->servoIndex ;\n}\n\nvoid Servo::detach()\n{\n  servos[this->servoIndex].Pin.isActive = false;\n  timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);\n  if(isTimerActive(timer) == false) {\n    finISR(timer);\n  }\n}\n\nvoid Servo::write(int value)\n{\n  if(value < MIN_PULSE_WIDTH)\n  {  // treat values less than 544 as angles in degrees (valid values in microseconds are handled as microseconds)\n    if(value < 0) value = 0;\n    if(value > 180) value = 180;\n    value = map(value, 0, 180, SERVO_MIN(),  SERVO_MAX());\n  }\n  this->writeMicroseconds(value);\n}\n\nvoid Servo::writeMicroseconds(int value)\n{\n  // calculate and store the values for the given channel\n  byte channel = this->servoIndex;\n  if( (channel < MAX_SERVOS) )   // ensure channel is valid\n  {\n    if( value < SERVO_MIN() )          // ensure pulse width is valid\n      value = SERVO_MIN();\n    else if( value > SERVO_MAX() )\n      value = SERVO_MAX();\n\n    value = value - TRIM_DURATION;\n    value = usToTicks(value);  // convert to ticks after compensating for interrupt overhead - 12 Aug 2009\n\n    uint8_t oldSREG = SREG;\n    cli();\n    servos[channel].ticks = value;\n    SREG = oldSREG;\n  }\n}\n\nint Servo::read() // return the value as degrees\n{\n  return  map( this->readMicroseconds()+1, SERVO_MIN(), SERVO_MAX(), 0, 180);\n}\n\nint Servo::readMicroseconds()\n{\n  unsigned int pulsewidth;\n  if( this->servoIndex != INVALID_SERVO )\n    pulsewidth = ticksToUs(servos[this->servoIndex].ticks)  + TRIM_DURATION ;   // 12 aug 2009\n  else\n    pulsewidth  = 0;\n\n  return pulsewidth;\n}\n\nbool Servo::attached()\n{\n  return servos[this->servoIndex].Pin.isActive ;\n}\n\n#endif // ARDUINO_ARCH_AVR\n\n"}}}Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp"}}}
>>>
Content-Length: 177

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Applications/Arduino.app/Contents/Java/libraries/Servo/src/avr/Servo.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":150,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":46,"character":10}}}
>>>
Content-Length: 230

{"id":150,"result":[{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","range":{"start":{"line":103,"character":5},"end":{"line":103,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 8991

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin >= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin >= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin >= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin >= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) && defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference << 4) | (pin & 0x07);\n#else\n\tADMUX = (analog_reference << 6) | (pin & 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) && defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high << 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) && defined(COM00) && !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) && defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) && defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) && defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) && defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) && defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) && defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) && defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) && defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) && defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) && defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val < 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}}}Content-Length: 190

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}}
>>>
Content-Length: 200

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":78}}}Content-Length: 211

{"jsonrpc":"2.0","id":151,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":42,"character":7}}}
>>>
Content-Length: 201

{"id":151,"result":[{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","range":{"start":{"line":11,"character":6},"end":{"line":11,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":152,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino"},"position":{"line":74,"character":6}}}
>>>
Content-Length: 260

{"id":152,"result":{"contents":{"kind":"markdown","value":"### variable `echoTime`  \n\n---\nType: `float`  \n\n---\n```cpp\n// In getDistance\nfloat echoTime\n```"},"range":{"start":{"line":83,"character":2},"end":{"line":83,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 175

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/lalit/Desktop/Coding/Arduino/DistanceSensor/DistanceSensor.ino","version":78}}}Content-Length: 60

{"jsonrpc":"2.0","id":153,"method":"shutdown","params":null}
>>>
Content-Length: 40

{"id":153,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}