






Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":86681,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server952652169/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server952652169/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2376

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server952652169/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n/*\n  SparkFun Inventorâ€™s Kit\n  Circuit 2B-ButtonTrumpet\n\n  Use 3 buttons plugged to play musical notes on a buzzer.\n\n  This sketch was written by SparkFun Electronics, with lots of help from the Arduino community.\n  This code is completely free for any use.\n\n  View circuit diagram and instructions at: https://learn.sparkfun.com/tutorials/sparkfun-inventors-kit-experiment-guide---v41\n  Download drawings and code at: https://github.com/sparkfun/SIK-Guide-Code\n*/\n\n//set the pins for the button and buzzer\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\n\nint buzzerPin = 10;\n\n\n#line 22 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 33 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 22 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n\n  //set the buzzer pin as an output\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600)\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {      //if the first key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 262);                     //play the frequency for c\n  }\n  else if (digitalRead(secondKeyPin) == LOW) { //if the second key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 330);                     //play the frequency for e\n  }\n  else if (digitalRead(thirdKeyPin) == LOW) { //if the third key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 392);                     //play the frequency for g\n  }\n  else {\n    noTone(buzzerPin);                        //if no key is pressed turn the buzzer off\n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}},"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server952652169/sketch/DigitalTrumpet.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 1034

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":43},"start":{"character":4,"line":43}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":47},"start":{"character":4,"line":47}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server952652169/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 1572

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":15,"line":16},"start":{"character":4,"line":16}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":16,"line":17},"start":{"character":4,"line":17}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":15,"line":18},"start":{"character":4,"line":18}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":13,"line":20},"start":{"character":4,"line":20}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":10,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":9,"line":39},"start":{"character":5,"line":39}}}]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 58

{"method":"shutdown","params":null,"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":2,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":45152,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 2377

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n/*\n  SparkFun Inventorâ€™s Kit\n  Circuit 2B-ButtonTrumpet\n\n  Use 3 buttons plugged to play musical notes on a buzzer.\n\n  This sketch was written by SparkFun Electronics, with lots of help from the Arduino community.\n  This code is completely free for any use.\n\n  View circuit diagram and instructions at: https://learn.sparkfun.com/tutorials/sparkfun-inventors-kit-experiment-guide---v41\n  Download drawings and code at: https://github.com/sparkfun/SIK-Guide-Code\n*/\n\n//set the pins for the button and buzzer\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4\nth\nint buzzerPin = 10;\n\n\n#line 22 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 33 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 22 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n\n  //set the buzzer pin as an output\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600)\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {      //if the first key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 262);                     //play the frequency for c\n  }\n  else if (digitalRead(secondKeyPin) == LOW) { //if the second key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 330);                     //play the frequency for e\n  }\n  else if (digitalRead(thirdKeyPin) == LOW) { //if the third key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 392);                     //play the frequency for g\n  }\n  else {\n    noTone(buzzerPin);                        //if no key is pressed turn the buzzer off\n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}},"jsonrpc":"2.0"}Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":18,"character":19},"end":{"line":18,"character":19}},"context":{"diagnostics":[]}},"id":1,"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 2211

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":2,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":35},"start":{"character":10,"line":35}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":43},"start":{"character":4,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":18,"line":43},"start":{"character":9,"line":43}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":47},"start":{"character":4,"line":47}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":18,"line":47},"start":{"character":9,"line":47}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":18,"line":51},"start":{"character":9,"line":51}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":54},"start":{"character":11,"line":54}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 36

{"id":1,"jsonrpc":"2.0","result":[]}Content-Length: 1378

{"id":2,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":15,"line":16},"start":{"character":4,"line":16}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":16,"line":17},"start":{"character":4,"line":17}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":15,"line":18},"start":{"character":4,"line":18}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":10,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":9,"line":39},"start":{"character":5,"line":39}}}]}
>>>
Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 1378

{"id":3,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":15,"line":16},"start":{"character":4,"line":16}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":16,"line":17},"start":{"character":4,"line":17}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":15,"line":18},"start":{"character":4,"line":18}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":10,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":9,"line":39},"start":{"character":5,"line":39}}}]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":18,"character":19},"end":{"line":18,"character":19}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":1},"jsonrpc":"2.0"}Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":18,"character":20},"end":{"line":18,"character":20}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 266

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":19,"character":2}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 1203

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'th'","range":{"end":{"character":2,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":43},"start":{"character":4,"line":43}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":47},"start":{"character":4,"line":47}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":2}}Content-Length: 123

{"id":5,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":20},"start":{"character":4,"line":20}}}]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}
>>>
Content-Length: 495

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":19,"character":2},"end":{"line":19,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'th'"}]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}
>>>
Content-Length: 349

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":19,"character":1},"end":{"line":19,"character":2}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1202

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 't'","range":{"end":{"character":1,"line":19},"start":{"character":0,"line":19}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":43},"start":{"character":4,"line":43}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":47},"start":{"character":4,"line":47}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":3}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}
>>>
Content-Length: 494

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":19,"character":1},"end":{"line":19,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":1}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 't'"}]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 2381

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":4},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n/*\n  SparkFun Inventorâ€™s Kit\n  Circuit 2B-ButtonTrumpet\n\n  Use 3 buttons plugged to play musical notes on a buzzer.\n\n  This sketch was written by SparkFun Electronics, with lots of help from the Arduino community.\n  This code is completely free for any use.\n\n  View circuit diagram and instructions at: https://learn.sparkfun.com/tutorials/sparkfun-inventors-kit-experiment-guide---v41\n  Download drawings and code at: https://github.com/sparkfun/SIK-Guide-Code\n*/\n\n//set the pins for the button and buzzer\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nt\nint buzzerPin = 10;\n\n\n#line 22 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 33 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 22 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n\n  //set the buzzer pin as an output\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600)\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {      //if the first key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 262);                     //play the frequency for c\n  }\n  else if (digitalRead(secondKeyPin) == LOW) { //if the second key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 330);                     //play the frequency for e\n  }\n  else if (digitalRead(thirdKeyPin) == LOW) { //if the third key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 392);                     //play the frequency for g\n  }\n  else {\n    noTone(buzzerPin);                        //if no key is pressed turn the buzzer off\n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}]},"jsonrpc":"2.0"}Content-Length: 349

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1034

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":37}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":43},"start":{"character":4,"line":43}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":47},"start":{"character":4,"line":47}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":5}}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":15,"character":40}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 1572

{"id":9,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":15,"line":16},"start":{"character":4,"line":16}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":17},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":16,"line":17},"start":{"character":4,"line":17}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":15,"line":18},"start":{"character":4,"line":18}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":13,"line":20},"start":{"character":4,"line":20}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":37},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":10,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":56},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":9,"line":39},"start":{"character":5,"line":39}}}]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":3,"character":0},"end":{"line":15,"character":40}},"context":{"diagnostics":[]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":15,"character":40}},"context":{"diagnostics":[]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":15,"character":40}},"rangeLength":506,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1034

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":24}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":6}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":28,"character":46}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":12,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":28,"character":46},"end":{"line":29,"character":26}},"context":{"diagnostics":[]}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":13,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":28,"character":75}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":14,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":28,"character":75},"end":{"line":28,"character":75}},"context":{"diagnostics":[]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":0},"end":{"line":28,"character":75}},"context":{"diagnostics":[]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":28,"character":46}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":17,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":28,"character":46},"end":{"line":28,"character":48}},"context":{"diagnostics":[]}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":18,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":28,"character":46},"end":{"line":28,"character":48}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1011

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":24}},"severity":1,"source":"clang"},{"code":"expected_lparen_after","message":"Expected '(' after 'if'","range":{"end":{"character":52,"line":28},"start":{"character":49,"line":28}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":7}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":28,"character":47}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":19,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":28,"character":46},"end":{"line":28,"character":46}},"context":{"diagnostics":[]}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":20,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":28,"character":48}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":21,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 504

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":28,"character":49},"end":{"line":28,"character":52}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'if'"}]}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":22,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":28,"character":47}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":23,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":28,"character":47},"end":{"line":28,"character":47}},"context":{"diagnostics":[]}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":24,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":28,"character":46}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":25,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":28,"character":46}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":26,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 506

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":28,"character":47},"end":{"line":28,"character":73}},"context":{"diagnostics":[{"range":{"start":{"line":28,"character":49},"end":{"line":28,"character":52}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'if'"}]}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":27,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":28,"character":47},"end":{"line":28,"character":73}},"rangeLength":26,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1212

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":24}},"severity":1,"source":"clang"},{"code":"unknown_typename","message":"Unknown type name 'i'","range":{"end":{"character":47,"line":28},"start":{"character":46,"line":28}},"severity":1,"source":"clang"},{"code":"expected_semi_declaration","message":"Expected ';' at end of declaration (fix available)","range":{"end":{"character":11,"line":29},"start":{"character":10,"line":29}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":8}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":28,"character":46},"end":{"line":28,"character":47}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1034

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":24}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":9}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":30,"character":46},"end":{"line":30,"character":72}},"context":{"diagnostics":[]}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":28,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":30,"character":46},"end":{"line":30,"character":72}},"rangeLength":26,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1035

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":24}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":10}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":49}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":29,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":48}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":30,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":47}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":31,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":32,"character":47},"end":{"line":32,"character":77}},"context":{"diagnostics":[]}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":32,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":32,"character":47},"end":{"line":32,"character":77}},"rangeLength":30,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1035

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":24}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":11}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":20},"end":{"line":26,"character":20}},"context":{"diagnostics":[]}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":33,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":26,"character":20},"end":{"line":26,"character":20}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server941600051/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":21},"end":{"line":26,"character":21}},"context":{"diagnostics":[]}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 100

{"error":{"code":-32602,"message":"onCodeAction called for non-added file"},"id":34,"jsonrpc":"2.0"}<<< Read Error: read |0: file already closed
--- Stream closed, err=%!s(<nil>)







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":45152,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1769

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\n\nint buzzerPin = 10;\n\n\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 20 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n\n  //set the buzzer pin as an output\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {      \n    Serial.println(\"This\")\n    tone(buzzerPin, 262);                     \n  }\n  else if (digitalRead(secondKeyPin) == LOW) { \n    Serial.println(\"This\")\n    tone(buzzerPin, 330);                     //play the frequency for e\n  }\n  else if (digitalRead(thirdKeyPin) == LOW) { //if the third key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 392);                     //play the frequency for g\n  }\n  else {\n    noTone(buzzerPin);                        //if no key is pressed turn the buzzer off\n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}},"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":21}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 834

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 1556

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":41}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":3,"jsonrpc":"2.0","result":[{"range":{"end":{"character":11,"line":40},"start":{"character":8,"line":40}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":21}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":34,"character":46},"end":{"line":34,"character":72}},"context":{"diagnostics":[]}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":34,"character":46},"end":{"line":34,"character":72}},"rangeLength":26,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 834

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":2}}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":43}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":6,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 1747

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\n\nint buzzerPin = 10;\n\n\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 20 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n\n  //set the buzzer pin as an output\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {      \n    Serial.println(\"This\")\n    tone(buzzerPin, 262);                     \n  }\n  else if (digitalRead(secondKeyPin) == LOW) { \n    Serial.println(\"This\")\n    tone(buzzerPin, 330);                     \n  }\n  else if (digitalRead(thirdKeyPin) == LOW) { //if the third key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 392);                     //play the frequency for g\n  }\n  else {\n    noTone(buzzerPin);                        //if no key is pressed turn the buzzer off\n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}]},"jsonrpc":"2.0"}Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":46}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":7,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}},"id":8,"jsonrpc":"2.0"}Content-Length: 62

{"method":"$/cancelRequest","params":{"id":6},"jsonrpc":"2.0"}
<<<
Content-Length: 1556

{"id":8,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 528

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":46},"end":{"line":38,"character":72}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 941

{"id":9,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp":[{"newText":";","range":{"end":{"character":26,"line":37},"start":{"character":26,"line":37}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert ';'"},{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":72,"line":38},"start":{"character":46,"line":36}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":36,"character":46},"end":{"line":38,"character":72}},"rangeLength":129,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":4}}
>>>
Content-Length: 468

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":36,"character":46},"end":{"line":36,"character":46}},"text":"//if the third key is pressed\n    Serial.println(\"This\")\n    tone(buzzerPin, 392);                     //play the frequency for g"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 834

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":5}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":57}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 529

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":46},"end":{"line":38,"character":72}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 942

{"id":11,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp":[{"newText":";","range":{"end":{"character":26,"line":37},"start":{"character":26,"line":37}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert ';'"},{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":72,"line":38},"start":{"character":46,"line":36}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":52}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":12,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":35,"character":3},"end":{"line":35,"character":3}},"context":{"diagnostics":[]}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":13,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":45}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":14,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":48}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":48},"end":{"line":37,"character":26}},"context":{"diagnostics":[]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":48},"end":{"line":36,"character":75}},"context":{"diagnostics":[]}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":17,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":36,"character":48},"end":{"line":36,"character":75}},"rangeLength":27,"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 834

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":6}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":36,"character":49},"end":{"line":36,"character":49}},"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 834

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":7}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":50},"end":{"line":36,"character":50}},"context":{"diagnostics":[]}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":18,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":36,"character":50},"end":{"line":36,"character":50}},"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 834

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":8}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":51},"end":{"line":36,"character":51}},"context":{"diagnostics":[]}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":19,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":36,"character":51},"end":{"line":36,"character":51}},"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 834

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":9}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":52},"end":{"line":36,"character":52}},"context":{"diagnostics":[]}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":20,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":46}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":21,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":36,"character":51},"end":{"line":36,"character":52}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 835

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":10}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":47}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":22,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":36,"character":50},"end":{"line":36,"character":51}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 835

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":11}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":36,"character":49},"end":{"line":36,"character":50}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 835

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":12}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":46}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":23,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":36,"character":48},"end":{"line":36,"character":49}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 835

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":13}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":36,"character":47},"end":{"line":36,"character":48}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 806

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":47,"line":36},"start":{"character":46,"line":36}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":14}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":46}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":24,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":36,"character":46},"end":{"line":36,"character":47}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 835

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":15}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":46}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":25,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":47},"end":{"line":38,"character":72}},"context":{"diagnostics":[]}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":26,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":38,"character":47},"end":{"line":38,"character":72}},"rangeLength":25,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1175

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":47,"line":38},"start":{"character":46,"line":38}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":3,"line":39},"start":{"character":2,"line":39}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":16}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":38,"character":46},"end":{"line":38,"character":47}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 835

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":17}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":44}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":27,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":45}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":28,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":46},"end":{"line":41,"character":88}},"context":{"diagnostics":[]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":41,"character":46},"end":{"line":41,"character":88}},"rangeLength":42,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 835

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":18}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":41,"character":45},"end":{"line":41,"character":46}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 835

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":19}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":41,"character":44},"end":{"line":41,"character":45}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 835

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":30},"start":{"character":4,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":34},"start":{"character":4,"line":34}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":8,"line":38},"start":{"character":4,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":20}}
>>>
Content-Length: 276

{"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"options":{"tabSize":2,"insertSpaces":true,"key":""}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 1383

{"id":30,"jsonrpc":"2.0","result":[{"newText":"\n    ","range":{"end":{"character":4,"line":29},"start":{"character":40,"line":28}}},{"newText":"\n      ","range":{"end":{"character":4,"line":30},"start":{"character":26,"line":29}}},{"newText":"\n  ","range":{"end":{"character":2,"line":31},"start":{"character":25,"line":30}}},{"newText":" ","range":{"end":{"character":2,"line":32},"start":{"character":3,"line":31}}},{"newText":"\n    ","range":{"end":{"character":4,"line":33},"start":{"character":46,"line":32}}},{"newText":"\n      ","range":{"end":{"character":4,"line":34},"start":{"character":26,"line":33}}},{"newText":"\n  ","range":{"end":{"character":2,"line":35},"start":{"character":25,"line":34}}},{"newText":" ","range":{"end":{"character":2,"line":36},"start":{"character":3,"line":35}}},{"newText":"\n    ","range":{"end":{"character":4,"line":37},"start":{"character":45,"line":36}}},{"newText":"\n      ","range":{"end":{"character":4,"line":38},"start":{"character":26,"line":37}}},{"newText":"\n  ","range":{"end":{"character":2,"line":39},"start":{"character":25,"line":38}}},{"newText":" ","range":{"end":{"character":2,"line":40},"start":{"character":3,"line":39}}},{"newText":"\n  ","range":{"end":{"character":2,"line":42},"start":{"character":22,"line":41}}},{"newText":"\n","range":{"end":{"character":0,"line":57},"start":{"character":2,"line":55}}}]}
>>>
Content-Length: 1574

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":44}},"rangeLength":22,"text":""},{"range":{"start":{"line":39,"character":3},"end":{"line":40,"character":1}},"rangeLength":2,"text":""},{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":46}},"rangeLength":21,"text":""},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":4}},"text":"  "},{"range":{"start":{"line":36,"character":45},"end":{"line":36,"character":46}},"rangeLength":1,"text":""},{"range":{"start":{"line":35,"character":3},"end":{"line":36,"character":1}},"rangeLength":2,"text":""},{"range":{"start":{"line":34,"character":25},"end":{"line":34,"character":46}},"rangeLength":21,"text":""},{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":4}},"text":"  "},{"range":{"start":{"line":32,"character":46},"end":{"line":32,"character":47}},"rangeLength":1,"text":""},{"range":{"start":{"line":31,"character":3},"end":{"line":32,"character":1}},"rangeLength":2,"text":""},{"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":46}},"rangeLength":21,"text":""},{"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":4}},"text":"  "},{"range":{"start":{"line":28,"character":40},"end":{"line":28,"character":46}},"rangeLength":6,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 838

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":10,"line":30},"start":{"character":6,"line":30}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":10,"line":33},"start":{"character":6,"line":33}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":10,"line":36},"start":{"character":6,"line":36}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":33}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":22}},"context":{"diagnostics":[]}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":31,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":30,"character":18}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":32,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":9}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"id":33,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"end":{"character":10,"line":32},"start":{"character":4,"line":32}}}}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":31,"character":8}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":34,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 528

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":30,"character":9},"end":{"line":30,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":30,"character":6},"end":{"line":30,"character":10}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 559

{"id":35,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":10,"line":30},"start":{"character":6,"line":30}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp":[{"newText":";","range":{"end":{"character":26,"line":29},"start":{"character":26,"line":29}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert ';'"}]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":30,"character":6}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 445

{"id":36,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n- `unsigned int frequency`\n- `unsigned long duration = 0`\n\nfrequency (in hertz) and duration (in milliseconds).  \n\n---\n```cpp\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)\n```"},"range":{"end":{"character":10,"line":30},"start":{"character":6,"line":30}}}}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":30,"character":8}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 445

{"id":37,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n- `unsigned int frequency`\n- `unsigned long duration = 0`\n\nfrequency (in hertz) and duration (in milliseconds).  \n\n---\n```cpp\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)\n```"},"range":{"end":{"character":10,"line":30},"start":{"character":6,"line":30}}}}
>>>
Content-Length: 529

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":30,"character":6},"end":{"line":30,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":30,"character":6},"end":{"line":30,"character":10}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 559

{"id":38,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":10,"line":30},"start":{"character":6,"line":30}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp":[{"newText":";","range":{"end":{"character":26,"line":29},"start":{"character":26,"line":29}}}]}},"isPreferred":true,"kind":"quickfix","title":"insert ';'"}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":29,"character":26},"end":{"line":29,"character":26}},"context":{"diagnostics":[]}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":39,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":25}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":40,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":26,"line":32},"start":{"character":25,"line":32}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":26}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":41,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":26,"line":32},"start":{"character":25,"line":32}}}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":34},"contentChanges":[{"range":{"start":{"line":29,"character":26},"end":{"line":29,"character":26}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 637

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":10,"line":33},"start":{"character":6,"line":33}},"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":10,"line":36},"start":{"character":6,"line":36}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":34}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":26}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 436

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":10,"line":36},"start":{"character":6,"line":36}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":35}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":32,"character":27},"end":{"line":32,"character":27}},"context":{"diagnostics":[]}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":42,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":35,"character":26},"end":{"line":35,"character":26}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":36}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":35,"character":27},"end":{"line":35,"character":27}},"context":{"diagnostics":[]}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":43,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":31,"character":29}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":44,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":30,"character":25}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":45,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":242},"start":{"character":5,"line":242}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":30,"character":22}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":46,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":16}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":47,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":35,"character":27},"end":{"line":36,"character":27}},"context":{"diagnostics":[]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":3},"end":{"line":39,"character":3}},"context":{"diagnostics":[]}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":49,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":11}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":50,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `buzzerPin`  \n\n---\nType: `int`  \nValue = `10`  \nPassed as \\_pin (converted to uint8_t)  \n\n---\n```cpp\nint buzzerPin = 10\n```"},"range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":11}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":51,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":18,"line":32},"start":{"character":11,"line":32}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":12}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":52,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":13}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 286

{"id":53,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":24,"line":34},"start":{"character":13,"line":34}}}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":34,"character":47},"end":{"line":34,"character":47}},"context":{"diagnostics":[]}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":54,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":10},"end":{"line":37,"character":10}},"context":{"diagnostics":[]}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":55,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":34,"character":47},"end":{"line":34,"character":47}},"context":{"diagnostics":[]}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":56,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":6}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":57,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":5}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":58,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":6}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":59,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":5}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":60,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":4}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":61,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":4}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":62,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":3}},"context":{"diagnostics":[]}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":63,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":34,"character":4},"end":{"line":37,"character":2}},"context":{"diagnostics":[]}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":64,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":6}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":65,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":4}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":66,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":4}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":67,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":4}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":68,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":34,"character":4},"end":{"line":37,"character":4}},"context":{"diagnostics":[]}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":69,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":4}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":70,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":2}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":71,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"context":{"diagnostics":[]}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":72,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":17}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 286

{"id":73,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":24,"line":34},"start":{"character":13,"line":34}}}}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"text":"\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":7,"line":38},"start":{"character":3,"line":38}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":37}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":17}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":74,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `buzzerPin`  \n\n---\nType: `int`  \nValue = `10`  \nPassed as \\_pin (converted to uint8_t)  \n\n---\n```cpp\nint buzzerPin = 10\n```"},"range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":17}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":75,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `buzzerPin`  \n\n---\nType: `int`  \nValue = `10`  \nPassed as \\_pin (converted to uint8_t)  \n\n---\n```cpp\nint buzzerPin = 10\n```"},"range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}}}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":2},"end":{"line":37,"character":2}},"context":{"diagnostics":[]}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":76,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":17}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":77,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `buzzerPin`  \n\n---\nType: `int`  \nValue = `10`  \nPassed as \\_pin (converted to uint8_t)  \n\n---\n```cpp\nint buzzerPin = 10\n```"},"range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}}}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"context":{"diagnostics":[]}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":78,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":18}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":79,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":17}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":80,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `buzzerPin`  \n\n---\nType: `int`  \nValue = `10`  \nPassed as \\_pin (converted to uint8_t)  \n\n---\n```cpp\nint buzzerPin = 10\n```"},"range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}}}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":7,"line":38},"start":{"character":3,"line":38}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":38}}
>>>
Content-Length: 443

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":4}},"text":"else if (digitalRead(thirdKeyPin) == LOW) {\n    Serial.println(\"This\");\n      tone(buzzerPin, 392);\n  } "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":7,"line":41},"start":{"character":3,"line":41}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":39}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":14}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":81,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":6}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":82,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":1}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":83,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":3}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":84,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 552

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":7}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Different indentation for 'if' and corresponding 'else'"}]}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":85,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":3}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":40}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":2}},"context":{"diagnostics":[]}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":86,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":4,"line":41},"start":{"character":0,"line":41}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":41}}
>>>
Content-Length: 552

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":4}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Different indentation for 'if' and corresponding 'else'"}]}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":87,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":40,"character":4},"end":{"line":41,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":42}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":4}},"context":{"diagnostics":[]}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":88,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":7}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":89,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":15}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 286

{"id":90,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":24,"line":37},"start":{"character":13,"line":37}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":33}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"id":91,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `thirdKeyPin`  \n\n---\nType: `int`  \nValue = `4`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint thirdKeyPin = 4\n```"},"range":{"end":{"character":36,"line":37},"start":{"character":25,"line":37}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":34}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 389

{"id":92,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":2,"range":{"end":{"character":21,"line":19},"start":{"character":10,"line":19}}},{"kind":2,"range":{"end":{"character":36,"line":34},"start":{"character":25,"line":34}}},{"kind":2,"range":{"end":{"character":36,"line":37},"start":{"character":25,"line":37}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":25},"end":{"line":37,"character":36}},"context":{"diagnostics":[]}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":93,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 354

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":37,"character":25},"end":{"line":37,"character":36}},"rangeLength":11,"text":"f"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'f'","range":{"end":{"character":26,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":43}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":37,"character":26},"end":{"line":37,"character":26}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fo'","range":{"end":{"character":27,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":44}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":37,"character":27},"end":{"line":37,"character":27}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fou'","range":{"end":{"character":28,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":45}}
>>>
Content-Length: 514

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":28},"end":{"line":37,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":25},"end":{"line":37,"character":28}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fou'"}]}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":94,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 1557

{"id":95,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":37,"character":28},"end":{"line":37,"character":28}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 421

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'four'","range":{"end":{"character":29,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":46}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":37,"character":29},"end":{"line":37,"character":29}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourt'","range":{"end":{"character":30,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":47}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":37,"character":30},"end":{"line":37,"character":30}},"text":"h"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourth'","range":{"end":{"character":31,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":48}}
>>>
Content-Length: 517

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":31},"end":{"line":37,"character":31}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":25},"end":{"line":37,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fourth'"}]}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":96,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 1557

{"id":97,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":37,"character":31},"end":{"line":37,"character":31}},"text":"T"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourthT'","range":{"end":{"character":32,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":49}}
>>>
Content-Length: 518

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":32},"end":{"line":37,"character":32}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":25},"end":{"line":37,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fourthT'"}]}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":98,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 1557

{"id":99,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":50},"contentChanges":[{"range":{"start":{"line":37,"character":31},"end":{"line":37,"character":32}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourth'","range":{"end":{"character":31,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":50}}
>>>
Content-Length: 518

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":31},"end":{"line":37,"character":31}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":25},"end":{"line":37,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fourth'"}]}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":100,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 1558

{"id":101,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":37,"character":31},"end":{"line":37,"character":31}},"text":"K"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourthK'","range":{"end":{"character":32,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":51}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":52},"contentChanges":[{"range":{"start":{"line":37,"character":32},"end":{"line":37,"character":32}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourthKe'","range":{"end":{"character":33,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":52}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":53},"contentChanges":[{"range":{"start":{"line":37,"character":33},"end":{"line":37,"character":33}},"text":"y"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 426

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourthKey'","range":{"end":{"character":34,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":53}}
>>>
Content-Length: 521

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":34},"end":{"line":37,"character":34}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":25},"end":{"line":37,"character":34}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fourthKey'"}]}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":102,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 1558

{"id":103,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":37,"character":34},"end":{"line":37,"character":34}},"text":"P"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourthKeyP'","range":{"end":{"character":35,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":54}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":37,"character":35},"end":{"line":37,"character":35}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourthKeyPi'","range":{"end":{"character":36,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":55}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":37,"character":36},"end":{"line":37,"character":36}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 790

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fourthKeyPin'; did you mean 'firstKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:4:5: note: 'firstKeyPin' declared here","range":{"end":{"character":37,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"},{"message":"'firstKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:38:26: error: use of undeclared identifier 'fourthKeyPin'; did you mean 'firstKeyPin'?","range":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":56}}
>>>
Content-Length: 642

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":37},"end":{"line":37,"character":37}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":25},"end":{"line":37,"character":37}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'fourthKeyPin'; did you mean 'firstKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:4:5: note: 'firstKeyPin' declared here"}]}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 709

{"id":104,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fourthKeyPin'; did you mean 'firstKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:4:5: note: 'firstKeyPin' declared here","range":{"end":{"character":37,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp":[{"newText":"firstKeyPin","range":{"end":{"character":37,"line":37},"start":{"character":25,"line":37}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'fourthKeyPin' to 'firstKeyPin'"}]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"context":{"diagnostics":[]}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":105,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 1558

{"id":106,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":30,"character":15}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":107,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":29,"character":14}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"id":108,"jsonrpc":"2.0","result":[{"range":{"end":{"character":21,"line":137},"start":{"character":14,"line":137}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}]}
>>>
Content-Length: 6071

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","languageId":"cpp","version":1,"text":"/*\n Print.cpp - Base class that provides print() and println()\n Copyright (c) 2008 David A. Mellis.  All right reserved.\n \n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n \n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n \n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n \n Modified 23 November 2006 by David A. Mellis\n Modified 03 August 2015 by Chuck Todd\n */\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \"Arduino.h\"\n\n#include \"Print.h\"\n\n// Public Methods //////////////////////////////////////////////////////////////\n\n/* default implementation: may be overridden */\nsize_t Print::write(const uint8_t *buffer, size_t size)\n{\n  size_t n = 0;\n  while (size--) {\n    if (write(*buffer++)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const __FlashStringHelper *ifsh)\n{\n  PGM_P p = reinterpret_cast\u003cPGM_P\u003e(ifsh);\n  size_t n = 0;\n  while (1) {\n    unsigned char c = pgm_read_byte(p++);\n    if (c == 0) break;\n    if (write(c)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const String \u0026s)\n{\n  return write(s.c_str(), s.length());\n}\n\nsize_t Print::print(const char str[])\n{\n  return write(str);\n}\n\nsize_t Print::print(char c)\n{\n  return write(c);\n}\n\nsize_t Print::print(unsigned char b, int base)\n{\n  return print((unsigned long) b, base);\n}\n\nsize_t Print::print(int n, int base)\n{\n  return print((long) n, base);\n}\n\nsize_t Print::print(unsigned int n, int base)\n{\n  return print((unsigned long) n, base);\n}\n\nsize_t Print::print(long n, int base)\n{\n  if (base == 0) {\n    return write(n);\n  } else if (base == 10) {\n    if (n \u003c 0) {\n      int t = print('-');\n      n = -n;\n      return printNumber(n, 10) + t;\n    }\n    return printNumber(n, 10);\n  } else {\n    return printNumber(n, base);\n  }\n}\n\nsize_t Print::print(unsigned long n, int base)\n{\n  if (base == 0) return write(n);\n  else return printNumber(n, base);\n}\n\nsize_t Print::print(double n, int digits)\n{\n  return printFloat(n, digits);\n}\n\nsize_t Print::println(const __FlashStringHelper *ifsh)\n{\n  size_t n = print(ifsh);\n  n += println();\n  return n;\n}\n\nsize_t Print::print(const Printable\u0026 x)\n{\n  return x.printTo(*this);\n}\n\nsize_t Print::println(void)\n{\n  return write(\"\\r\\n\");\n}\n\nsize_t Print::println(const String \u0026s)\n{\n  size_t n = print(s);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const char c[])\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(char c)\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned char b, int base)\n{\n  size_t n = print(b, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(double num, int digits)\n{\n  size_t n = print(num, digits);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const Printable\u0026 x)\n{\n  size_t n = print(x);\n  n += println();\n  return n;\n}\n\n// Private Methods /////////////////////////////////////////////////////////////\n\nsize_t Print::printNumber(unsigned long n, uint8_t base)\n{\n  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.\n  char *str = \u0026buf[sizeof(buf) - 1];\n\n  *str = '\\0';\n\n  // prevent crash if called with base == 1\n  if (base \u003c 2) base = 10;\n\n  do {\n    char c = n % base;\n    n /= base;\n\n    *--str = c \u003c 10 ? c + '0' : c + 'A' - 10;\n  } while(n);\n\n  return write(str);\n}\n\nsize_t Print::printFloat(double number, uint8_t digits) \n{ \n  size_t n = 0;\n  \n  if (isnan(number)) return print(\"nan\");\n  if (isinf(number)) return print(\"inf\");\n  if (number \u003e 4294967040.0) return print (\"ovf\");  // constant determined empirically\n  if (number \u003c-4294967040.0) return print (\"ovf\");  // constant determined empirically\n  \n  // Handle negative numbers\n  if (number \u003c 0.0)\n  {\n     n += print('-');\n     number = -number;\n  }\n\n  // Round correctly so that print(1.999, 2) prints as \"2.00\"\n  double rounding = 0.5;\n  for (uint8_t i=0; i\u003cdigits; ++i)\n    rounding /= 10.0;\n  \n  number += rounding;\n\n  // Extract the integer part of the number and print it\n  unsigned long int_part = (unsigned long)number;\n  double remainder = number - (double)int_part;\n  n += print(int_part);\n\n  // Print the decimal point, but only if there are digits beyond\n  if (digits \u003e 0) {\n    n += print('.'); \n  }\n\n  // Extract digits from the remainder one at a time\n  while (digits-- \u003e 0)\n  {\n    remainder *= 10.0;\n    unsigned int toPrint = (unsigned int)(remainder);\n    n += print(toPrint);\n    remainder -= toPrint; \n  } \n  \n  return n;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":29,"character":14}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"id":109,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":18,"line":29},"start":{"character":11,"line":29}}}}
>>>
Content-Length: 882

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":37,"character":36},"end":{"line":37,"character":37}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":35},"end":{"line":37,"character":36}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":34},"end":{"line":37,"character":35}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":33},"end":{"line":37,"character":34}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":32},"end":{"line":37,"character":33}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":31},"end":{"line":37,"character":32}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":29,"character":20}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":110,"jsonrpc":"2.0","result":[]}Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourth'","range":{"end":{"character":31,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":62}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":30,"character":24}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":111,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 1558

{"id":112,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 518

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":31},"end":{"line":37,"character":31}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":25},"end":{"line":37,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fourth'"}]}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":113,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":31,"character":27}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":114,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":28}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":115,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":14}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":116,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":11}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":117,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `buzzerPin`  \n\n---\nType: `int`  \nValue = `10`  \nPassed as \\_pin (converted to uint8_t)  \n\n---\n```cpp\nint buzzerPin = 10\n```"},"range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}}}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":63},"contentChanges":[{"range":{"start":{"line":37,"character":31},"end":{"line":37,"character":31}},"text":"T"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourthT'","range":{"end":{"character":32,"line":37},"start":{"character":25,"line":37}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":63}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":12}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":118,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 1558

{"id":119,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}
>>>
Content-Length: 999

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":37,"character":31},"end":{"line":37,"character":32}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":30},"end":{"line":37,"character":31}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":29},"end":{"line":37,"character":30}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":28},"end":{"line":37,"character":29}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":27},"end":{"line":37,"character":28}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":26},"end":{"line":37,"character":27}},"rangeLength":1,"text":""},{"range":{"start":{"line":37,"character":25},"end":{"line":37,"character":26}},"rangeLength":1,"text":"thirdKeyPin"}]},"jsonrpc":"2.0"}Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":12}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":120,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}]}Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":70}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":4}},"text":"\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":4,"line":41},"start":{"character":0,"line":41}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":71}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":17}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":121,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 425

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":0}},"text":"  "},{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":2}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":7,"line":41},"start":{"character":3,"line":41}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":73}}
>>>
Content-Length: 553

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":7}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Different indentation for 'if' and corresponding 'else'"}]}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":122,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":37,"character":4},"end":{"line":40,"character":4}},"rangeLength":104,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":7,"line":38},"start":{"character":3,"line":38}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":74}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":75},"contentChanges":[{"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":4}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":7,"line":38},"start":{"character":3,"line":38}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":75}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"context":{"diagnostics":[]}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":123,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":29,"character":10}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"id":124,"jsonrpc":"2.0","result":[{"range":{"end":{"character":21,"line":137},"start":{"character":14,"line":137}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}]}
>>>
Content-Length: 6071

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","languageId":"cpp","version":1,"text":"/*\n Print.cpp - Base class that provides print() and println()\n Copyright (c) 2008 David A. Mellis.  All right reserved.\n \n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n \n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n \n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n \n Modified 23 November 2006 by David A. Mellis\n Modified 03 August 2015 by Chuck Todd\n */\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \"Arduino.h\"\n\n#include \"Print.h\"\n\n// Public Methods //////////////////////////////////////////////////////////////\n\n/* default implementation: may be overridden */\nsize_t Print::write(const uint8_t *buffer, size_t size)\n{\n  size_t n = 0;\n  while (size--) {\n    if (write(*buffer++)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const __FlashStringHelper *ifsh)\n{\n  PGM_P p = reinterpret_cast\u003cPGM_P\u003e(ifsh);\n  size_t n = 0;\n  while (1) {\n    unsigned char c = pgm_read_byte(p++);\n    if (c == 0) break;\n    if (write(c)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const String \u0026s)\n{\n  return write(s.c_str(), s.length());\n}\n\nsize_t Print::print(const char str[])\n{\n  return write(str);\n}\n\nsize_t Print::print(char c)\n{\n  return write(c);\n}\n\nsize_t Print::print(unsigned char b, int base)\n{\n  return print((unsigned long) b, base);\n}\n\nsize_t Print::print(int n, int base)\n{\n  return print((long) n, base);\n}\n\nsize_t Print::print(unsigned int n, int base)\n{\n  return print((unsigned long) n, base);\n}\n\nsize_t Print::print(long n, int base)\n{\n  if (base == 0) {\n    return write(n);\n  } else if (base == 10) {\n    if (n \u003c 0) {\n      int t = print('-');\n      n = -n;\n      return printNumber(n, 10) + t;\n    }\n    return printNumber(n, 10);\n  } else {\n    return printNumber(n, base);\n  }\n}\n\nsize_t Print::print(unsigned long n, int base)\n{\n  if (base == 0) return write(n);\n  else return printNumber(n, base);\n}\n\nsize_t Print::print(double n, int digits)\n{\n  return printFloat(n, digits);\n}\n\nsize_t Print::println(const __FlashStringHelper *ifsh)\n{\n  size_t n = print(ifsh);\n  n += println();\n  return n;\n}\n\nsize_t Print::print(const Printable\u0026 x)\n{\n  return x.printTo(*this);\n}\n\nsize_t Print::println(void)\n{\n  return write(\"\\r\\n\");\n}\n\nsize_t Print::println(const String \u0026s)\n{\n  size_t n = print(s);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const char c[])\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(char c)\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned char b, int base)\n{\n  size_t n = print(b, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(double num, int digits)\n{\n  size_t n = print(num, digits);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const Printable\u0026 x)\n{\n  size_t n = print(x);\n  n += println();\n  return n;\n}\n\n// Private Methods /////////////////////////////////////////////////////////////\n\nsize_t Print::printNumber(unsigned long n, uint8_t base)\n{\n  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.\n  char *str = \u0026buf[sizeof(buf) - 1];\n\n  *str = '\\0';\n\n  // prevent crash if called with base == 1\n  if (base \u003c 2) base = 10;\n\n  do {\n    char c = n % base;\n    n /= base;\n\n    *--str = c \u003c 10 ? c + '0' : c + 'A' - 10;\n  } while(n);\n\n  return write(str);\n}\n\nsize_t Print::printFloat(double number, uint8_t digits) \n{ \n  size_t n = 0;\n  \n  if (isnan(number)) return print(\"nan\");\n  if (isinf(number)) return print(\"inf\");\n  if (number \u003e 4294967040.0) return print (\"ovf\");  // constant determined empirically\n  if (number \u003c-4294967040.0) return print (\"ovf\");  // constant determined empirically\n  \n  // Handle negative numbers\n  if (number \u003c 0.0)\n  {\n     n += print('-');\n     number = -number;\n  }\n\n  // Round correctly so that print(1.999, 2) prints as \"2.00\"\n  double rounding = 0.5;\n  for (uint8_t i=0; i\u003cdigits; ++i)\n    rounding /= 10.0;\n  \n  number += rounding;\n\n  // Extract the integer part of the number and print it\n  unsigned long int_part = (unsigned long)number;\n  double remainder = number - (double)int_part;\n  n += print(int_part);\n\n  // Print the decimal point, but only if there are digits beyond\n  if (digits \u003e 0) {\n    n += print('.'); \n  }\n\n  // Extract digits from the remainder one at a time\n  while (digits-- \u003e 0)\n  {\n    remainder *= 10.0;\n    unsigned int toPrint = (unsigned int)(remainder);\n    n += print(toPrint);\n    remainder -= toPrint; \n  } \n  \n  return n;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":20}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":125,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":242},"start":{"character":5,"line":242}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":45,"character":14}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":126,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":45,"character":14},"end":{"line":45,"character":14}},"context":{"diagnostics":[]}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":127,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":3}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":128,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":3}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":129,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 553

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":3},"end":{"line":38,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":3},"end":{"line":38,"character":7}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Different indentation for 'if' and corresponding 'else'"}]}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":130,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":38,"character":2},"end":{"line":38,"character":3}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":76}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":4,"line":38},"start":{"character":0,"line":38}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":77}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":37,"character":3},"end":{"line":38,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":78}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"context":{"diagnostics":[]}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":131,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":8}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":132,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":5}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":133,"jsonrpc":"2.0","result":[{"range":{"end":{"character":11,"line":479},"start":{"character":5,"line":479}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":7}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":134,"jsonrpc":"2.0","result":[{"range":{"end":{"character":23,"line":69},"start":{"character":17,"line":69}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}]}
>>>
Content-Length: 3001

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial0.cpp - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 23 November 2006 by David A. Mellis\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#include \"Arduino.h\"\n#include \"HardwareSerial.h\"\n#include \"HardwareSerial_private.h\"\n\n// Each HardwareSerial is defined in its own file, since the linker pulls\n// in the entire file when any element inside is used. --gc-sections can\n// additionally cause unused symbols to be dropped, but ISRs have the\n// \"used\" attribute so are never dropped and they keep the\n// HardwareSerial instance in as well. Putting each instance in its own\n// file prevents the linker from pulling in any unused instances in the\n// first place.\n\n#if defined(HAVE_HWSERIAL0)\n\n#if defined(USART_RX_vect)\n  ISR(USART_RX_vect)\n#elif defined(USART0_RX_vect)\n  ISR(USART0_RX_vect)\n#elif defined(USART_RXC_vect)\n  ISR(USART_RXC_vect) // ATmega8\n#else\n  #error \"Don't know what the Data Received vector is called for Serial\"\n#endif\n  {\n    Serial._rx_complete_irq();\n  }\n\n#if defined(UART0_UDRE_vect)\nISR(UART0_UDRE_vect)\n#elif defined(UART_UDRE_vect)\nISR(UART_UDRE_vect)\n#elif defined(USART0_UDRE_vect)\nISR(USART0_UDRE_vect)\n#elif defined(USART_UDRE_vect)\nISR(USART_UDRE_vect)\n#else\n  #error \"Don't know what the Data Register Empty vector is called for Serial\"\n#endif\n{\n  Serial._tx_udr_empty_irq();\n}\n\n#if defined(UBRRH) \u0026\u0026 defined(UBRRL)\n  HardwareSerial Serial(\u0026UBRRH, \u0026UBRRL, \u0026UCSRA, \u0026UCSRB, \u0026UCSRC, \u0026UDR);\n#else\n  HardwareSerial Serial(\u0026UBRR0H, \u0026UBRR0L, \u0026UCSR0A, \u0026UCSR0B, \u0026UCSR0C, \u0026UDR0);\n#endif\n\n// Function that can be weakly referenced by serialEventRun to prevent\n// pulling in this file if it's not otherwise used.\nbool Serial0_available() {\n  return Serial.available();\n}\n\n#endif // HAVE_HWSERIAL0\n"}},"jsonrpc":"2.0"}Content-Length: 194

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":79},"contentChanges":[{"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":79}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":4}},"context":{"diagnostics":[]}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":135,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"context":{"diagnostics":[]}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":136,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":0,"character":2},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":137,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":40,"character":1},"end":{"line":40,"character":1}},"context":{"diagnostics":[]}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":138,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":34,"character":47},"end":{"line":34,"character":47}},"context":{"diagnostics":[]}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":139,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":1}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":140,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":3}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":141,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":34,"character":4},"end":{"line":37,"character":3}},"context":{"diagnostics":[]}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":142,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":4}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":143,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":4}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":144,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":3}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":145,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"context":{"diagnostics":[]}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":146,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":24}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":147,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":37,"character":3},"end":{"line":37,"character":3}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":80}}
>>>
Content-Length: 442

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":81},"contentChanges":[{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":4}},"text":"else if (digitalRead(thirdKeyPin) == LOW) {\n    Serial.println(\"This\");\n      tone(buzzerPin, 392);\n  }"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":81}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":40,"character":3},"end":{"line":40,"character":3}},"context":{"diagnostics":[]}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":148,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":24}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":149,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":14}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"id":150,"jsonrpc":"2.0","result":[{"range":{"end":{"character":21,"line":137},"start":{"character":14,"line":137}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}]}
>>>
Content-Length: 6071

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","languageId":"cpp","version":1,"text":"/*\n Print.cpp - Base class that provides print() and println()\n Copyright (c) 2008 David A. Mellis.  All right reserved.\n \n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n \n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n \n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n \n Modified 23 November 2006 by David A. Mellis\n Modified 03 August 2015 by Chuck Todd\n */\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \"Arduino.h\"\n\n#include \"Print.h\"\n\n// Public Methods //////////////////////////////////////////////////////////////\n\n/* default implementation: may be overridden */\nsize_t Print::write(const uint8_t *buffer, size_t size)\n{\n  size_t n = 0;\n  while (size--) {\n    if (write(*buffer++)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const __FlashStringHelper *ifsh)\n{\n  PGM_P p = reinterpret_cast\u003cPGM_P\u003e(ifsh);\n  size_t n = 0;\n  while (1) {\n    unsigned char c = pgm_read_byte(p++);\n    if (c == 0) break;\n    if (write(c)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const String \u0026s)\n{\n  return write(s.c_str(), s.length());\n}\n\nsize_t Print::print(const char str[])\n{\n  return write(str);\n}\n\nsize_t Print::print(char c)\n{\n  return write(c);\n}\n\nsize_t Print::print(unsigned char b, int base)\n{\n  return print((unsigned long) b, base);\n}\n\nsize_t Print::print(int n, int base)\n{\n  return print((long) n, base);\n}\n\nsize_t Print::print(unsigned int n, int base)\n{\n  return print((unsigned long) n, base);\n}\n\nsize_t Print::print(long n, int base)\n{\n  if (base == 0) {\n    return write(n);\n  } else if (base == 10) {\n    if (n \u003c 0) {\n      int t = print('-');\n      n = -n;\n      return printNumber(n, 10) + t;\n    }\n    return printNumber(n, 10);\n  } else {\n    return printNumber(n, base);\n  }\n}\n\nsize_t Print::print(unsigned long n, int base)\n{\n  if (base == 0) return write(n);\n  else return printNumber(n, base);\n}\n\nsize_t Print::print(double n, int digits)\n{\n  return printFloat(n, digits);\n}\n\nsize_t Print::println(const __FlashStringHelper *ifsh)\n{\n  size_t n = print(ifsh);\n  n += println();\n  return n;\n}\n\nsize_t Print::print(const Printable\u0026 x)\n{\n  return x.printTo(*this);\n}\n\nsize_t Print::println(void)\n{\n  return write(\"\\r\\n\");\n}\n\nsize_t Print::println(const String \u0026s)\n{\n  size_t n = print(s);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const char c[])\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(char c)\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned char b, int base)\n{\n  size_t n = print(b, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(double num, int digits)\n{\n  size_t n = print(num, digits);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const Printable\u0026 x)\n{\n  size_t n = print(x);\n  n += println();\n  return n;\n}\n\n// Private Methods /////////////////////////////////////////////////////////////\n\nsize_t Print::printNumber(unsigned long n, uint8_t base)\n{\n  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.\n  char *str = \u0026buf[sizeof(buf) - 1];\n\n  *str = '\\0';\n\n  // prevent crash if called with base == 1\n  if (base \u003c 2) base = 10;\n\n  do {\n    char c = n % base;\n    n /= base;\n\n    *--str = c \u003c 10 ? c + '0' : c + 'A' - 10;\n  } while(n);\n\n  return write(str);\n}\n\nsize_t Print::printFloat(double number, uint8_t digits) \n{ \n  size_t n = 0;\n  \n  if (isnan(number)) return print(\"nan\");\n  if (isinf(number)) return print(\"inf\");\n  if (number \u003e 4294967040.0) return print (\"ovf\");  // constant determined empirically\n  if (number \u003c-4294967040.0) return print (\"ovf\");  // constant determined empirically\n  \n  // Handle negative numbers\n  if (number \u003c 0.0)\n  {\n     n += print('-');\n     number = -number;\n  }\n\n  // Round correctly so that print(1.999, 2) prints as \"2.00\"\n  double rounding = 0.5;\n  for (uint8_t i=0; i\u003cdigits; ++i)\n    rounding /= 10.0;\n  \n  number += rounding;\n\n  // Extract the integer part of the number and print it\n  unsigned long int_part = (unsigned long)number;\n  double remainder = number - (double)int_part;\n  n += print(int_part);\n\n  // Print the decimal point, but only if there are digits beyond\n  if (digits \u003e 0) {\n    n += print('.'); \n  }\n\n  // Extract digits from the remainder one at a time\n  while (digits-- \u003e 0)\n  {\n    remainder *= 10.0;\n    unsigned int toPrint = (unsigned int)(remainder);\n    n += print(toPrint);\n    remainder -= toPrint; \n  } \n  \n  return n;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":9}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":151,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":40,"character":10},"end":{"line":40,"character":10}},"context":{"diagnostics":[]}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":152,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":29}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 390

{"id":153,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":2,"range":{"end":{"character":21,"line":19},"start":{"character":10,"line":19}}},{"kind":2,"range":{"end":{"character":36,"line":34},"start":{"character":25,"line":34}}},{"kind":2,"range":{"end":{"character":36,"line":37},"start":{"character":25,"line":37}}}]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":37,"character":25},"end":{"line":37,"character":36}},"context":{"diagnostics":[]}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":154,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":34}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":155,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `thirdKeyPin`  \n\n---\nType: `int`  \nValue = `4`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint thirdKeyPin = 4\n```"},"range":{"end":{"character":36,"line":37},"start":{"character":25,"line":37}}}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":40,"character":10},"end":{"line":40,"character":10}},"context":{"diagnostics":[]}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":156,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":18}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"id":157,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":18,"line":38},"start":{"character":11,"line":38}}}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":22}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":158,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":23}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":159,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":23}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":160,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":22},"end":{"line":39,"character":25}},"context":{"diagnostics":[]}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 449

{"id":161,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":25,"line":39},"start":{"character":22,"line":39}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":39}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":162,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":44}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"id":163,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"end":{"character":44,"line":34},"start":{"character":41,"line":34}}}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":14}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 287

{"id":164,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":24,"line":37},"start":{"character":13,"line":37}}}}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":25}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 389

{"id":165,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":30},"start":{"character":6,"line":30}}},{"kind":1,"range":{"end":{"character":10,"line":33},"start":{"character":6,"line":33}}},{"kind":1,"range":{"end":{"character":10,"line":36},"start":{"character":6,"line":36}}},{"kind":1,"range":{"end":{"character":10,"line":39},"start":{"character":6,"line":39}}}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":24}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":166,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":22},"end":{"line":39,"character":25}},"context":{"diagnostics":[]}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 449

{"id":167,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":25,"line":39},"start":{"character":22,"line":39}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 355

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":82},"contentChanges":[{"range":{"start":{"line":39,"character":22},"end":{"line":39,"character":25}},"rangeLength":3,"text":"460"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp","version":82}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server010929113/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":25},"end":{"line":39,"character":25}},"context":{"diagnostics":[]}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":168,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 60

{"method":"shutdown","params":null,"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":169,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":62572,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1660

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\n\nint buzzerPin = 10;\n\n\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 20 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n\n  //set the buzzer pin as an output\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    Serial.println(\"This\");\n      tone(buzzerPin, 262);\n  } else if (digitalRead(secondKeyPin) == LOW) {\n    Serial.println(\"This\");\n      tone(buzzerPin, 330);\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    Serial.println(\"This\");\n      tone(buzzerPin, 392);\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    Serial.println(\"This\");\n      tone(buzzerPin, 460);\n  } else {\n    noTone(buzzerPin);\n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}},"jsonrpc":"2.0"}Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":25},"end":{"line":39,"character":25}},"context":{"diagnostics":[]}},"id":1,"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 36

{"id":1,"jsonrpc":"2.0","result":[]}Content-Length: 1556

{"id":2,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":7},"start":{"character":0,"line":7}},"selectionRange":{"end":{"character":13,"line":7},"start":{"character":4,"line":7}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":11},"start":{"character":0,"line":11}},"selectionRange":{"end":{"character":10,"line":11},"start":{"character":5,"line":11}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":9,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":24},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":10,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":43},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}}]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 254

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":5,"character":19}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":3,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 254

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":5,"character":19}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":5,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":20}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":20}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"context":{"diagnostics":[]}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 254

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":5,"character":20}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":9,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"text":"\n"}]},"jsonrpc":"2.0"}Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":0}},"text":"int thirdKeyPin = 4;"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 668

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"redefinition","message":"Redefinition of 'thirdKeyPin'\n\nDigitalTrumpet.ino.cpp:6:5: note: previous definition is here","range":{"end":{"character":15,"line":6},"start":{"character":4,"line":6}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nDigitalTrumpet.ino.cpp:7:5: error: redefinition of 'thirdKeyPin'","range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":3}}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":5,"character":19}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":20},"end":{"line":6,"character":20}},"context":{"diagnostics":[]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":6,"character":17}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":12,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":6,"character":17}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":13,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":6,"character":11}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 475

{"id":14,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":1,"range":{"end":{"character":15,"line":6},"start":{"character":4,"line":6}}},{"kind":2,"range":{"end":{"character":21,"line":20},"start":{"character":10,"line":20}}},{"kind":2,"range":{"end":{"character":36,"line":35},"start":{"character":25,"line":35}}},{"kind":2,"range":{"end":{"character":36,"line":38},"start":{"character":25,"line":38}}}]}
>>>
Content-Length: 1688

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":4},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint thirdKeyPin = 4;\n\nint buzzerPin = 10;\n\n\n#line 10 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 21 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 10 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n\n  //set the buzzer pin as an output\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    Serial.println(\"This\");\n      tone(buzzerPin, 262);\n  } else if (digitalRead(secondKeyPin) == LOW) {\n    Serial.println(\"This\");\n      tone(buzzerPin, 330);\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    Serial.println(\"This\");\n      tone(buzzerPin, 392);\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    Serial.println(\"This\");\n      tone(buzzerPin, 460);\n  } else {\n    noTone(buzzerPin);\n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}]},"jsonrpc":"2.0"}Content-Length: 563

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}},"severity":1,"code":"redefinition","source":"clang","message":"Redefinition of 'thirdKeyPin'\n\nDigitalTrumpet.ino.cpp:6:5: note: previous definition is here"}]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}Content-Length: 668

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"redefinition","message":"Redefinition of 'thirdKeyPin'\n\nDigitalTrumpet.ino.cpp:6:5: note: previous definition is here","range":{"end":{"character":15,"line":6},"start":{"character":4,"line":6}},"severity":1,"source":"clang"},{"message":"Previous definition is here\n\nDigitalTrumpet.ino.cpp:7:5: error: redefinition of 'thirdKeyPin'","range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":4}}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 1749

{"id":16,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":15,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":15,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":44},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":9,"line":27},"start":{"character":5,"line":27}}}]}
>>>
Content-Length: 562

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}},"context":{"diagnostics":[{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}},"severity":1,"code":"redefinition","source":"clang","message":"Redefinition of 'thirdKeyPin'\n\nDigitalTrumpet.ino.cpp:6:5: note: previous definition is here"}]}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":17,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":6,"character":14}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":18,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `thirdKeyPin`  \n\n---\nType: `int`  \n\n---\n```cpp\npublic: int thirdKeyPin\n```"},"range":{"end":{"character":15,"line":6},"start":{"character":4,"line":6}}}}
>>>
Content-Length: 562

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}},"context":{"diagnostics":[{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}},"severity":1,"code":"redefinition","source":"clang","message":"Redefinition of 'thirdKeyPin'\n\nDigitalTrumpet.ino.cpp:6:5: note: previous definition is here"}]}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":19,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}},"rangeLength":11,"text":"f"}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":17},"jsonrpc":"2.0"}Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":6,"character":5},"end":{"line":6,"character":5}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":6}}
>>>
Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":6,"character":6},"end":{"line":6,"character":6}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":7}}
>>>
Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":7}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":8}}
>>>
Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}},"text":"h"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":9}}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":9}},"context":{"diagnostics":[]}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":20,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 348

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":10}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":11}}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":9}},"context":{"diagnostics":[]}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":21,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 348

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":12}}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}},"context":{"diagnostics":[]}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":22,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 348

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":13}}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":7}},"context":{"diagnostics":[]}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":23,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":7}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":14}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}},"text":"h"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":15}}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":9}},"context":{"diagnostics":[]}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":24,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":9}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":16}}
>>>
Content-Length: 349

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":10}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":17}}
>>>
Content-Length: 348

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":18}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":19}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":9}},"text":"h"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":20}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":10}},"context":{"diagnostics":[]}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":25,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":10}},"text":"K"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":21}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":11}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":22}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":12}},"text":"y"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":23}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},"context":{"diagnostics":[]}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":26,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},"text":"O"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":24}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":14},"end":{"line":6,"character":14}},"context":{"diagnostics":[]}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":27,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":6,"character":14},"end":{"line":6,"character":14}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":25}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":28,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":6,"character":14},"end":{"line":6,"character":15}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":26}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":6,"character":13},"end":{"line":6,"character":14}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":27}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},"context":{"diagnostics":[]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},"text":"P"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":28}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":14},"end":{"line":6,"character":14}},"context":{"diagnostics":[]}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":30,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":6,"character":14},"end":{"line":6,"character":14}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":29}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":30}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":16}},"context":{"diagnostics":[]}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":31,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":6,"character":20}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":32,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":20},"end":{"line":6,"character":20}},"context":{"diagnostics":[]}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":33,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":6,"character":19},"end":{"line":6,"character":20}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 404

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":20,"line":6},"start":{"character":19,"line":6}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":31}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":6,"character":19},"end":{"line":6,"character":19}},"text":"5"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":32}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":20},"end":{"line":6,"character":20}},"context":{"diagnostics":[]}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":34,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":6,"character":14}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":35,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":6,"character":15}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":36,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":19,"character":36}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":37,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":44},"start":{"character":8,"line":44}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":4}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":38,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":3},"end":{"line":38,"character":4}},"context":{"diagnostics":[]}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":39,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":10}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":40,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":11}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":41,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":11},"end":{"line":38,"character":11}},"context":{"diagnostics":[]}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":42,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":31}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"id":43,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `thirdKeyPin`  \n\n---\nType: `int`  \nValue = `4`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint thirdKeyPin = 4\n```"},"range":{"end":{"character":36,"line":38},"start":{"character":25,"line":38}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":31}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 389

{"id":44,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":2,"range":{"end":{"character":21,"line":20},"start":{"character":10,"line":20}}},{"kind":2,"range":{"end":{"character":36,"line":35},"start":{"character":25,"line":35}}},{"kind":2,"range":{"end":{"character":36,"line":38},"start":{"character":25,"line":38}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":36}},"context":{"diagnostics":[]}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":45,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 354

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":36}},"rangeLength":11,"text":"f"}]},"jsonrpc":"2.0"}Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":34},"contentChanges":[{"range":{"start":{"line":38,"character":26},"end":{"line":38,"character":26}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fo'","range":{"end":{"character":27,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":34}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fou'","range":{"end":{"character":28,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":35}}
>>>
Content-Length: 514

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":28},"end":{"line":38,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":28}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fou'"}]}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":46,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 1750

{"id":47,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":44},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":9,"line":27},"start":{"character":5,"line":27}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":38,"character":28},"end":{"line":38,"character":28}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 421

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'four'","range":{"end":{"character":29,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":36}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":38,"character":29},"end":{"line":38,"character":29}},"text":"h"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourh'","range":{"end":{"character":30,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":37}}
>>>
Content-Length: 516

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":30},"end":{"line":38,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":30}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fourh'"}]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 1750

{"id":49,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":44},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":9,"line":27},"start":{"character":5,"line":27}}}]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":38,"character":29},"end":{"line":38,"character":30}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 421

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'four'","range":{"end":{"character":29,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":38}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":38,"character":29},"end":{"line":38,"character":29}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourt'","range":{"end":{"character":30,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":39}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":38,"character":30},"end":{"line":38,"character":30}},"text":"h"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourth'","range":{"end":{"character":31,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":40}}
>>>
Content-Length: 517

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":31},"end":{"line":38,"character":31}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fourth'"}]}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":50,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 1750

{"id":51,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":44},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":9,"line":27},"start":{"character":5,"line":27}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":38,"character":31},"end":{"line":38,"character":31}},"text":"K"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourthK'","range":{"end":{"character":32,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":41}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":38,"character":32},"end":{"line":38,"character":32}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourthKe'","range":{"end":{"character":33,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":42}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":38,"character":33},"end":{"line":38,"character":33}},"text":"y"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 788

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fourthKey'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here","range":{"end":{"character":34,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"},{"message":"'fourthKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:39:26: error: use of undeclared identifier 'fourthKey'; did you mean 'fourthKeyPin'?","range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":43}}
>>>
Content-Length: 640

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":34},"end":{"line":38,"character":34}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":34}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'fourthKey'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here"}]}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 706

{"id":52,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fourthKey'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here","range":{"end":{"character":34,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp":[{"newText":"fourthKeyPin","range":{"end":{"character":34,"line":38},"start":{"character":25,"line":38}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'fourthKey' to 'fourthKeyPin'"}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":38,"character":34},"end":{"line":38,"character":34}},"text":"P"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 790

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fourthKeyP'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here","range":{"end":{"character":35,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"},{"message":"'fourthKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:39:26: error: use of undeclared identifier 'fourthKeyP'; did you mean 'fourthKeyPin'?","range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":44}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":38,"character":35},"end":{"line":38,"character":35}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 792

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fourthKeyPi'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here","range":{"end":{"character":36,"line":38},"start":{"character":25,"line":38}},"severity":1,"source":"clang"},{"message":"'fourthKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:39:26: error: use of undeclared identifier 'fourthKeyPi'; did you mean 'fourthKeyPin'?","range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":45}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":38,"character":36},"end":{"line":38,"character":36}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":46}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":37},"end":{"line":38,"character":37}},"context":{"diagnostics":[]}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":53,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 1750

{"id":54,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":44},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":9,"line":27},"start":{"character":5,"line":27}}}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":20}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":55,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":21}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":56,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":27},"end":{"line":39,"character":27}},"context":{"diagnostics":[]}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":57,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":0},"end":{"line":39,"character":27}},"context":{"diagnostics":[]}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":58,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":27},"end":{"line":40,"character":0}},"context":{"diagnostics":[]}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":59,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":0},"end":{"line":39,"character":27}},"context":{"diagnostics":[]}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":60,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":24}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":61,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":20},"end":{"line":39,"character":24}},"context":{"diagnostics":[]}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 448

{"id":62,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":24,"line":39},"start":{"character":20,"line":39}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":23}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":63,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":22}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 286

{"id":64,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":24,"line":38},"start":{"character":13,"line":38}}}}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":39,"character":20},"end":{"line":39,"character":24}},"rangeLength":4,"text":"4"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":47}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":22}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":65,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":21},"end":{"line":39,"character":21}},"context":{"diagnostics":[]}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":66,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":22}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":67,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":24}},"context":{"diagnostics":[]}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 448

{"id":68,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":24,"line":36},"start":{"character":20,"line":36}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":22}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":69,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":36,"character":20},"end":{"line":36,"character":24}},"rangeLength":4,"text":"3"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":48}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":21},"end":{"line":36,"character":21}},"context":{"diagnostics":[]}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":70,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":22}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":71,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":23}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":72,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":33,"character":23},"end":{"line":33,"character":23}},"context":{"diagnostics":[]}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":73,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":33,"character":23},"end":{"line":33,"character":23}},"text":"2"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":49}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":23}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 286

{"id":74,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":24,"line":32},"start":{"character":13,"line":32}}}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":33,"character":24},"end":{"line":33,"character":24}},"context":{"diagnostics":[]}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":75,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":22}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":76,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":23}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":77,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":22}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":78,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":50},"contentChanges":[{"range":{"start":{"line":33,"character":23},"end":{"line":33,"character":24}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":50}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":33,"character":23},"end":{"line":33,"character":23}},"context":{"diagnostics":[]}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":79,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":24}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":80,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":24}},"context":{"diagnostics":[]}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 448

{"id":81,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":24,"line":33},"start":{"character":20,"line":33}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":33,"character":20},"end":{"line":33,"character":24}},"rangeLength":4,"text":"2"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":51}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":31,"character":22}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":82,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":33,"character":21},"end":{"line":33,"character":21}},"context":{"diagnostics":[]}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":83,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":31,"character":23}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":84,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":31,"character":23},"end":{"line":31,"character":23}},"context":{"diagnostics":[]}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":85,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":30,"character":22}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":86,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":30,"character":23}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":87,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":52},"contentChanges":[{"range":{"start":{"line":30,"character":20},"end":{"line":30,"character":24}},"rangeLength":4,"text":"1"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":52}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":21}},"context":{"diagnostics":[]}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":88,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":30,"character":23}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 314

{"id":89,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":24,"line":30},"start":{"character":23,"line":30}}}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":43,"character":3},"end":{"line":43,"character":3}},"context":{"diagnostics":[]}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":90,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":25}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":91,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":242},"start":{"character":5,"line":242}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":24}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":92,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":17}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":93,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":25}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":94,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":242},"start":{"character":5,"line":242}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":24}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":95,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":24}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":96,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":22}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":97,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":23}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":98,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":22}},"context":{"diagnostics":[]}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":99,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":13}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":100,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":55,"character":13}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":101,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":55,"character":11}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":102,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":12}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":103,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":13}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":104,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":31,"character":11}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":105,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `buzzerPin`  \n\n---\nType: `int`  \nValue = `10`  \nPassed as \\_pin (converted to uint8_t)  \n\n---\n```cpp\nint buzzerPin = 10\n```"},"range":{"end":{"character":20,"line":31},"start":{"character":11,"line":31}}}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":37}},"context":{"diagnostics":[]}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":106,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":20,"character":2},"end":{"line":20,"character":37}},"context":{"diagnostics":[]}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":107,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":20,"character":21}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 229

{"id":108,"jsonrpc":"2.0","result":[{"range":{"end":{"character":12,"line":28},"start":{"character":5,"line":28}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}]}
>>>
Content-Length: 5753

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out \u0026= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out \u0026= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) \u0026 bit) return HIGH;\n\treturn LOW;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":20,"character":31}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":109,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":44},"start":{"character":8,"line":44}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":20,"character":37},"end":{"line":20,"character":37}},"context":{"diagnostics":[]}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":110,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":20,"character":36},"end":{"line":20,"character":36}},"context":{"diagnostics":[]}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":111,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":20,"character":37},"end":{"line":20,"character":37}},"context":{"diagnostics":[]}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":112,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 340

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":53},"contentChanges":[{"range":{"start":{"line":20,"character":37},"end":{"line":20,"character":37}},"text":"\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":53}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":54}}
>>>
Content-Length: 369

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":0}},"text":"pinMode(thirdKeyPin, INPUT_PULLUP);"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":55}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":21,"character":35},"end":{"line":21,"character":35}},"context":{"diagnostics":[]}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":113,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":21,"character":33}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":114,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":44},"start":{"character":8,"line":44}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":21,"character":16}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 389

{"id":115,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":2,"range":{"end":{"character":21,"line":20},"start":{"character":10,"line":20}}},{"kind":2,"range":{"end":{"character":19,"line":21},"start":{"character":8,"line":21}}},{"kind":2,"range":{"end":{"character":36,"line":36},"start":{"character":25,"line":36}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":19}},"context":{"diagnostics":[]}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":116,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":20,"character":14}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":117,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `thirdKeyPin`  \n\n---\nType: `int`  \nValue = `4`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint thirdKeyPin = 4\n```"},"range":{"end":{"character":21,"line":20},"start":{"character":10,"line":20}}}}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":19}},"rangeLength":11,"text":"f"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'f'","range":{"end":{"character":9,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":56}}
>>>
Content-Length: 509

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":21,"character":9},"end":{"line":21,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'f'"}]}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":118,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 1751

{"id":119,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":45},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":21,"character":9},"end":{"line":21,"character":9}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fo'","range":{"end":{"character":10,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":57}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":21,"character":10},"end":{"line":21,"character":10}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fou'; did you mean 'for'? (fix available)","range":{"end":{"character":11,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":11,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":58}}
>>>
Content-Length: 729

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":21,"character":11},"end":{"line":21,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":11}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'fou'; did you mean 'for'? (fix available)"},{"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":11}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 600

{"id":120,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fou'; did you mean 'for'? (fix available)","range":{"end":{"character":11,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp":[{"newText":"for","range":{"end":{"character":11,"line":21},"start":{"character":8,"line":21}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'fou' to 'for'"}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":21,"character":11},"end":{"line":21,"character":11}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 635

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'four'; did you mean 'for'? (fix available)","range":{"end":{"character":12,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":12,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":59}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":60},"contentChanges":[{"range":{"start":{"line":21,"character":12},"end":{"line":21,"character":12}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 421

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourt'","range":{"end":{"character":13,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":60}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":61},"contentChanges":[{"range":{"start":{"line":21,"character":13},"end":{"line":21,"character":13}},"text":"h"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourth'","range":{"end":{"character":14,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":61}}
>>>
Content-Length: 517

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":21,"character":14},"end":{"line":21,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fourth'"}]}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":121,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 1751

{"id":122,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":45},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":21,"character":14},"end":{"line":21,"character":14}},"text":"K"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourthK'","range":{"end":{"character":15,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":62}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":63},"contentChanges":[{"range":{"start":{"line":21,"character":15},"end":{"line":21,"character":15}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'fourthKe'","range":{"end":{"character":16,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":63}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":64},"contentChanges":[{"range":{"start":{"line":21,"character":16},"end":{"line":21,"character":16}},"text":"y"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 786

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fourthKey'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here","range":{"end":{"character":17,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"},{"message":"'fourthKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:22:9: error: use of undeclared identifier 'fourthKey'; did you mean 'fourthKeyPin'?","range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":64}}
>>>
Content-Length: 640

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":21,"character":17},"end":{"line":21,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":17}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'fourthKey'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here"}]}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 705

{"id":123,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fourthKey'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here","range":{"end":{"character":17,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp":[{"newText":"fourthKeyPin","range":{"end":{"character":17,"line":21},"start":{"character":8,"line":21}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'fourthKey' to 'fourthKeyPin'"}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":65},"contentChanges":[{"range":{"start":{"line":21,"character":17},"end":{"line":21,"character":17}},"text":"P"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 788

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fourthKeyP'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here","range":{"end":{"character":18,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"},{"message":"'fourthKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:22:9: error: use of undeclared identifier 'fourthKeyP'; did you mean 'fourthKeyPin'?","range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":65}}
>>>
Content-Length: 641

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":21,"character":18},"end":{"line":21,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":18}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'fourthKeyP'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here"}]}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 707

{"id":124,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fourthKeyP'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here","range":{"end":{"character":18,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp":[{"newText":"fourthKeyPin","range":{"end":{"character":18,"line":21},"start":{"character":8,"line":21}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'fourthKeyP' to 'fourthKeyPin'"}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":66},"contentChanges":[{"range":{"start":{"line":21,"character":18},"end":{"line":21,"character":18}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 790

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'fourthKeyPi'; did you mean 'fourthKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:7:5: note: 'fourthKeyPin' declared here","range":{"end":{"character":19,"line":21},"start":{"character":8,"line":21}},"severity":1,"source":"clang"},{"message":"'fourthKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:22:9: error: use of undeclared identifier 'fourthKeyPi'; did you mean 'fourthKeyPin'?","range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":66}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":67},"contentChanges":[{"range":{"start":{"line":21,"character":19},"end":{"line":21,"character":19}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":67}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":21,"character":20},"end":{"line":21,"character":20}},"context":{"diagnostics":[]}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":125,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 1751

{"id":126,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":45},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}
>>>
Content-Length: 391

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":68},"contentChanges":[{"range":{"start":{"line":21,"character":0},"end":{"line":22,"character":0}},"rangeLength":37,"text":"pinMode(fourthKeyPin, INPUT_PULLUP);  \n"}]},"jsonrpc":"2.0"}Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":20,"character":15}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":127,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":68}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":20,"character":15}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":128,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `thirdKeyPin`  \n\n---\nType: `int`  \nValue = `4`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint thirdKeyPin = 4\n```"},"range":{"end":{"character":21,"line":20},"start":{"character":10,"line":20}}}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":24,"character":15}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":129,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":24,"character":15}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"id":130,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `buzzerPin`  \n\n---\nType: `int`  \nValue = `10`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint buzzerPin = 10\n```"},"range":{"end":{"character":19,"line":24},"start":{"character":10,"line":24}}}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":23,"character":17}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":131,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":21,"character":14}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":132,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":21,"character":13}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":133,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `fourthKeyPin`  \n\n---\nType: `int`  \nValue = `5`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint fourthKeyPin = 5\n```"},"range":{"end":{"character":20,"line":21},"start":{"character":8,"line":21}}}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":21,"character":14}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":134,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `fourthKeyPin`  \n\n---\nType: `int`  \nValue = `5`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint fourthKeyPin = 5\n```"},"range":{"end":{"character":20,"line":21},"start":{"character":8,"line":21}}}}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":21,"character":15}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"id":135,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":2,"range":{"end":{"character":20,"line":21},"start":{"character":8,"line":21}}},{"kind":2,"range":{"end":{"character":37,"line":39},"start":{"character":25,"line":39}}}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":21,"character":15}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":136,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":21,"character":14}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":137,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `fourthKeyPin`  \n\n---\nType: `int`  \nValue = `5`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint fourthKeyPin = 5\n```"},"range":{"end":{"character":20,"line":21},"start":{"character":8,"line":21}}}}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":4}},"context":{"diagnostics":[]}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":138,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":21,"character":14}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":139,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `fourthKeyPin`  \n\n---\nType: `int`  \nValue = `5`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint fourthKeyPin = 5\n```"},"range":{"end":{"character":20,"line":21},"start":{"character":8,"line":21}}}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":43,"character":22},"end":{"line":43,"character":22}},"context":{"diagnostics":[]}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":140,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":19}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":141,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":16}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":142,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `buzzerPin`  \n\n---\nType: `int`  \nValue = `10`  \nPassed as \\_pin (converted to uint8_t)  \n\n---\n```cpp\nint buzzerPin = 10\n```"},"range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}}}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":2}},"context":{"diagnostics":[]}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":143,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":15}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":144,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":9}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":145,"jsonrpc":"2.0","result":[{"range":{"end":{"character":11,"line":479},"start":{"character":5,"line":479}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":8}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":146,"jsonrpc":"2.0","result":[{"range":{"end":{"character":11,"line":479},"start":{"character":5,"line":479}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":8}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 125

{"id":147,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":43},"start":{"character":4,"line":43}}}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":8}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":148,"jsonrpc":"2.0","result":[{"range":{"end":{"character":11,"line":479},"start":{"character":5,"line":479}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":43,"character":8},"end":{"line":43,"character":8}},"context":{"diagnostics":[]}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":149,"jsonrpc":"2.0","result":[]}Content-Length: 205

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","version":1}}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"},"position":{"line":501,"character":8}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":150,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"},"position":{"line":501,"character":7}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":151,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"},"position":{"line":493,"character":15}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"id":152,"jsonrpc":"2.0","result":[{"range":{"end":{"character":24,"line":479},"start":{"character":20,"line":479}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 228

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"},"position":{"line":493,"character":15}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 268

{"id":153,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### param `_pin`  \n\n---\nType: `uint8_t`  \nPassed as pin  \n\n---\n```cpp\n// In noTone\nuint8_t _pin\n```"},"range":{"end":{"character":19,"line":493},"start":{"character":15,"line":493}}}}
>>>
Content-Length: 233

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"},"position":{"line":491,"character":17}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":154,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":481},"start":{"character":9,"line":481}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":31,"character":18}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}Content-Length: 225

{"id":155,"jsonrpc":"2.0","result":[{"range":{"end":{"character":21,"line":137},"start":{"character":14,"line":137}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}]}
>>>
Content-Length: 6071

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp","languageId":"cpp","version":1,"text":"/*\n Print.cpp - Base class that provides print() and println()\n Copyright (c) 2008 David A. Mellis.  All right reserved.\n \n This library is free software; you can redistribute it and/or\n modify it under the terms of the GNU Lesser General Public\n License as published by the Free Software Foundation; either\n version 2.1 of the License, or (at your option) any later version.\n \n This library is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Lesser General Public License for more details.\n \n You should have received a copy of the GNU Lesser General Public\n License along with this library; if not, write to the Free Software\n Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n \n Modified 23 November 2006 by David A. Mellis\n Modified 03 August 2015 by Chuck Todd\n */\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \"Arduino.h\"\n\n#include \"Print.h\"\n\n// Public Methods //////////////////////////////////////////////////////////////\n\n/* default implementation: may be overridden */\nsize_t Print::write(const uint8_t *buffer, size_t size)\n{\n  size_t n = 0;\n  while (size--) {\n    if (write(*buffer++)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const __FlashStringHelper *ifsh)\n{\n  PGM_P p = reinterpret_cast\u003cPGM_P\u003e(ifsh);\n  size_t n = 0;\n  while (1) {\n    unsigned char c = pgm_read_byte(p++);\n    if (c == 0) break;\n    if (write(c)) n++;\n    else break;\n  }\n  return n;\n}\n\nsize_t Print::print(const String \u0026s)\n{\n  return write(s.c_str(), s.length());\n}\n\nsize_t Print::print(const char str[])\n{\n  return write(str);\n}\n\nsize_t Print::print(char c)\n{\n  return write(c);\n}\n\nsize_t Print::print(unsigned char b, int base)\n{\n  return print((unsigned long) b, base);\n}\n\nsize_t Print::print(int n, int base)\n{\n  return print((long) n, base);\n}\n\nsize_t Print::print(unsigned int n, int base)\n{\n  return print((unsigned long) n, base);\n}\n\nsize_t Print::print(long n, int base)\n{\n  if (base == 0) {\n    return write(n);\n  } else if (base == 10) {\n    if (n \u003c 0) {\n      int t = print('-');\n      n = -n;\n      return printNumber(n, 10) + t;\n    }\n    return printNumber(n, 10);\n  } else {\n    return printNumber(n, base);\n  }\n}\n\nsize_t Print::print(unsigned long n, int base)\n{\n  if (base == 0) return write(n);\n  else return printNumber(n, base);\n}\n\nsize_t Print::print(double n, int digits)\n{\n  return printFloat(n, digits);\n}\n\nsize_t Print::println(const __FlashStringHelper *ifsh)\n{\n  size_t n = print(ifsh);\n  n += println();\n  return n;\n}\n\nsize_t Print::print(const Printable\u0026 x)\n{\n  return x.printTo(*this);\n}\n\nsize_t Print::println(void)\n{\n  return write(\"\\r\\n\");\n}\n\nsize_t Print::println(const String \u0026s)\n{\n  size_t n = print(s);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const char c[])\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(char c)\n{\n  size_t n = print(c);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned char b, int base)\n{\n  size_t n = print(b, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned int num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(unsigned long num, int base)\n{\n  size_t n = print(num, base);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(double num, int digits)\n{\n  size_t n = print(num, digits);\n  n += println();\n  return n;\n}\n\nsize_t Print::println(const Printable\u0026 x)\n{\n  size_t n = print(x);\n  n += println();\n  return n;\n}\n\n// Private Methods /////////////////////////////////////////////////////////////\n\nsize_t Print::printNumber(unsigned long n, uint8_t base)\n{\n  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.\n  char *str = \u0026buf[sizeof(buf) - 1];\n\n  *str = '\\0';\n\n  // prevent crash if called with base == 1\n  if (base \u003c 2) base = 10;\n\n  do {\n    char c = n % base;\n    n /= base;\n\n    *--str = c \u003c 10 ? c + '0' : c + 'A' - 10;\n  } while(n);\n\n  return write(str);\n}\n\nsize_t Print::printFloat(double number, uint8_t digits) \n{ \n  size_t n = 0;\n  \n  if (isnan(number)) return print(\"nan\");\n  if (isinf(number)) return print(\"inf\");\n  if (number \u003e 4294967040.0) return print (\"ovf\");  // constant determined empirically\n  if (number \u003c-4294967040.0) return print (\"ovf\");  // constant determined empirically\n  \n  // Handle negative numbers\n  if (number \u003c 0.0)\n  {\n     n += print('-');\n     number = -number;\n  }\n\n  // Round correctly so that print(1.999, 2) prints as \"2.00\"\n  double rounding = 0.5;\n  for (uint8_t i=0; i\u003cdigits; ++i)\n    rounding /= 10.0;\n  \n  number += rounding;\n\n  // Extract the integer part of the number and print it\n  unsigned long int_part = (unsigned long)number;\n  double remainder = number - (double)int_part;\n  n += print(int_part);\n\n  // Print the decimal point, but only if there are digits beyond\n  if (digits \u003e 0) {\n    n += print('.'); \n  }\n\n  // Extract digits from the remainder one at a time\n  while (digits-- \u003e 0)\n  {\n    remainder *= 10.0;\n    unsigned int toPrint = (unsigned int)(remainder);\n    n += print(toPrint);\n    remainder -= toPrint; \n  } \n  \n  return n;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Print.cpp"}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":25}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":156,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":242},"start":{"character":5,"line":242}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":31,"character":24},"end":{"line":31,"character":24}},"context":{"diagnostics":[]}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":157,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":21}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":158,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":9}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":159,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":242},"start":{"character":5,"line":242}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":8}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 389

{"id":160,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":32},"start":{"character":6,"line":32}}},{"kind":1,"range":{"end":{"character":10,"line":35},"start":{"character":6,"line":35}}},{"kind":1,"range":{"end":{"character":10,"line":38},"start":{"character":6,"line":38}}},{"kind":1,"range":{"end":{"character":10,"line":41},"start":{"character":6,"line":41}}}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":8}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":161,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":242},"start":{"character":5,"line":242}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":8},"end":{"line":38,"character":8}},"context":{"diagnostics":[]}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":162,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":8}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":163,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":242},"start":{"character":5,"line":242}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","version":1}}
>>>
Content-Length: 232

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"},"position":{"line":259,"character":8}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"id":164,"jsonrpc":"2.0","result":[{"range":{"end":{"character":14,"line":246},"start":{"character":11,"line":246}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"},"position":{"line":259,"character":8}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 269

{"id":165,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `ocr`  \n\n---\nType: `uint32_t`  \nValue = `0`  \n\n---\n```cpp\n// In tone\nuint32_t ocr = 0\n```"},"range":{"end":{"character":9,"line":259},"start":{"character":6,"line":259}}}}
>>>
Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":27},"end":{"line":41,"character":27}},"context":{"diagnostics":[]}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":166,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":23,"character":23}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":167,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":22}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 315

{"id":168,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\nâ†’ `size_t`  \nParameters:  \n- `const char *`\n\n---\n```cpp\n// In Print\npublic: size_t println(const char[])\n```"},"range":{"end":{"character":23,"line":40},"start":{"character":22,"line":40}}}}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":23}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":169,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":25}},"context":{"diagnostics":[]}},"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 449

{"id":170,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":25,"line":41},"start":{"character":22,"line":41}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":23}},"id":171,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":171,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":17}},"id":172,"jsonrpc":"2.0"}
<<<
Content-Length: 287

{"id":172,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":24,"line":36},"start":{"character":13,"line":36}}}}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":69},"contentChanges":[{"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":25}},"rangeLength":3,"text":"4"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":69}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":23}},"context":{"diagnostics":[]}},"id":173,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":173,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":23}},"text":"0"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":70}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":24},"end":{"line":41,"character":24}},"context":{"diagnostics":[]}},"id":174,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":174,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":24}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":71}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":72},"contentChanges":[{"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":23}},"text":"6"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":72}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":24},"end":{"line":41,"character":24}},"context":{"diagnostics":[]}},"id":175,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":175,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":24}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":73}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":23}},"context":{"diagnostics":[]}},"id":176,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":176,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":23}},"text":"0"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":74}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":24},"end":{"line":41,"character":24}},"context":{"diagnostics":[]}},"id":177,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":177,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 461

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":24}},"rangeLength":1,"text":""},{"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":23}},"rangeLength":1,"text":"460"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":76}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":25}},"context":{"diagnostics":[]}},"id":178,"jsonrpc":"2.0"}
<<<
Content-Length: 449

{"id":178,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":25,"line":41},"start":{"character":22,"line":41}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":22}},"id":179,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":179,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":22}},"context":{"diagnostics":[]}},"id":180,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":180,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":25},"end":{"line":41,"character":25}},"context":{"diagnostics":[]}},"id":181,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":181,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":41,"character":24},"end":{"line":41,"character":25}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":77}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":24}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":78}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":23}},"context":{"diagnostics":[]}},"id":182,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":182,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":79},"contentChanges":[{"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":23}},"text":"5"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":79}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":41,"character":24},"end":{"line":41,"character":24}},"text":"8"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp","version":80}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":25},"end":{"line":41,"character":25}},"context":{"diagnostics":[]}},"id":183,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":183,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":16}},"id":184,"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"id":184,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":164},"start":{"character":4,"line":164}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}]}
>>>
Content-Length: 5753

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out \u0026= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out \u0026= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) \u0026 bit) return HIGH;\n\treturn LOW;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":30,"character":25}},"id":185,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":185,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":30}},"id":186,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":186,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":21}},"id":187,"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"id":187,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":164},"start":{"character":4,"line":164}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}]}
>>>
Content-Length: 5753

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out \u0026= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out \u0026= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) \u0026 bit) return HIGH;\n\treturn LOW;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":20}},"id":188,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":188,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":26}},"id":189,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":189,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":25}},"id":190,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":190,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":242},"start":{"character":5,"line":242}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":23}},"id":191,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":191,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":22}},"id":192,"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"id":192,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":164},"start":{"character":4,"line":164}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}]}
>>>
Content-Length: 5753

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out \u0026= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out \u0026= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) \u0026 bit) return HIGH;\n\treturn LOW;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":21}},"id":193,"jsonrpc":"2.0"}
<<<
Content-Length: 287

{"id":193,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":24,"line":33},"start":{"character":13,"line":33}}}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":25}},"id":194,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":194,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":25}},"id":195,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":195,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":242},"start":{"character":5,"line":242}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":25}},"id":196,"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"id":196,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n- `unsigned int frequency`\n- `unsigned long duration = 0`\n\nfrequency (in hertz) and duration (in milliseconds).  \n\n---\n```cpp\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)\n```"},"range":{"end":{"character":26,"line":32},"start":{"character":25,"line":32}}}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":32,"character":24}},"id":197,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":197,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":24}},"id":198,"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"id":198,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":164},"start":{"character":4,"line":164}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}]}
>>>
Content-Length: 5753

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out \u0026= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out \u0026= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) \u0026 bit) return HIGH;\n\treturn LOW;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":25}},"id":199,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":199,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":242},"start":{"character":5,"line":242}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}]}
>>>
Content-Length: 16413

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp","languageId":"cpp","version":1,"text":"/* Tone.cpp\n\n  A Tone Generator Library\n\n  Written by Brett Hagman\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nVersion Modified By Date     Comments\n------- ----------- -------- --------\n0001    B Hagman    09/08/02 Initial coding\n0002    B Hagman    09/08/18 Multiple pins\n0003    B Hagman    09/08/18 Moved initialization from constructor to begin()\n0004    B Hagman    09/09/26 Fixed problems with ATmega8\n0005    B Hagman    09/11/23 Scanned prescalars for best fit on 8 bit timers\n                    09/11/25 Changed pin toggle method to XOR\n                    09/11/25 Fixed timer0 from being excluded\n0006    D Mellis    09/12/29 Replaced objects with functions\n0007    M Sproul    10/08/29 Changed #ifdefs from cpu to register\n0008    S Kanemoto  12/06/22 Fixed for Leonardo by @maris_HY\n0009    J Reucker   15/04/10 Issue #292 Fixed problems with ATmega8 (thanks to Pete62)\n0010    jipp        15/04/13 added additional define check #2923\n*************************************************/\n\n#include \u003cavr/interrupt.h\u003e\n#include \u003cavr/pgmspace.h\u003e\n#include \"Arduino.h\"\n#include \"pins_arduino.h\"\n\n#if defined(__AVR_ATmega8__) || defined(__AVR_ATmega128__)\n#define TCCR2A TCCR2\n#define TCCR2B TCCR2\n#define COM2A1 COM21\n#define COM2A0 COM20\n#define OCR2A OCR2\n#define TIMSK2 TIMSK\n#define OCIE2A OCIE2\n#define TIMER2_COMPA_vect TIMER2_COMP_vect\n#define TIMSK1 TIMSK\n#endif\n\n// timerx_toggle_count:\n//  \u003e 0 - duration specified\n//  = 0 - stopped\n//  \u003c 0 - infinitely (until stop() method called, or new play() called)\n\n#if !defined(__AVR_ATmega8__)\nvolatile long timer0_toggle_count;\nvolatile uint8_t *timer0_pin_port;\nvolatile uint8_t timer0_pin_mask;\n#endif\n\nvolatile long timer1_toggle_count;\nvolatile uint8_t *timer1_pin_port;\nvolatile uint8_t timer1_pin_mask;\nvolatile long timer2_toggle_count;\nvolatile uint8_t *timer2_pin_port;\nvolatile uint8_t timer2_pin_mask;\n\n#if defined(TIMSK3)\nvolatile long timer3_toggle_count;\nvolatile uint8_t *timer3_pin_port;\nvolatile uint8_t timer3_pin_mask;\n#endif\n\n#if defined(TIMSK4)\nvolatile long timer4_toggle_count;\nvolatile uint8_t *timer4_pin_port;\nvolatile uint8_t timer4_pin_mask;\n#endif\n\n#if defined(TIMSK5)\nvolatile long timer5_toggle_count;\nvolatile uint8_t *timer5_pin_port;\nvolatile uint8_t timer5_pin_mask;\n#endif\n\n\n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 3, 4, 5, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255, 255, 255, 255 */ };\n\n#elif defined(__AVR_ATmega8__)\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n\n#elif defined(__AVR_ATmega32U4__)\n \n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER3\n \nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 3 /*, 1 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255 */ };\n \n#else\n\n#define AVAILABLE_TONE_PINS 1\n#define USE_TIMER2\n\n// Leave timer 0 to last.\nconst uint8_t PROGMEM tone_pin_to_timer_PGM[] = { 2 /*, 1, 0 */ };\nstatic uint8_t tone_pins[AVAILABLE_TONE_PINS] = { 255 /*, 255, 255 */ };\n\n#endif\n\n\n\nstatic int8_t toneBegin(uint8_t _pin)\n{\n  int8_t _timer = -1;\n\n  // if we're already using the pin, the timer should be configured.  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      return pgm_read_byte(tone_pin_to_timer_PGM + i);\n    }\n  }\n  \n  // search for an unused timer.\n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == 255) {\n      tone_pins[i] = _pin;\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      break;\n    }\n  }\n  \n  if (_timer != -1)\n  {\n    // Set timer specific stuff\n    // All timers in CTC mode\n    // 8 bit timers will require changing prescalar values,\n    // whereas 16 bit timers are set to either ck/1 or ck/64 prescalar\n    switch (_timer)\n    {\n      #if defined(TCCR0A) \u0026\u0026 defined(TCCR0B) \u0026\u0026 defined(WGM01)\n      case 0:\n        // 8 bit timer\n        TCCR0A = 0;\n        TCCR0B = 0;\n        bitWrite(TCCR0A, WGM01, 1);\n        bitWrite(TCCR0B, CS00, 1);\n        timer0_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer0_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR1A) \u0026\u0026 defined(TCCR1B) \u0026\u0026 defined(WGM12)\n      case 1:\n        // 16 bit timer\n        TCCR1A = 0;\n        TCCR1B = 0;\n        bitWrite(TCCR1B, WGM12, 1);\n        bitWrite(TCCR1B, CS10, 1);\n        timer1_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer1_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR2A) \u0026\u0026 defined(TCCR2B)\n      case 2:\n        // 8 bit timer\n        TCCR2A = 0;\n        TCCR2B = 0;\n        bitWrite(TCCR2A, WGM21, 1);\n        bitWrite(TCCR2B, CS20, 1);\n        timer2_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer2_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR3A) \u0026\u0026 defined(TCCR3B) \u0026\u0026  defined(TIMSK3)\n      case 3:\n        // 16 bit timer\n        TCCR3A = 0;\n        TCCR3B = 0;\n        bitWrite(TCCR3B, WGM32, 1);\n        bitWrite(TCCR3B, CS30, 1);\n        timer3_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer3_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR4A) \u0026\u0026 defined(TCCR4B) \u0026\u0026  defined(TIMSK4)\n      case 4:\n        // 16 bit timer\n        TCCR4A = 0;\n        TCCR4B = 0;\n        #if defined(WGM42)\n          bitWrite(TCCR4B, WGM42, 1);\n        #elif defined(CS43)\n          // TODO this may not be correct\n          // atmega32u4\n          bitWrite(TCCR4B, CS43, 1);\n        #endif\n        bitWrite(TCCR4B, CS40, 1);\n        timer4_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer4_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n\n      #if defined(TCCR5A) \u0026\u0026 defined(TCCR5B) \u0026\u0026  defined(TIMSK5)\n      case 5:\n        // 16 bit timer\n        TCCR5A = 0;\n        TCCR5B = 0;\n        bitWrite(TCCR5B, WGM52, 1);\n        bitWrite(TCCR5B, CS50, 1);\n        timer5_pin_port = portOutputRegister(digitalPinToPort(_pin));\n        timer5_pin_mask = digitalPinToBitMask(_pin);\n        break;\n      #endif\n    }\n  }\n\n  return _timer;\n}\n\n\n\n// frequency (in hertz) and duration (in milliseconds).\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration)\n{\n  uint8_t prescalarbits = 0b001;\n  long toggle_count = 0;\n  uint32_t ocr = 0;\n  int8_t _timer;\n\n  _timer = toneBegin(_pin);\n\n  if (_timer \u003e= 0)\n  {\n    // Set the pinMode as OUTPUT\n    pinMode(_pin, OUTPUT);\n    \n    // if we are using an 8 bit timer, scan through prescalars to find the best fit\n    if (_timer == 0 || _timer == 2)\n    {\n      ocr = F_CPU / frequency / 2 - 1;\n      prescalarbits = 0b001;  // ck/1: same for both timers\n      if (ocr \u003e 255)\n      {\n        ocr = F_CPU / frequency / 2 / 8 - 1;\n        prescalarbits = 0b010;  // ck/8: same for both timers\n\n        if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 32 - 1;\n          prescalarbits = 0b011;\n        }\n\n        if (ocr \u003e 255)\n        {\n          ocr = F_CPU / frequency / 2 / 64 - 1;\n          prescalarbits = _timer == 0 ? 0b011 : 0b100;\n\n          if (_timer == 2 \u0026\u0026 ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 128 - 1;\n            prescalarbits = 0b101;\n          }\n\n          if (ocr \u003e 255)\n          {\n            ocr = F_CPU / frequency / 2 / 256 - 1;\n            prescalarbits = _timer == 0 ? 0b100 : 0b110;\n            if (ocr \u003e 255)\n            {\n              // can't do any better than /1024\n              ocr = F_CPU / frequency / 2 / 1024 - 1;\n              prescalarbits = _timer == 0 ? 0b101 : 0b111;\n            }\n          }\n        }\n      }\n\n#if defined(TCCR0B)\n      if (_timer == 0)\n      {\n        TCCR0B = (TCCR0B \u0026 0b11111000) | prescalarbits;\n      }\n      else\n#endif\n#if defined(TCCR2B)\n      {\n        TCCR2B = (TCCR2B \u0026 0b11111000) | prescalarbits;\n      }\n#else\n      {\n        // dummy place holder to make the above ifdefs work\n      }\n#endif\n    }\n    else\n    {\n      // two choices for the 16 bit timers: ck/1 or ck/64\n      ocr = F_CPU / frequency / 2 - 1;\n\n      prescalarbits = 0b001;\n      if (ocr \u003e 0xffff)\n      {\n        ocr = F_CPU / frequency / 2 / 64 - 1;\n        prescalarbits = 0b011;\n      }\n\n      if (_timer == 1)\n      {\n#if defined(TCCR1B)\n        TCCR1B = (TCCR1B \u0026 0b11111000) | prescalarbits;\n#endif\n      }\n#if defined(TCCR3B)\n      else if (_timer == 3)\n        TCCR3B = (TCCR3B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR4B)\n      else if (_timer == 4)\n        TCCR4B = (TCCR4B \u0026 0b11111000) | prescalarbits;\n#endif\n#if defined(TCCR5B)\n      else if (_timer == 5)\n        TCCR5B = (TCCR5B \u0026 0b11111000) | prescalarbits;\n#endif\n\n    }\n    \n\n    // Calculate the toggle count\n    if (duration \u003e 0)\n    {\n      toggle_count = 2 * frequency * duration / 1000;\n    }\n    else\n    {\n      toggle_count = -1;\n    }\n\n    // Set the OCR for the given timer,\n    // set the toggle count,\n    // then turn on the interrupts\n    switch (_timer)\n    {\n\n#if defined(OCR0A) \u0026\u0026 defined(TIMSK0) \u0026\u0026 defined(OCIE0A)\n      case 0:\n        OCR0A = ocr;\n        timer0_toggle_count = toggle_count;\n        bitWrite(TIMSK0, OCIE0A, 1);\n        break;\n#endif\n\n      case 1:\n#if defined(OCR1A) \u0026\u0026 defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK1, OCIE1A, 1);\n#elif defined(OCR1A) \u0026\u0026 defined(TIMSK) \u0026\u0026 defined(OCIE1A)\n        // this combination is for at least the ATmega32\n        OCR1A = ocr;\n        timer1_toggle_count = toggle_count;\n        bitWrite(TIMSK, OCIE1A, 1);\n#endif\n        break;\n\n#if defined(OCR2A) \u0026\u0026 defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n      case 2:\n        OCR2A = ocr;\n        timer2_toggle_count = toggle_count;\n        bitWrite(TIMSK2, OCIE2A, 1);\n        break;\n#endif\n\n#if defined(OCR3A) \u0026\u0026 defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n      case 3:\n        OCR3A = ocr;\n        timer3_toggle_count = toggle_count;\n        bitWrite(TIMSK3, OCIE3A, 1);\n        break;\n#endif\n\n#if defined(OCR4A) \u0026\u0026 defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n      case 4:\n        OCR4A = ocr;\n        timer4_toggle_count = toggle_count;\n        bitWrite(TIMSK4, OCIE4A, 1);\n        break;\n#endif\n\n#if defined(OCR5A) \u0026\u0026 defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n      case 5:\n        OCR5A = ocr;\n        timer5_toggle_count = toggle_count;\n        bitWrite(TIMSK5, OCIE5A, 1);\n        break;\n#endif\n\n    }\n  }\n}\n\n\n// XXX: this function only works properly for timer 2 (the only one we use\n// currently).  for the others, it should end the tone, but won't restore\n// proper PWM functionality for the timer.\nvoid disableTimer(uint8_t _timer)\n{\n  switch (_timer)\n  {\n    case 0:\n      #if defined(TIMSK0)\n        TIMSK0 = 0;\n      #elif defined(TIMSK)\n        TIMSK = 0; // atmega32\n      #endif\n      break;\n\n#if defined(TIMSK1) \u0026\u0026 defined(OCIE1A)\n    case 1:\n      bitWrite(TIMSK1, OCIE1A, 0);\n      break;\n#endif\n\n    case 2:\n      #if defined(TIMSK2) \u0026\u0026 defined(OCIE2A)\n        bitWrite(TIMSK2, OCIE2A, 0); // disable interrupt\n      #endif\n      #if defined(TCCR2A) \u0026\u0026 defined(WGM20)\n        TCCR2A = (1 \u003c\u003c WGM20);\n      #endif\n      #if defined(TCCR2B) \u0026\u0026 defined(CS22)\n        TCCR2B = (TCCR2B \u0026 0b11111000) | (1 \u003c\u003c CS22);\n      #endif\n      #if defined(OCR2A)\n        OCR2A = 0;\n      #endif\n      break;\n\n#if defined(TIMSK3) \u0026\u0026 defined(OCIE3A)\n    case 3:\n      bitWrite(TIMSK3, OCIE3A, 0);\n      break;\n#endif\n\n#if defined(TIMSK4) \u0026\u0026 defined(OCIE4A)\n    case 4:\n      bitWrite(TIMSK4, OCIE4A, 0);\n      break;\n#endif\n\n#if defined(TIMSK5) \u0026\u0026 defined(OCIE5A)\n    case 5:\n      bitWrite(TIMSK5, OCIE5A, 0);\n      break;\n#endif\n  }\n}\n\n\nvoid noTone(uint8_t _pin)\n{\n  int8_t _timer = -1;\n  \n  for (int i = 0; i \u003c AVAILABLE_TONE_PINS; i++) {\n    if (tone_pins[i] == _pin) {\n      _timer = pgm_read_byte(tone_pin_to_timer_PGM + i);\n      tone_pins[i] = 255;\n      break;\n    }\n  }\n  \n  disableTimer(_timer);\n\n  digitalWrite(_pin, 0);\n}\n\n#ifdef USE_TIMER0\nISR(TIMER0_COMPA_vect)\n{\n  if (timer0_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer0_pin_port ^= timer0_pin_mask;\n\n    if (timer0_toggle_count \u003e 0)\n      timer0_toggle_count--;\n  }\n  else\n  {\n    disableTimer(0);\n    *timer0_pin_port \u0026= ~(timer0_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER1\nISR(TIMER1_COMPA_vect)\n{\n  if (timer1_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer1_pin_port ^= timer1_pin_mask;\n\n    if (timer1_toggle_count \u003e 0)\n      timer1_toggle_count--;\n  }\n  else\n  {\n    disableTimer(1);\n    *timer1_pin_port \u0026= ~(timer1_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER2\nISR(TIMER2_COMPA_vect)\n{\n\n  if (timer2_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer2_pin_port ^= timer2_pin_mask;\n\n    if (timer2_toggle_count \u003e 0)\n      timer2_toggle_count--;\n  }\n  else\n  {\n    // need to call noTone() so that the tone_pins[] entry is reset, so the\n    // timer gets initialized next time we call tone().\n    // XXX: this assumes timer 2 is always the first one used.\n    noTone(tone_pins[0]);\n//    disableTimer(2);\n//    *timer2_pin_port \u0026= ~(timer2_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER3\nISR(TIMER3_COMPA_vect)\n{\n  if (timer3_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer3_pin_port ^= timer3_pin_mask;\n\n    if (timer3_toggle_count \u003e 0)\n      timer3_toggle_count--;\n  }\n  else\n  {\n    disableTimer(3);\n    *timer3_pin_port \u0026= ~(timer3_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER4\nISR(TIMER4_COMPA_vect)\n{\n  if (timer4_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer4_pin_port ^= timer4_pin_mask;\n\n    if (timer4_toggle_count \u003e 0)\n      timer4_toggle_count--;\n  }\n  else\n  {\n    disableTimer(4);\n    *timer4_pin_port \u0026= ~(timer4_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n\n\n#ifdef USE_TIMER5\nISR(TIMER5_COMPA_vect)\n{\n  if (timer5_toggle_count != 0)\n  {\n    // toggle the pin\n    *timer5_pin_port ^= timer5_pin_mask;\n\n    if (timer5_toggle_count \u003e 0)\n      timer5_toggle_count--;\n  }\n  else\n  {\n    disableTimer(5);\n    *timer5_pin_port \u0026= ~(timer5_pin_mask);  // keep pin low after stop\n  }\n}\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 183

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Tone.cpp"}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":25}},"id":200,"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"id":200,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n- `unsigned int frequency`\n- `unsigned long duration = 0`\n\nfrequency (in hertz) and duration (in milliseconds).  \n\n---\n```cpp\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)\n```"},"range":{"end":{"character":26,"line":35},"start":{"character":25,"line":35}}}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":25}},"id":201,"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"id":201,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n- `unsigned int frequency`\n- `unsigned long duration = 0`\n\nfrequency (in hertz) and duration (in milliseconds).  \n\n---\n```cpp\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)\n```"},"range":{"end":{"character":26,"line":35},"start":{"character":25,"line":35}}}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":7}},"id":202,"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"id":202,"jsonrpc":"2.0","result":[{"range":{"end":{"character":23,"line":69},"start":{"character":17,"line":69}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}]}
>>>
Content-Length: 3001

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp","languageId":"cpp","version":1,"text":"/*\n  HardwareSerial0.cpp - Hardware serial library for Wiring\n  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n  Modified 23 November 2006 by David A. Mellis\n  Modified 28 September 2010 by Mark Sproul\n  Modified 14 August 2012 by Alarus\n  Modified 3 December 2013 by Matthijs Kooijman\n*/\n\n#include \"Arduino.h\"\n#include \"HardwareSerial.h\"\n#include \"HardwareSerial_private.h\"\n\n// Each HardwareSerial is defined in its own file, since the linker pulls\n// in the entire file when any element inside is used. --gc-sections can\n// additionally cause unused symbols to be dropped, but ISRs have the\n// \"used\" attribute so are never dropped and they keep the\n// HardwareSerial instance in as well. Putting each instance in its own\n// file prevents the linker from pulling in any unused instances in the\n// first place.\n\n#if defined(HAVE_HWSERIAL0)\n\n#if defined(USART_RX_vect)\n  ISR(USART_RX_vect)\n#elif defined(USART0_RX_vect)\n  ISR(USART0_RX_vect)\n#elif defined(USART_RXC_vect)\n  ISR(USART_RXC_vect) // ATmega8\n#else\n  #error \"Don't know what the Data Received vector is called for Serial\"\n#endif\n  {\n    Serial._rx_complete_irq();\n  }\n\n#if defined(UART0_UDRE_vect)\nISR(UART0_UDRE_vect)\n#elif defined(UART_UDRE_vect)\nISR(UART_UDRE_vect)\n#elif defined(USART0_UDRE_vect)\nISR(USART0_UDRE_vect)\n#elif defined(USART_UDRE_vect)\nISR(USART_UDRE_vect)\n#else\n  #error \"Don't know what the Data Register Empty vector is called for Serial\"\n#endif\n{\n  Serial._tx_udr_empty_irq();\n}\n\n#if defined(UBRRH) \u0026\u0026 defined(UBRRL)\n  HardwareSerial Serial(\u0026UBRRH, \u0026UBRRL, \u0026UCSRA, \u0026UCSRB, \u0026UCSRC, \u0026UDR);\n#else\n  HardwareSerial Serial(\u0026UBRR0H, \u0026UBRR0L, \u0026UCSR0A, \u0026UCSR0B, \u0026UCSR0C, \u0026UDR0);\n#endif\n\n// Function that can be weakly referenced by serialEventRun to prevent\n// pulling in this file if it's not otherwise used.\nbool Serial0_available() {\n  return Serial.available();\n}\n\n#endif // HAVE_HWSERIAL0\n"}},"jsonrpc":"2.0"}Content-Length: 194

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/HardwareSerial0.cpp"}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":43,"character":22},"end":{"line":43,"character":22}},"context":{"diagnostics":[]}},"id":203,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":203,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":15}},"id":204,"jsonrpc":"2.0"}
<<<
Content-Length: 392

{"id":204,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":30},"start":{"character":6,"line":30}}},{"kind":1,"range":{"end":{"character":24,"line":33},"start":{"character":13,"line":33}}},{"kind":1,"range":{"end":{"character":24,"line":36},"start":{"character":13,"line":36}}},{"kind":1,"range":{"end":{"character":24,"line":39},"start":{"character":13,"line":39}}}]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":15},"end":{"line":39,"character":15}},"context":{"diagnostics":[]}},"id":205,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":205,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":45,"character":1},"end":{"line":45,"character":1}},"context":{"diagnostics":[]}},"id":206,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":206,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":31,"character":24},"end":{"line":31,"character":24}},"context":{"diagnostics":[]}},"id":207,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":207,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":30,"character":40},"end":{"line":30,"character":40}},"context":{"diagnostics":[]}},"id":208,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":208,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":30,"character":40},"end":{"line":32,"character":20}},"context":{"diagnostics":[]}},"id":209,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":209,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":31,"character":24},"end":{"line":31,"character":24}},"context":{"diagnostics":[]}},"id":210,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":210,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server662383724/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":33,"character":12}},"id":211,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":211,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 60

{"method":"shutdown","params":null,"id":212,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":212,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":80372,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1714

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint buzzerPin = 10;\n\n\n#line 10 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 22 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 10 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\npinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    Serial.println(\"1\");\n      tone(buzzerPin, 262);\n  } else if (digitalRead(secondKeyPin) == LOW) {\n    Serial.println(\"2\");\n      tone(buzzerPin, 330);\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    Serial.println(\"3\");\n      tone(buzzerPin, 392);\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    Serial.println(\"4\");\n      tone(buzzerPin, 458);\n  } else {\n    noTone(buzzerPin);\n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}},"jsonrpc":"2.0"}Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":30,"character":39},"end":{"line":30,"character":39}},"context":{"diagnostics":[]}},"id":1,"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/26","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 36

{"id":1,"jsonrpc":"2.0","result":[]}Content-Length: 1749

{"id":2,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"buzzerPin","range":{"end":{"character":18,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":45},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":23}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":22}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":4,"jsonrpc":"2.0","result":null}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/26","percentage":7.6923076923076925}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/26","percentage":7.6923076923076925}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/26","percentage":11.538461538461538}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/26","percentage":11.538461538461538}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/26","percentage":15.384615384615385}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/26","percentage":15.384615384615385}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/26","percentage":19.23076923076923}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/26","percentage":19.23076923076923}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/26","percentage":23.076923076923077}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/26","percentage":23.076923076923077}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/26","percentage":26.923076923076923}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/26","percentage":26.923076923076923}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/26","percentage":30.76923076923077}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/26","percentage":30.76923076923077}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/26","percentage":34.615384615384613}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/26","percentage":34.615384615384613}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/26","percentage":38.46153846153846}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/26","percentage":38.46153846153846}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/26","percentage":42.307692307692307}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/26","percentage":42.307692307692307}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/26","percentage":46.153846153846153}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/26","percentage":46.153846153846153}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/26","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/26","percentage":50}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/26","percentage":53.846153846153847}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/26","percentage":53.846153846153847}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/26","percentage":57.692307692307693}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/26","percentage":57.692307692307693}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/26","percentage":61.53846153846154}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/26","percentage":61.53846153846154}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/26","percentage":65.384615384615387}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/26","percentage":65.384615384615387}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/26","percentage":69.230769230769226}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/26","percentage":69.230769230769226}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/26","percentage":73.07692307692308}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/26","percentage":76.92307692307692}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/26","percentage":80.769230769230774}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/26","percentage":84.615384615384613}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/26","percentage":88.461538461538467}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/26","percentage":92.307692307692307}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/26","percentage":96.15384615384616}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":24,"character":27}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":5,"jsonrpc":"2.0","result":[{"range":{"end":{"character":14,"line":43},"start":{"character":8,"line":43}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":20,"character":34}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":6,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":44},"start":{"character":8,"line":44}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":19,"character":35}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"id":7,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":44},"start":{"character":8,"line":44}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":19},"end":{"line":8,"character":19}},"context":{"diagnostics":[]}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":17,"character":33}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":17,"character":33},"end":{"line":17,"character":33}},"context":{"diagnostics":[]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":23,"character":35}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":23,"character":35},"end":{"line":23,"character":35}},"context":{"diagnostics":[]}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":20}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":13,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":19}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":14,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":13}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":15,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":14}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 656

{"id":16,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}},{"kind":2,"range":{"end":{"character":19,"line":24},"start":{"character":10,"line":24}}},{"kind":2,"range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}}},{"kind":2,"range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}}},{"kind":2,"range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}}},{"kind":2,"range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}}},{"kind":2,"range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}}}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":14}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":17,"jsonrpc":"2.0","result":[{"range":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":4}},"context":{"diagnostics":[]}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":18,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 266

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":8,"character":6}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 656

{"id":19,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}},{"kind":2,"range":{"end":{"character":19,"line":24},"start":{"character":10,"line":24}}},{"kind":2,"range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}}},{"kind":2,"range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}}},{"kind":2,"range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}}},{"kind":2,"range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}}},{"kind":2,"range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}}}]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":13}},"context":{"diagnostics":[]}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":20,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 254

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":8,"character":5}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 257

{"id":21,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `buzzerPin`  \n\n---\nType: `int`  \nValue = `10`  \n\n---\n```cpp\nint buzzerPin = 10\n```"},"range":{"end":{"character":13,"line":8},"start":{"character":4,"line":8}}}}
>>>
Content-Length: 349

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":13}},"rangeLength":9,"text":"r"}]},"jsonrpc":"2.0"}Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1380

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":24},"start":{"character":10,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":3}}
>>>
Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":8,"character":6},"end":{"line":8,"character":6}},"text":"d"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1380

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":24},"start":{"character":10,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":4}}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":7}},"context":{"diagnostics":[]}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":22,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 1743

{"id":23,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"red","range":{"end":{"character":12,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":7,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":45},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}
>>>
Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":7}},"text":"P"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1380

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":24},"start":{"character":10,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":5}}
>>>
Content-Length: 1713

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":6},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint redP = 10;\n\n\n#line 10 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 22 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 10 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\npinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    Serial.println(\"1\");\n      tone(buzzerPin, 262);\n  } else if (digitalRead(secondKeyPin) == LOW) {\n    Serial.println(\"2\");\n      tone(buzzerPin, 330);\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    Serial.println(\"3\");\n      tone(buzzerPin, 392);\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    Serial.println(\"4\");\n      tone(buzzerPin, 458);\n  } else {\n    noTone(buzzerPin);\n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}]},"jsonrpc":"2.0"}Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":8}},"text":"i"}]},"jsonrpc":"2.0"}Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":8,"character":9},"end":{"line":8,"character":9}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1380

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":24},"start":{"character":10,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":8}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"context":{"diagnostics":[]}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":24,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 1747

{"id":25,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":15,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":45},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":16},"end":{"line":8,"character":16}},"context":{"diagnostics":[]}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":26,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":8,"character":15}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":27,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":15},"end":{"line":8,"character":15}},"context":{"diagnostics":[]}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":28,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 349

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":8,"character":14},"end":{"line":8,"character":15}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/2","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/2","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 1380

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":24},"start":{"character":10,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":9}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":8,"character":14},"end":{"line":8,"character":14}},"text":"9"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1381

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":24},"start":{"character":10,"line":24}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":10}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":16},"end":{"line":8,"character":16}},"context":{"diagnostics":[]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 1747

{"id":30,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":15,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":12},"start":{"character":0,"line":12}},"selectionRange":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":9,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":26},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":10,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":45},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}}]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":8,"character":16},"end":{"line":8,"character":16}},"text":"\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1381

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":11}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":0}},"text":"b"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1547

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'b'","range":{"end":{"character":1,"line":9},"start":{"character":0,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":12}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":9,"character":1},"end":{"line":9,"character":1}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'bl'","range":{"end":{"character":2,"line":9},"start":{"character":0,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":13}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":2}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1549

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'blu'","range":{"end":{"character":3,"line":9},"start":{"character":0,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":14}}
>>>
Content-Length: 348

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'bl'","range":{"end":{"character":2,"line":9},"start":{"character":0,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":15}}
>>>
Content-Length: 348

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":9,"character":1},"end":{"line":9,"character":2}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1547

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'b'","range":{"end":{"character":1,"line":9},"start":{"character":0,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":16}}
>>>
Content-Length: 348

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1381

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":17}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":0}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1547

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'i'","range":{"end":{"character":1,"line":9},"start":{"character":0,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":18}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":9,"character":1},"end":{"line":9,"character":1}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1548

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'in'","range":{"end":{"character":2,"line":9},"start":{"character":0,"line":9}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":19}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":2}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1954

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":4,"line":13},"start":{"character":0,"line":13}},"severity":1,"source":"clang"},{"code":"ovl_diff_return_type","message":"Functions that differ only in their return type cannot be overloaded\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:154:6:\nnote: previous declaration is here","range":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":20}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":9,"character":3},"end":{"line":9,"character":3}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1954

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_decl_spec_combination","message":"Cannot combine with previous 'int' declaration specifier","range":{"end":{"character":4,"line":13},"start":{"character":0,"line":13}},"severity":1,"source":"clang"},{"code":"ovl_diff_return_type","message":"Functions that differ only in their return type cannot be overloaded\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:154:6:\nnote: previous declaration is here","range":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":21}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},"text":"b"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1606

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":22}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1606

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":23}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":6}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1606

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":24}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":9,"character":7},"end":{"line":9,"character":7}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1606

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":25}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":9,"character":8},"end":{"line":9,"character":8}},"text":"P"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1606

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":26}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":9}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1606

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":27}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":9,"character":10},"end":{"line":9,"character":10}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1606

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":28}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":11},"end":{"line":9,"character":11}},"context":{"diagnostics":[]}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":31,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 1935

{"id":32,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":15,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"bluePin","range":{"end":{"character":11,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":13},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":9,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":27},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":9,"line":29},"start":{"character":5,"line":29}}}]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":9,"character":11},"end":{"line":9,"character":11}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1606

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":29}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":9,"character":12},"end":{"line":9,"character":12}},"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1596

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":30}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":9,"character":13},"end":{"line":9,"character":13}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1596

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":31}}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":8,"character":14}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":33,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 1745

{"id":34,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":15,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"bluePin","range":{"end":{"character":11,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":15},"start":{"character":0,"line":15}},"selectionRange":{"end":{"character":9,"line":15},"start":{"character":5,"line":15}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":27},"start":{"character":0,"line":17}},"selectionRange":{"end":{"character":10,"line":17},"start":{"character":5,"line":17}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":9,"line":29},"start":{"character":5,"line":29}}}]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":14},"end":{"line":8,"character":14}},"context":{"diagnostics":[]}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":35,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":8,"character":13},"end":{"line":8,"character":14}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1596

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":25},"start":{"character":10,"line":25}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":33},"start":{"character":11,"line":33}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":32}}
>>>
Content-Length: 1450

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":33},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint redPin = 9;\nint bluePin = \n\n\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\npinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    Serial.println(\"1\");\n      tone(buzzerPin, 262);\n  } else if (digitalRead(secondKeyPin) == LOW) {\n    Serial.println(\"2\");\n      tone(buzzerPin, 330);\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    Serial.println(\"3\");\n      tone(buzzerPin, 392);\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    Serial.println(\"4\");\n      tone(buzzerPin, 458);\n  } else {\n    noTone(buzzerPin);\n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}]},"jsonrpc":"2.0"}Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":13},"end":{"line":8,"character":13}},"context":{"diagnostics":[]}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":36,"jsonrpc":"2.0","result":[]}Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":33}}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 1181

{"id":37,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"bluePin","range":{"end":{"character":11,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}}}]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":13},"end":{"line":9,"character":13}},"context":{"diagnostics":[]}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":38,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":34},"contentChanges":[{"range":{"start":{"line":9,"character":13},"end":{"line":9,"character":13}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":2,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":34}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":9,"character":14},"end":{"line":9,"character":14}},"text":"  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":35}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":14,"character":15}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":39,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":17,"character":12}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":40,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":17,"character":1}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":41,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":17,"character":0}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":42,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":17,"character":0}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":43,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":0}},"text":"  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":36}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":2}},"context":{"diagnostics":[]}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":44,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":16,"character":5}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":45,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":17,"character":7}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":46,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":13,"character":22}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":47,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":17,"character":26}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"id":48,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `INPUT_PULLUP`  \n\n---\n```cpp\n#define INPUT_PULLUP 0x2\n```"},"range":{"end":{"character":36,"line":17},"start":{"character":24,"line":17}}}}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":9,"character":11}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 122

{"id":49,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}}}]}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":8},"end":{"line":9,"character":8}},"context":{"diagnostics":[]}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":50,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":17,"character":26}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"id":51,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `INPUT_PULLUP`  \n\n---\n```cpp\n#define INPUT_PULLUP 0x2\n```"},"range":{"end":{"character":36,"line":17},"start":{"character":24,"line":17}}}}
>>>
Content-Length: 348

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":9,"character":7},"end":{"line":9,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":37}}
>>>
Content-Length: 348

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":7}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":38}}
>>>
Content-Length: 348

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":6}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":39}}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"context":{"diagnostics":[]}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":52,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 348

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":45},"jsonrpc":"2.0"}
<<<
Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":40}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},"text":"g"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":41}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":42}}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":6}},"context":{"diagnostics":[]}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":53,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":6}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":43}}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":9,"character":7},"end":{"line":9,"character":7}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":44}}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":8},"end":{"line":9,"character":8}},"context":{"diagnostics":[]}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":54,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 333

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":9,"character":8},"end":{"line":9,"character":8}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 675

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":12},"start":{"character":5,"line":12}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":41},"start":{"character":1,"line":41}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":45}}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":9,"character":10}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 122

{"id":55,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}}]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":11},"end":{"line":9,"character":11}},"context":{"diagnostics":[]}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":56,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":9,"character":15},"end":{"line":9,"character":15}},"text":"1"}]},"jsonrpc":"2.0"}Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":9,"character":16},"end":{"line":9,"character":16}},"text":"0"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1606

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":20},"start":{"character":10,"line":20}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":28},"start":{"character":11,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":31},"start":{"character":11,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":46}}Content-Length: 1606

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":12},"start":{"character":0,"line":12}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":20},"start":{"character":10,"line":20}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":28},"start":{"character":11,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":31},"start":{"character":11,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":47}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":9,"character":17},"end":{"line":9,"character":17}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1381

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":20},"start":{"character":10,"line":20}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":28},"start":{"character":11,"line":28}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":31},"start":{"character":11,"line":31}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":48}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":9,"character":18},"end":{"line":9,"character":18}},"text":"\n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1381

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":49}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":50},"contentChanges":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":0}},"text":"b"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1549

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'b'","range":{"end":{"character":1,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":50}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":10,"character":1},"end":{"line":10,"character":1}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1550

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'bl'","range":{"end":{"character":2,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":51}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":52},"contentChanges":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":2}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1551

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'blu'","range":{"end":{"character":3,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":52}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":53},"contentChanges":[{"range":{"start":{"line":10,"character":3},"end":{"line":10,"character":3}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1552

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'blue'","range":{"end":{"character":4,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":53}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":4}},"text":"P"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1553

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'blueP'","range":{"end":{"character":5,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":54}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":10,"character":5},"end":{"line":10,"character":5}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1554

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'bluePi'","range":{"end":{"character":6,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":55}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":6}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1555

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'bluePin'","range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":56}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":7}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1555

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"unknown_typename","message":"Unknown type name 'bluePin'","range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":57}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":8}},"text":"="}]},"jsonrpc":"2.0"}
<<<
Content-Length: 878

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":42},"start":{"character":1,"line":42}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":58}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":9}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 878

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"expected_lparen_after_type","message":"Expected '(' for function-style cast or type construction","range":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":1,"line":42},"start":{"character":1,"line":42}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":59}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":60},"contentChanges":[{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":10}},"text":"1"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1809

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":13},"start":{"character":0,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":60}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":61},"contentChanges":[{"range":{"start":{"line":10,"character":11},"end":{"line":10,"character":11}},"text":"1"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1809

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"invalid_token_after_toplevel_declarator","message":"Expected ';' after top level declarator (fix available)","range":{"end":{"character":4,"line":13},"start":{"character":0,"line":13}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":61}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":10,"character":12},"end":{"line":10,"character":12}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1584

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":21},"start":{"character":10,"line":21}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":29},"start":{"character":11,"line":29}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":32},"start":{"character":11,"line":32}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":62}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":10,"character":13},"end":{"line":10,"character":13}},"context":{"diagnostics":[]}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":57,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 1748

{"id":58,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":23},"start":{"character":0,"line":13}},"selectionRange":{"end":{"character":10,"line":13},"start":{"character":5,"line":13}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":42},"start":{"character":0,"line":25}},"selectionRange":{"end":{"character":9,"line":25},"start":{"character":5,"line":25}}}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":17,"character":26}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":59,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":44},"start":{"character":8,"line":44}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":17,"character":26}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"id":60,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `INPUT_PULLUP`  \n\n---\n```cpp\n#define INPUT_PULLUP 0x2\n```"},"range":{"end":{"character":35,"line":17},"start":{"character":23,"line":17}}}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":16,"character":20}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":61,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 1755

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":63},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint redPin = 9;\nint greenPin = 10;\nbluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 24 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(buzzerPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    Serial.println(\"1\");\n      tone(buzzerPin, 262);\n  } else if (digitalRead(secondKeyPin) == LOW) {\n    Serial.println(\"2\");\n      tone(buzzerPin, 330);\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    Serial.println(\"3\");\n      tone(buzzerPin, 392);\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    Serial.println(\"4\");\n      tone(buzzerPin, 458);\n  } else {\n    noTone(buzzerPin);\n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}]},"jsonrpc":"2.0"}Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":10,"character":0}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 123

{"id":62,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}}}]}Content-Length: 1584

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":63}}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 2126

{"id":63,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":47},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}}]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":8,"character":10}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":64,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `int`  \nValue = `9`  \n\n---\n```cpp\nint redPin = 9\n```"},"range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}}}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 2126

{"id":65,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":7,"line":10},"start":{"character":0,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":47},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}}]}
>>>
Content-Length: 530

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":7}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":66,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":64},"contentChanges":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":0}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1584

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":8,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":64}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":65},"contentChanges":[{"range":{"start":{"line":10,"character":1},"end":{"line":10,"character":1}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1584

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":9,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":65}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":66},"contentChanges":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":2}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1585

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"missing_type_specifier","message":"C++ requires a type specifier for all declarations","range":{"end":{"character":10,"line":10},"start":{"character":0,"line":10}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":66}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":67},"contentChanges":[{"range":{"start":{"line":10,"character":3},"end":{"line":10,"character":3}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1381

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":67}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":4}},"context":{"diagnostics":[]}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":67,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 2128

{"id":68,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":47},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}}]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":8,"character":10}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":69,"jsonrpc":"2.0","result":[{"range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":26,"character":15}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":70,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 520

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":15},"end":{"line":26,"character":15}},"context":{"diagnostics":[{"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'buzzerPin'"}]}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":71,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":26,"character":14}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":72,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 520

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'buzzerPin'"}]}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 448

{"id":73,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 520

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'buzzerPin'"}]}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 448

{"id":74,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":19,"line":26},"start":{"character":10,"line":26}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":68},"contentChanges":[{"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":19}},"rangeLength":9,"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1373

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'r'","range":{"end":{"character":11,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":68}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":69},"contentChanges":[{"range":{"start":{"line":26,"character":11},"end":{"line":26,"character":11}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1374

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 're'","range":{"end":{"character":12,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":69}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":26,"character":12},"end":{"line":26,"character":12}},"text":"d"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1375

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'red'","range":{"end":{"character":13,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":70}}
>>>
Content-Length: 514

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":13},"end":{"line":26,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'red'"}]}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":75,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 2128

{"id":76,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":47},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":26,"character":13},"end":{"line":26,"character":13}},"text":"P"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1376

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'redP'","range":{"end":{"character":14,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":71}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":72},"contentChanges":[{"range":{"start":{"line":26,"character":14},"end":{"line":26,"character":14}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1711

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'redPi'; did you mean 'redPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'redPin' declared here","range":{"end":{"character":15,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"message":"'redPin' declared here\n\nDigitalTrumpet.ino.cpp:27:11: error: use of undeclared identifier 'redPi'; did you mean 'redPin'?","range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":72}}
>>>
Content-Length: 624

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":15},"end":{"line":26,"character":15}},"context":{"diagnostics":[{"range":{"start":{"line":26,"character":10},"end":{"line":26,"character":15}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'redPi'; did you mean 'redPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'redPin' declared here"}]}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 674

{"id":77,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'redPi'; did you mean 'redPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'redPin' declared here","range":{"end":{"character":15,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp":[{"newText":"redPin","range":{"end":{"character":15,"line":26},"start":{"character":10,"line":26}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'redPi' to 'redPin'"}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":26,"character":15},"end":{"line":26,"character":15}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1190

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":34},"start":{"character":11,"line":34}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":37},"start":{"character":11,"line":37}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":40},"start":{"character":11,"line":40}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":43},"start":{"character":11,"line":43}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":73}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":16},"end":{"line":26,"character":16}},"context":{"diagnostics":[]}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":78,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 2128

{"id":79,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":28},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":47},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":9,"line":30},"start":{"character":5,"line":30}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":17},"end":{"line":26,"character":17}},"context":{"diagnostics":[]}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":80,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":26,"character":1}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":81,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":26,"character":2}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 471

{"id":82,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":20},"start":{"character":2,"line":20}}},{"kind":1,"range":{"end":{"character":9,"line":21},"start":{"character":2,"line":21}}},{"kind":1,"range":{"end":{"character":9,"line":22},"start":{"character":2,"line":22}}},{"kind":1,"range":{"end":{"character":9,"line":23},"start":{"character":2,"line":23}}},{"kind":1,"range":{"end":{"character":9,"line":26},"start":{"character":2,"line":26}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":26}},"context":{"diagnostics":[]}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":83,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":26},"end":{"line":26,"character":26}},"context":{"diagnostics":[]}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":84,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 340

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":26,"character":26},"end":{"line":26,"character":26}},"text":"\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1190

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":74}}
>>>
Content-Length: 358

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":75},"contentChanges":[{"range":{"start":{"line":27,"character":2},"end":{"line":27,"character":2}},"text":"pinMode(redPin, OUTPUT);"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1190

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":75}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":25},"end":{"line":27,"character":25}},"context":{"diagnostics":[]}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":85,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 2128

{"id":86,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":48},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":27,"character":24}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 558

{"id":87,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":20},"start":{"character":2,"line":20}}},{"kind":1,"range":{"end":{"character":9,"line":21},"start":{"character":2,"line":21}}},{"kind":1,"range":{"end":{"character":9,"line":22},"start":{"character":2,"line":22}}},{"kind":1,"range":{"end":{"character":9,"line":23},"start":{"character":2,"line":23}}},{"kind":1,"range":{"end":{"character":9,"line":26},"start":{"character":2,"line":26}}},{"kind":1,"range":{"end":{"character":9,"line":27},"start":{"character":2,"line":27}}}]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":27,"character":16}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 558

{"id":88,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":20},"start":{"character":2,"line":20}}},{"kind":1,"range":{"end":{"character":9,"line":21},"start":{"character":2,"line":21}}},{"kind":1,"range":{"end":{"character":9,"line":22},"start":{"character":2,"line":22}}},{"kind":1,"range":{"end":{"character":9,"line":23},"start":{"character":2,"line":23}}},{"kind":1,"range":{"end":{"character":9,"line":26},"start":{"character":2,"line":26}}},{"kind":1,"range":{"end":{"character":9,"line":27},"start":{"character":2,"line":27}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":15},"end":{"line":27,"character":15}},"context":{"diagnostics":[]}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":89,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":13},"end":{"line":27,"character":13}},"context":{"diagnostics":[]}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":90,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":27,"character":12},"end":{"line":27,"character":13}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1711

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'rePin'; did you mean 'redPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'redPin' declared here","range":{"end":{"character":15,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"message":"'redPin' declared here\n\nDigitalTrumpet.ino.cpp:28:11: error: use of undeclared identifier 'rePin'; did you mean 'redPin'?","range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":76}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":27,"character":11},"end":{"line":27,"character":12}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1376

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'rPin'","range":{"end":{"character":14,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":77}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1375

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Pin'","range":{"end":{"character":13,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":78}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":79},"contentChanges":[{"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":10}},"text":"b"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1376

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'bPin'","range":{"end":{"character":14,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":79}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":27,"character":11},"end":{"line":27,"character":11}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1377

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'blPin'","range":{"end":{"character":15,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":80}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":81},"contentChanges":[{"range":{"start":{"line":27,"character":12},"end":{"line":27,"character":12}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1720

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":16,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:28:11: error: use of undeclared identifier 'bluPin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":81}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":82},"contentChanges":[{"range":{"start":{"line":27,"character":13},"end":{"line":27,"character":13}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1190

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":82}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":14},"end":{"line":27,"character":14}},"context":{"diagnostics":[]}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":91,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 2128

{"id":92,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":48},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":26,"character":13}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 292

{"id":93,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `int`  \nValue = `9`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint redPin = 9\n```"},"range":{"end":{"character":16,"line":26},"start":{"character":10,"line":26}}}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":83},"contentChanges":[{"range":{"start":{"line":27,"character":13},"end":{"line":27,"character":14}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1720

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":16,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:28:11: error: use of undeclared identifier 'bluPin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":83}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":84},"contentChanges":[{"range":{"start":{"line":27,"character":12},"end":{"line":27,"character":13}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1377

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'blPin'","range":{"end":{"character":15,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":84}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":85},"contentChanges":[{"range":{"start":{"line":27,"character":11},"end":{"line":27,"character":12}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1376

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'bPin'","range":{"end":{"character":14,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":85}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":86},"contentChanges":[{"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1375

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Pin'","range":{"end":{"character":13,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":86}}
>>>
Content-Length: 514

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Pin'"}]}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":94,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 2128

{"id":95,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":48},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":26,"character":13}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 292

{"id":96,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `int`  \nValue = `9`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint redPin = 9\n```"},"range":{"end":{"character":16,"line":26},"start":{"character":10,"line":26}}}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":87},"contentChanges":[{"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":10}},"text":"g"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1376

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'gPin'","range":{"end":{"character":14,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":87}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":88},"contentChanges":[{"range":{"start":{"line":27,"character":11},"end":{"line":27,"character":11}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1377

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'grPin'","range":{"end":{"character":15,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":88}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":89},"contentChanges":[{"range":{"start":{"line":27,"character":12},"end":{"line":27,"character":12}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1378

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'grePin'","range":{"end":{"character":16,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":89}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":90},"contentChanges":[{"range":{"start":{"line":27,"character":13},"end":{"line":27,"character":13}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1724

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greePin'; did you mean 'greenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'greenPin' declared here","range":{"end":{"character":17,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"message":"'greenPin' declared here\n\nDigitalTrumpet.ino.cpp:28:11: error: use of undeclared identifier 'greePin'; did you mean 'greenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":90}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":91},"contentChanges":[{"range":{"start":{"line":27,"character":14},"end":{"line":27,"character":14}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1190

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":35},"start":{"character":11,"line":35}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":38},"start":{"character":11,"line":38}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":41},"start":{"character":11,"line":41}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":44},"start":{"character":11,"line":44}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":46},"start":{"character":11,"line":46}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":91}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":15},"end":{"line":27,"character":15}},"context":{"diagnostics":[]}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":97,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 2128

{"id":98,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":29},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":48},"start":{"character":0,"line":31}},"selectionRange":{"end":{"character":9,"line":31},"start":{"character":5,"line":31}}}]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":26,"character":15}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"id":99,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":2,"range":{"end":{"character":16,"line":26},"start":{"character":10,"line":26}}}]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":15},"end":{"line":26,"character":15}},"context":{"diagnostics":[]}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":100,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":16},"end":{"line":26,"character":16}},"context":{"diagnostics":[]}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":101,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":26,"character":18}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":102,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":26,"character":26},"end":{"line":26,"character":26}},"context":{"diagnostics":[]}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":103,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 340

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":92},"contentChanges":[{"range":{"start":{"line":26,"character":26},"end":{"line":26,"character":26}},"text":"\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1190

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":92}}
>>>
Content-Length: 358

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":93},"contentChanges":[{"range":{"start":{"line":27,"character":2},"end":{"line":27,"character":2}},"text":"pinMode(redPin, OUTPUT);"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1190

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":93}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":25},"end":{"line":27,"character":25}},"context":{"diagnostics":[]}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":104,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 2129

{"id":105,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":27,"character":24}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 646

{"id":106,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":20},"start":{"character":2,"line":20}}},{"kind":1,"range":{"end":{"character":9,"line":21},"start":{"character":2,"line":21}}},{"kind":1,"range":{"end":{"character":9,"line":22},"start":{"character":2,"line":22}}},{"kind":1,"range":{"end":{"character":9,"line":23},"start":{"character":2,"line":23}}},{"kind":1,"range":{"end":{"character":9,"line":26},"start":{"character":2,"line":26}}},{"kind":1,"range":{"end":{"character":9,"line":27},"start":{"character":2,"line":27}}},{"kind":1,"range":{"end":{"character":9,"line":28},"start":{"character":2,"line":28}}}]}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":27,"character":16}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 646

{"id":107,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":20},"start":{"character":2,"line":20}}},{"kind":1,"range":{"end":{"character":9,"line":21},"start":{"character":2,"line":21}}},{"kind":1,"range":{"end":{"character":9,"line":22},"start":{"character":2,"line":22}}},{"kind":1,"range":{"end":{"character":9,"line":23},"start":{"character":2,"line":23}}},{"kind":1,"range":{"end":{"character":9,"line":26},"start":{"character":2,"line":26}}},{"kind":1,"range":{"end":{"character":9,"line":27},"start":{"character":2,"line":27}}},{"kind":1,"range":{"end":{"character":9,"line":28},"start":{"character":2,"line":28}}}]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":13},"end":{"line":27,"character":13}},"context":{"diagnostics":[]}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":108,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":94},"contentChanges":[{"range":{"start":{"line":27,"character":12},"end":{"line":27,"character":13}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1711

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'rePin'; did you mean 'redPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'redPin' declared here","range":{"end":{"character":15,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"message":"'redPin' declared here\n\nDigitalTrumpet.ino.cpp:28:11: error: use of undeclared identifier 'rePin'; did you mean 'redPin'?","range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":94}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":95},"contentChanges":[{"range":{"start":{"line":27,"character":11},"end":{"line":27,"character":12}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1376

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'rPin'","range":{"end":{"character":14,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":95}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":96},"contentChanges":[{"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1375

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'Pin'","range":{"end":{"character":13,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":96}}
>>>
Content-Length: 515

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Pin'"}]}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":109,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 2129

{"id":110,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":97},"contentChanges":[{"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":10}},"text":"b"}]},"jsonrpc":"2.0"}Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":98},"contentChanges":[{"range":{"start":{"line":27,"character":11},"end":{"line":27,"character":11}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1377

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'blPin'","range":{"end":{"character":15,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":98}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":99},"contentChanges":[{"range":{"start":{"line":27,"character":12},"end":{"line":27,"character":12}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1720

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":16,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:28:11: error: use of undeclared identifier 'bluPin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":99}}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":100},"contentChanges":[{"range":{"start":{"line":27,"character":13},"end":{"line":27,"character":13}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1191

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":100}}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":101},"contentChanges":[{"range":{"start":{"line":27,"character":14},"end":{"line":27,"character":14}},"text":"p"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1725

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluepPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":18,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:28:11: error: use of undeclared identifier 'bluepPin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":101}}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":102},"contentChanges":[{"range":{"start":{"line":27,"character":15},"end":{"line":27,"character":15}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1727

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluepiPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":19,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:28:11: error: use of undeclared identifier 'bluepiPin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":102}}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":103},"contentChanges":[{"range":{"start":{"line":27,"character":16},"end":{"line":27,"character":16}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1729

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluepinPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":20,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:28:11: error: use of undeclared identifier 'bluepinPin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":103}}
>>>
Content-Length: 633

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":17},"end":{"line":27,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":20}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'bluepinPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here"}]}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 690

{"id":111,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluepinPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":20,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp":[{"newText":"bluePin","range":{"end":{"character":20,"line":27},"start":{"character":10,"line":27}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'bluepinPin' to 'bluePin'"}]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":104},"contentChanges":[{"range":{"start":{"line":27,"character":16},"end":{"line":27,"character":17}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1727

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluepiPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":19,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:28:11: error: use of undeclared identifier 'bluepiPin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":104}}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":105},"contentChanges":[{"range":{"start":{"line":27,"character":15},"end":{"line":27,"character":16}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1725

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluepPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":18,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:28:11: error: use of undeclared identifier 'bluepPin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":105}}
>>>
Content-Length: 631

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":15},"end":{"line":27,"character":15}},"context":{"diagnostics":[{"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":18}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'bluepPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here"}]}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 686

{"id":112,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluepPin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":18,"line":27},"start":{"character":10,"line":27}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp":[{"newText":"bluePin","range":{"end":{"character":18,"line":27},"start":{"character":10,"line":27}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'bluepPin' to 'bluePin'"}]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":106},"contentChanges":[{"range":{"start":{"line":27,"character":14},"end":{"line":27,"character":15}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1191

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":36},"start":{"character":11,"line":36}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":106}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":27,"character":14},"end":{"line":27,"character":14}},"context":{"diagnostics":[]}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":113,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 2129

{"id":114,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":7}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 388

{"id":115,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n- `unsigned int frequency`\n- `unsigned long duration = 0`\n\n---\n```cpp\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)\n```"},"range":{"end":{"character":10,"line":36},"start":{"character":6,"line":36}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":6}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 388

{"id":116,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n- `unsigned int frequency`\n- `unsigned long duration = 0`\n\n---\n```cpp\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)\n```"},"range":{"end":{"character":10,"line":36},"start":{"character":6,"line":36}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":6}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":117,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 520

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":6},"end":{"line":36,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":36,"character":11},"end":{"line":36,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'buzzerPin'"}]}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":118,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":107},"contentChanges":[{"range":{"start":{"line":36,"character":6},"end":{"line":36,"character":27}},"rangeLength":21,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1000

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":39},"start":{"character":11,"line":39}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":107}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":5}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":119,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 2129

{"id":120,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":6}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":121,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":108},"contentChanges":[{"range":{"start":{"line":39,"character":6},"end":{"line":39,"character":27}},"rangeLength":21,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 809

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":42},"start":{"character":11,"line":42}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":108}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":42,"character":6}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 388

{"id":122,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n- `unsigned int frequency`\n- `unsigned long duration = 0`\n\n---\n```cpp\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)\n```"},"range":{"end":{"character":10,"line":42},"start":{"character":6,"line":42}}}}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 2129

{"id":123,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":42,"character":6}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 388

{"id":124,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n- `unsigned int frequency`\n- `unsigned long duration = 0`\n\n---\n```cpp\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)\n```"},"range":{"end":{"character":10,"line":42},"start":{"character":6,"line":42}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":42,"character":6}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":125,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":109},"contentChanges":[{"range":{"start":{"line":42,"character":6},"end":{"line":42,"character":27}},"rangeLength":21,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 618

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":45},"start":{"character":11,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":109}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":45,"character":6}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 388

{"id":126,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `tone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n- `unsigned int frequency`\n- `unsigned long duration = 0`\n\n---\n```cpp\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0)\n```"},"range":{"end":{"character":10,"line":45},"start":{"character":6,"line":45}}}}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 2129

{"id":127,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":45,"character":7}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":128,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 520

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":45,"character":7},"end":{"line":45,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":45,"character":11},"end":{"line":45,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'buzzerPin'"}]}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":129,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":110},"contentChanges":[{"range":{"start":{"line":45,"character":7},"end":{"line":45,"character":27}},"rangeLength":20,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 608

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 't'","range":{"end":{"character":7,"line":45},"start":{"character":6,"line":45}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":110}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":111},"contentChanges":[{"range":{"start":{"line":45,"character":6},"end":{"line":45,"character":7}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'buzzerPin'","range":{"end":{"character":20,"line":47},"start":{"character":11,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":111}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":47,"character":5}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"id":130,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `noTone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n\n---\n```cpp\nvoid noTone(uint8_t _pin)\n```"},"range":{"end":{"character":10,"line":47},"start":{"character":4,"line":47}}}}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 2129

{"id":131,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":46,"character":9}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":132,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":47,"character":5}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 280

{"id":133,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `noTone`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t _pin`\n\n---\n```cpp\nvoid noTone(uint8_t _pin)\n```"},"range":{"end":{"character":10,"line":47},"start":{"character":4,"line":47}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":47,"character":6}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":134,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":47,"character":6},"end":{"line":47,"character":6}},"context":{"diagnostics":[]}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":135,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":47,"character":2}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":136,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":47,"character":3}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":137,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":112},"contentChanges":[{"range":{"start":{"line":47,"character":5},"end":{"line":47,"character":22}},"rangeLength":17,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'n'","range":{"end":{"character":5,"line":47},"start":{"character":4,"line":47}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":112}}
>>>
Content-Length: 509

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":47,"character":5},"end":{"line":47,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'n'"}]}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":138,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 2129

{"id":139,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":113},"contentChanges":[{"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":113}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":26}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":140,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":24},"end":{"line":42,"character":3}},"context":{"diagnostics":[]}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":141,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":24}},"context":{"diagnostics":[]}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":142,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":114},"contentChanges":[{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":24}},"rangeLength":20,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":114}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":22}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 287

{"id":143,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":24,"line":37},"start":{"character":13,"line":37}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":4}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 268

{"id":144,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"end":{"character":10,"line":38},"start":{"character":4,"line":38}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":5}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 388

{"id":145,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":29},"start":{"character":2,"line":29}}},{"kind":1,"range":{"end":{"character":10,"line":35},"start":{"character":4,"line":35}}},{"kind":1,"range":{"end":{"character":10,"line":38},"start":{"character":4,"line":38}}},{"kind":1,"range":{"end":{"character":10,"line":44},"start":{"character":4,"line":44}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":10}},"context":{"diagnostics":[]}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":146,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":4}},"context":{"diagnostics":[]}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":147,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":4}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 268

{"id":148,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"end":{"character":10,"line":38},"start":{"character":4,"line":38}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":5}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 388

{"id":149,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":29},"start":{"character":2,"line":29}}},{"kind":1,"range":{"end":{"character":10,"line":35},"start":{"character":4,"line":35}}},{"kind":1,"range":{"end":{"character":10,"line":38},"start":{"character":4,"line":38}}},{"kind":1,"range":{"end":{"character":10,"line":44},"start":{"character":4,"line":44}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":24}},"context":{"diagnostics":[]}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":150,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":115},"contentChanges":[{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":24}},"rangeLength":20,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":115}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":24}},"context":{"diagnostics":[]}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":151,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":116},"contentChanges":[{"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":24}},"rangeLength":20,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":116}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":46,"character":5}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":152,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":44,"character":4}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 268

{"id":153,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"end":{"character":10,"line":44},"start":{"character":4,"line":44}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":44,"character":5}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"id":154,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":29},"start":{"character":2,"line":29}}},{"kind":1,"range":{"end":{"character":10,"line":44},"start":{"character":4,"line":44}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":44,"character":5},"end":{"line":44,"character":24}},"context":{"diagnostics":[]}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":155,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":117},"contentChanges":[{"range":{"start":{"line":44,"character":5},"end":{"line":44,"character":24}},"rangeLength":19,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'S'","range":{"end":{"character":5,"line":44},"start":{"character":4,"line":44}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":117}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":118},"contentChanges":[{"range":{"start":{"line":44,"character":4},"end":{"line":44,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":118}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":119},"contentChanges":[{"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":4}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":119}}
>>>
Content-Length: 355

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":120},"contentChanges":[{"range":{"start":{"line":44,"character":0},"end":{"line":44,"character":2}},"rangeLength":2,"text":"    "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp","version":120}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":29}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":156,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 2129

{"id":157,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":5,"character":15}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 260

{"id":158,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `thirdKeyPin`  \n\n---\nType: `int`  \nValue = `4`  \n\n---\n```cpp\nint thirdKeyPin = 4\n```"},"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":5,"character":14}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 260

{"id":159,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `thirdKeyPin`  \n\n---\nType: `int`  \nValue = `4`  \n\n---\n```cpp\nint thirdKeyPin = 4\n```"},"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server984424846/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":8,"character":11}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 251

{"id":160,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `redPin`  \n\n---\nType: `int`  \nValue = `9`  \n\n---\n```cpp\nint redPin = 9\n```"},"range":{"end":{"character":12,"line":8},"start":{"character":11,"line":8}}}}
>>>
Content-Length: 60

{"method":"shutdown","params":null,"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":161,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":94088,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 1620

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint redPin = 9;\nint greenPin = 10;\nint bluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(redPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    \n      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    \n      \n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    \n      \n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    \n      \n  } else {\n    \n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n"}},"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":14}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 2127

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"redPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}Content-Length: 285

{"id":2,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":24,"line":40},"start":{"character":13,"line":40}}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":15}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":3,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":135},"start":{"character":4,"line":135}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":40,"character":14}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 285

{"id":4,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":24,"line":40},"start":{"character":13,"line":40}}}}
>>>
Content-Length: 325

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":1}},"context":{"diagnostics":[]}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":0,"character":27},"end":{"line":0,"character":27}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 325

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":1}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 325

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":0,"character":7},"end":{"line":0,"character":7}},"context":{"diagnostics":[]}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":8,"character":8}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"id":9,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":2,"range":{"end":{"character":16,"line":26},"start":{"character":10,"line":26}}}]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":10}},"context":{"diagnostics":[]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 254

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":9,"character":4}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"id":11,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `greenPin`  \n\n---\nType: `int`  \nValue = `10`  \n\n---\n```cpp\nint greenPin = 10\n```"},"range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}}}
>>>
Content-Length: 266

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":9,"character":5}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"id":12,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":2,"range":{"end":{"character":18,"line":28},"start":{"character":10,"line":28}}}]}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"context":{"diagnostics":[]}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":13,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 266

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":8,"character":5}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"id":14,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":2,"range":{"end":{"character":16,"line":26},"start":{"character":10,"line":26}}}]}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"context":{"diagnostics":[]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 347

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 752

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'redPin'; did you mean 'edPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'edPin' declared here","range":{"end":{"character":16,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"message":"'edPin' declared here\n\nDigitalTrumpet.ino.cpp:27:11: error: use of undeclared identifier 'redPin'; did you mean 'edPin'?","range":{"end":{"character":9,"line":8},"start":{"character":4,"line":8}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":2}}
>>>
Content-Length: 549

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":9}},"severity":3,"message":"'edPin' declared here\n\nDigitalTrumpet.ino.cpp:27:11: error: use of undeclared identifier 'redPin'; did you mean 'edPin'?"}]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 2126

{"id":17,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"edPin","range":{"end":{"character":13,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":9,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}
>>>
Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":4}},"text":"R"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 757

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'redPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here","range":{"end":{"character":16,"line":26},"start":{"character":10,"line":26}},"severity":1,"source":"clang"},{"message":"'RedPin' declared here\n\nDigitalTrumpet.ino.cpp:27:11: error: use of undeclared identifier 'redPin'; did you mean 'RedPin'?","range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":3}}
>>>
Content-Length: 552

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":10}},"severity":3,"message":"'RedPin' declared here\n\nDigitalTrumpet.ino.cpp:27:11: error: use of undeclared identifier 'redPin'; did you mean 'RedPin'?"}]}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":18,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 2128

{"id":19,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":30},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":10,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":49},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":9,"line":32},"start":{"character":5,"line":32}}}]}
>>>
Content-Length: 266

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":9,"character":5}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"id":20,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":2,"range":{"end":{"character":18,"line":28},"start":{"character":10,"line":28}}}]}
>>>
Content-Length: 3672

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":4},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint greenPin = 10;\nint bluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(redPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    \n      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    \n      \n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    \n      \n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    \n      \n  } else {\n    \n  }\n}\n\n/*\n  note  frequency\n  c     262 Hz\n  d     294 Hz\n  e     330 Hz\n  f     349 Hz\n  g     392 Hz\n  a     440 Hz\n  b     494 Hz\n  C     523 Hz\n*/\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 50);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}]},"jsonrpc":"2.0"}Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"context":{"diagnostics":[]}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":21,"jsonrpc":"2.0","result":[]}Content-Length: 9337

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'redPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"message":"'RedPin' declared here\n\nDigitalTrumpet.ino.cpp:43:11: error: use of undeclared identifier 'redPin'; did you mean 'RedPin'?","range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'greenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'greenPin' declared here","range":{"end":{"character":22,"line":84},"start":{"character":14,"line":84}},"severity":1,"source":"clang"},{"message":"'greenPin' declared here\n\nDigitalTrumpet.ino.cpp:85:15: error: use of undeclared identifier 'GreenPin'; did you mean 'greenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":85},"start":{"character":14,"line":85}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:86:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'greenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'greenPin' declared here","range":{"end":{"character":22,"line":92},"start":{"character":14,"line":92}},"severity":1,"source":"clang"},{"message":"'greenPin' declared here\n\nDigitalTrumpet.ino.cpp:93:15: error: use of undeclared identifier 'GreenPin'; did you mean 'greenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":93},"start":{"character":14,"line":93}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:94:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'greenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'greenPin' declared here","range":{"end":{"character":22,"line":101},"start":{"character":14,"line":101}},"severity":1,"source":"clang"},{"message":"'greenPin' declared here\n\nDigitalTrumpet.ino.cpp:102:15: error: use of undeclared identifier 'GreenPin'; did you mean 'greenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":102},"start":{"character":14,"line":102}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:103:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'greenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'greenPin' declared here","range":{"end":{"character":22,"line":108},"start":{"charact
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":22,"jsonrpc":"2.0"}
<<<
er":14,"line":108}},"severity":1,"source":"clang"},{"message":"'greenPin' declared here\n\nDigitalTrumpet.ino.cpp:109:15: error: use of undeclared identifier 'GreenPin'; did you mean 'greenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":109},"start":{"character":14,"line":109}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:110:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'greenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'greenPin' declared here","range":{"end":{"character":22,"line":115},"start":{"character":14,"line":115}},"severity":1,"source":"clang"},{"message":"'greenPin' declared here\n\nDigitalTrumpet.ino.cpp:116:15: error: use of undeclared identifier 'GreenPin'; did you mean 'greenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":116},"start":{"character":14,"line":116}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:117:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'greenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'greenPin' declared here","range":{"end":{"character":22,"line":122},"start":{"character":14,"line":122}},"severity":1,"source":"clang"},{"message":"'greenPin' declared here\n\nDigitalTrumpet.ino.cpp:123:15: error: use of undeclared identifier 'GreenPin'; did you mean 'greenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":123},"start":{"character":14,"line":123}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:124:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'greenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'greenPin' declared here","range":{"end":{"character":22,"line":129},"start":{"character":14,"line":129}},"severity":1,"source":"clang"},{"message":"'greenPin' declared here\n\nDigitalTrumpet.ino.cpp:130:15: error: use of undeclared identifier 'GreenPin'; did you mean 'greenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":130},"start":{"character":14,"line":130}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:131:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'greenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'greenPin' declared here","range":{"end":{"character":22,"line":136},"start":{"character":14,"line":136}},"severity":1,"source":"clang"},{"message":"'greenPin' declared here\n\nDigitalTrumpet.ino.cpp:137:15: error: use of undeclared identifier 'GreenPin'; did you mean 'greenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":137},"start":{"character":14,"line":137}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:138:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":4}}
>>>
Content-Length: 347

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":25},"jsonrpc":"2.0"}Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},"context":{"diagnostics":[]}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 5179

{"id":22,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"greenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}Content-Length: 37

{"id":23,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 9837

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'redPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"message":"'RedPin' declared here\n\nDigitalTrumpet.ino.cpp:43:11: error: use of undeclared identifier 'redPin'; did you mean 'RedPin'?","range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greenPin'; did you mean 'reenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'reenPin' declared here","range":{"end":{"character":18,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"},{"message":"'reenPin' declared here\n\nDigitalTrumpet.ino.cpp:45:11: error: use of undeclared identifier 'greenPin'; did you mean 'reenPin'?","range":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'reenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'reenPin' declared here","range":{"end":{"character":22,"line":84},"start":{"character":14,"line":84}},"severity":1,"source":"clang"},{"message":"'reenPin' declared here\n\nDigitalTrumpet.ino.cpp:85:15: error: use of undeclared identifier 'GreenPin'; did you mean 'reenPin'?","range":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":85},"start":{"character":14,"line":85}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:86:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'reenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'reenPin' declared here","range":{"end":{"character":22,"line":92},"start":{"character":14,"line":92}},"severity":1,"source":"clang"},{"message":"'reenPin' declared here\n\nDigitalTrumpet.ino.cpp:93:15: error: use of undeclared identifier 'GreenPin'; did you mean 'reenPin'?","range":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":93},"start":{"character":14,"line":93}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:94:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'reenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'reenPin' declared here","range":{"end":{"character":22,"line":101},"start":{"character":14,"line":101}},"severity":1,"source":"clang"},{"message":"'reenPin' declared here\n\nDigitalTrumpet.ino.cpp:102:15: error: use of undeclared identifier 'GreenPin'; did you mean 'reenPin'?","range":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":102},"start":{"character":14,"line":102}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:103:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'reenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'reenPin' declared here","range":{"end":{"character":22,"line":108},"start":{"character":14,"line":108}},"severity":1,"source":"clang"},{"message":"'reenPin' declared here\n\nDigitalTrumpet.ino.cpp:109:15: error: use of undeclared identifier 'GreenPin'; did you mean 'reenPin'?","range":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":109},"start":{"character":14,"line":109}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:110:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'reenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'reenPin' declared here","range":{"end":{"character":22,"line":115},"start":{"character":14,"line":115}},"severity":1,"source":"clang"},{"message":"'reenPin' declared here\n\nDigitalTrumpet.ino.cpp:116:15: error: use of undeclared identifier 'GreenPin'; did you mean 'reenPin'?","range":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":116},"start":{"character":14,"line":116}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:117:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'reenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'reenPin' declared here","range":{"end":{"character":22,"line":122},"start":{"character":14,"line":122}},"severity":1,"source":"clang"},{"message":"'reenPin' declared here\n\nDigitalTrumpet.ino.cpp:123:15: error: use of undeclared identifier 'GreenPin'; did you mean 'reenPin'?","range":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":123},"start":{"character":14,"line":123}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:124:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'reenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'reenPin' declared here","range":{"end":{"character":22,"line":129},"start":{"character":14,"line":129}},"severity":1,"source":"clang"},{"message":"'reenPin' declared here\n\nDigitalTrumpet.ino.cpp:130:15: error: use of undeclared identifier 'GreenPin'; did you mean 'reenPin'?","range":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":130},"start":{"character":14,"line":130}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:131:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'GreenPin'; did you mean 'reenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'reenPin' declared here","range":{"end":{"character":22,"line":136},"start":{"character":14,"line":136}},"severity":1,"source":"clang"},{"message":"'reenPin' declared here\n\nDigitalTrumpet.ino.cpp:137:15: error: use of undeclared identifier 'GreenPin'; did you mean 'reenPin'?","range":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":137},"start":{"character":14,"line":137}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:138:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":5}}Content-Length: 5178

{"id":24,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"reenPin","range":{"end":{"character":16,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":11,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}
>>>
Content-Length: 332

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},"text":"G"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 5567

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'redPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"message":"'RedPin' declared here\n\nDigitalTrumpet.ino.cpp:43:11: error: use of undeclared identifier 'redPin'; did you mean 'RedPin'?","range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here","range":{"end":{"character":18,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"},{"message":"'GreenPin' declared here\n\nDigitalTrumpet.ino.cpp:45:11: error: use of undeclared identifier 'greenPin'; did you mean 'GreenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":85},"start":{"character":14,"line":85}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:86:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":93},"start":{"character":14,"line":93}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:94:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":102},"start":{"character":14,"line":102}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:103:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":109},"start":{"character":14,"line":109}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:110:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":116},"start":{"character":14,"line":116}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:117:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":123},"start":{"character":14,"line":123}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:124:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":130},"start":{"character":14,"line":130}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:131:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'bluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'bluePin' declared here","range":{"end":{"character":21,"line":137},"start":{"character":14,"line":137}},"severity":1,"source":"clang"},{"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:138:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":6}}
>>>
Content-Length: 558

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":12}},"severity":3,"message":"'GreenPin' declared here\n\nDigitalTrumpet.ino.cpp:45:11: error: use of undeclared identifier 'greenPin'; did you mean 'GreenPin'?"}]}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":25,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":26,"jsonrpc":"2.0"}Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":136,"character":7},"end":{"line":136,"character":7}},"context":{"diagnostics":[]}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 5179

{"id":26,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"bluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}Content-Length: 37

{"id":27,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":10,"character":5}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 937

{"id":28,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":2,"range":{"end":{"character":17,"line":43},"start":{"character":10,"line":43}}},{"kind":2,"range":{"end":{"character":21,"line":85},"start":{"character":14,"line":85}}},{"kind":2,"range":{"end":{"character":21,"line":93},"start":{"character":14,"line":93}}},{"kind":2,"range":{"end":{"character":21,"line":102},"start":{"character":14,"line":102}}},{"kind":2,"range":{"end":{"character":21,"line":109},"start":{"character":14,"line":109}}},{"kind":2,"range":{"end":{"character":21,"line":116},"start":{"character":14,"line":116}}},{"kind":2,"range":{"end":{"character":21,"line":123},"start":{"character":14,"line":123}}},{"kind":2,"range":{"end":{"character":21,"line":130},"start":{"character":14,"line":130}}},{"kind":2,"range":{"end":{"character":21,"line":137},"start":{"character":14,"line":137}}}]}
>>>
Content-Length: 2189

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":10,"character":5},"end":{"line":10,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":11}},"severity":3,"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:86:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":11}},"severity":3,"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:94:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":11}},"severity":3,"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:103:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":11}},"severity":3,"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:110:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":11}},"severity":3,"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:117:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":11}},"severity":3,"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:124:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":11}},"severity":3,"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:131:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":11}},"severity":3,"message":"'bluePin' declared here\n\nDigitalTrumpet.ino.cpp:138:15: error: use of undeclared identifier 'BluePin'; did you mean 'bluePin'?"}]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 349

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 6063

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'redPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"message":"'RedPin' declared here\n\nDigitalTrumpet.ino.cpp:43:11: error: use of undeclared identifier 'redPin'; did you mean 'RedPin'?","range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluePin'; did you mean 'luePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'luePin' declared here","range":{"end":{"character":17,"line":43},"start":{"character":10,"line":43}},"severity":1,"source":"clang"},{"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:44:11: error: use of undeclared identifier 'bluePin'; did you mean 'luePin'?","range":{"end":{"character":10,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here","range":{"end":{"character":18,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"},{"message":"'GreenPin' declared here\n\nDigitalTrumpet.ino.cpp:45:11: error: use of undeclared identifier 'greenPin'; did you mean 'GreenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'luePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'luePin' declared here","range":{"end":{"character":21,"line":85},"start":{"character":14,"line":85}},"severity":1,"source":"clang"},{"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:86:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?","range":{"end":{"character":10,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'luePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'luePin' declared here","range":{"end":{"character":21,"line":93},"start":{"character":14,"line":93}},"severity":1,"source":"clang"},{"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:94:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?","range":{"end":{"character":10,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'luePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'luePin' declared here","range":{"end":{"character":21,"line":102},"start":{"character":14,"line":102}},"severity":1,"source":"clang"},{"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:103:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?","range":{"end":{"character":10,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'luePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'luePin' declared here","range":{"end":{"character":21,"line":109},"start":{"character":14,"line":109}},"severity":1,"source":"clang"},{"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:110:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?","range":{"end":{"character":10,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'luePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'luePin' declared here","range":{"end":{"character":21,"line":116},"start":{"character":14,"line":116}},"severity":1,"source":"clang"},{"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:117:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?","range":{"end":{"character":10,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'luePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'luePin' declared here","range":{"end":{"character":21,"line":123},"start":{"character":14,"line":123}},"severity":1,"source":"clang"},{"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:124:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?","range":{"end":{"character":10,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'luePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'luePin' declared here","range":{"end":{"character":21,"line":130},"start":{"character":14,"line":130}},"severity":1,"source":"clang"},{"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:131:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?","range":{"end":{"character":10,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'BluePin'; did you mean 'luePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'luePin' declared here","range":{"end":{"character":21,"line":137},"start":{"character":14,"line":137}},"severity":1,"source":"clang"},{"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:138:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?","range":{"end":{"character":10,"line":10},"start":{"character":4,"line":10}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":7}}
>>>
Content-Length: 2403

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":10}},"severity":3,"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:44:11: error: use of undeclared identifier 'bluePin'; did you mean 'luePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":10}},"severity":3,"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:86:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":10}},"severity":3,"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:94:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":10}},"severity":3,"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:103:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":10}},"severity":3,"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:110:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":10}},"severity":3,"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:117:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":10}},"severity":3,"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:124:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":10}},"severity":3,"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:131:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":10}},"severity":3,"message":"'luePin' declared here\n\nDigitalTrumpet.ino.cpp:138:15: error: use of undeclared identifier 'BluePin'; did you mean 'luePin'?"}]}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":30,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":31,"jsonrpc":"2.0"}Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":136,"character":7},"end":{"line":136,"character":7}},"context":{"diagnostics":[]}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 5178

{"id":31,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"luePin","range":{"end":{"character":15,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":10,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}Content-Length: 37

{"id":32,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 334

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":4}},"text":"B"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1825

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'redPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"message":"'RedPin' declared here\n\nDigitalTrumpet.ino.cpp:43:11: error: use of undeclared identifier 'redPin'; did you mean 'RedPin'?","range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluePin'; did you mean 'BluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'BluePin' declared here","range":{"end":{"character":17,"line":43},"start":{"character":10,"line":43}},"severity":1,"source":"clang"},{"message":"'BluePin' declared here\n\nDigitalTrumpet.ino.cpp:44:11: error: use of undeclared identifier 'bluePin'; did you mean 'BluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here","range":{"end":{"character":18,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"},{"message":"'GreenPin' declared here\n\nDigitalTrumpet.ino.cpp:45:11: error: use of undeclared identifier 'greenPin'; did you mean 'GreenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":8}}
>>>
Content-Length: 559

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":10,"character":5},"end":{"line":10,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":11}},"severity":3,"message":"'BluePin' declared here\n\nDigitalTrumpet.ino.cpp:44:11: error: use of undeclared identifier 'bluePin'; did you mean 'BluePin'?"}]}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":33,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":34,"jsonrpc":"2.0"}Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":136,"character":7},"end":{"line":136,"character":7}},"context":{"diagnostics":[]}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 5179

{"id":34,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}Content-Length: 37

{"id":35,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":5}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"id":36,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":1,"range":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}}]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":5}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":37,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":5}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 645

{"id":38,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":36},"start":{"character":2,"line":36}}},{"kind":1,"range":{"end":{"character":9,"line":37},"start":{"character":2,"line":37}}},{"kind":1,"range":{"end":{"character":9,"line":38},"start":{"character":2,"line":38}}},{"kind":1,"range":{"end":{"character":9,"line":39},"start":{"character":2,"line":39}}},{"kind":1,"range":{"end":{"character":9,"line":42},"start":{"character":2,"line":42}}},{"kind":1,"range":{"end":{"character":9,"line":43},"start":{"character":2,"line":43}}},{"kind":1,"range":{"end":{"character":9,"line":44},"start":{"character":2,"line":44}}}]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":5}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 645

{"id":39,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":36},"start":{"character":2,"line":36}}},{"kind":1,"range":{"end":{"character":9,"line":37},"start":{"character":2,"line":37}}},{"kind":1,"range":{"end":{"character":9,"line":38},"start":{"character":2,"line":38}}},{"kind":1,"range":{"end":{"character":9,"line":39},"start":{"character":2,"line":39}}},{"kind":1,"range":{"end":{"character":9,"line":42},"start":{"character":2,"line":42}}},{"kind":1,"range":{"end":{"character":9,"line":43},"start":{"character":2,"line":43}}},{"kind":1,"range":{"end":{"character":9,"line":44},"start":{"character":2,"line":44}}}]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":5}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 645

{"id":40,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":36},"start":{"character":2,"line":36}}},{"kind":1,"range":{"end":{"character":9,"line":37},"start":{"character":2,"line":37}}},{"kind":1,"range":{"end":{"character":9,"line":38},"start":{"character":2,"line":38}}},{"kind":1,"range":{"end":{"character":9,"line":39},"start":{"character":2,"line":39}}},{"kind":1,"range":{"end":{"character":9,"line":42},"start":{"character":2,"line":42}}},{"kind":1,"range":{"end":{"character":9,"line":43},"start":{"character":2,"line":43}}},{"kind":1,"range":{"end":{"character":9,"line":44},"start":{"character":2,"line":44}}}]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":5}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 645

{"id":41,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":36},"start":{"character":2,"line":36}}},{"kind":1,"range":{"end":{"character":9,"line":37},"start":{"character":2,"line":37}}},{"kind":1,"range":{"end":{"character":9,"line":38},"start":{"character":2,"line":38}}},{"kind":1,"range":{"end":{"character":9,"line":39},"start":{"character":2,"line":39}}},{"kind":1,"range":{"end":{"character":9,"line":42},"start":{"character":2,"line":42}}},{"kind":1,"range":{"end":{"character":9,"line":43},"start":{"character":2,"line":43}}},{"kind":1,"range":{"end":{"character":9,"line":44},"start":{"character":2,"line":44}}}]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":39,"character":5},"end":{"line":39,"character":5}},"context":{"diagnostics":[]}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":42,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":42,"character":2}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 645

{"id":43,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":36},"start":{"character":2,"line":36}}},{"kind":1,"range":{"end":{"character":9,"line":37},"start":{"character":2,"line":37}}},{"kind":1,"range":{"end":{"character":9,"line":38},"start":{"character":2,"line":38}}},{"kind":1,"range":{"end":{"character":9,"line":39},"start":{"character":2,"line":39}}},{"kind":1,"range":{"end":{"character":9,"line":42},"start":{"character":2,"line":42}}},{"kind":1,"range":{"end":{"character":9,"line":43},"start":{"character":2,"line":43}}},{"kind":1,"range":{"end":{"character":9,"line":44},"start":{"character":2,"line":44}}}]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":2}},"context":{"diagnostics":[]}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":44,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":42,"character":10}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 935

{"id":45,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":2,"range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}}},{"kind":2,"range":{"end":{"character":20,"line":83},"start":{"character":14,"line":83}}},{"kind":2,"range":{"end":{"character":20,"line":91},"start":{"character":14,"line":91}}},{"kind":2,"range":{"end":{"character":20,"line":100},"start":{"character":14,"line":100}}},{"kind":2,"range":{"end":{"character":20,"line":107},"start":{"character":14,"line":107}}},{"kind":2,"range":{"end":{"character":20,"line":114},"start":{"character":14,"line":114}}},{"kind":2,"range":{"end":{"character":20,"line":121},"start":{"character":14,"line":121}}},{"kind":2,"range":{"end":{"character":20,"line":128},"start":{"character":14,"line":128}}},{"kind":2,"range":{"end":{"character":20,"line":135},"start":{"character":14,"line":135}}}]}
>>>
Content-Length: 625

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":42,"character":12},"end":{"line":42,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'redPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here"}]}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 676

{"id":46,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'redPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp":[{"newText":"RedPin","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'redPin' to 'RedPin'"}]}
>>>
Content-Length: 625

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":42,"character":11},"end":{"line":42,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'redPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here"}]}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 676

{"id":47,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'redPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp":[{"newText":"RedPin","range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'redPin' to 'RedPin'"}]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 1823

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'edPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here","range":{"end":{"character":15,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"},{"message":"'RedPin' declared here\n\nDigitalTrumpet.ino.cpp:43:11: error: use of undeclared identifier 'edPin'; did you mean 'RedPin'?","range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluePin'; did you mean 'BluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'BluePin' declared here","range":{"end":{"character":17,"line":43},"start":{"character":10,"line":43}},"severity":1,"source":"clang"},{"message":"'BluePin' declared here\n\nDigitalTrumpet.ino.cpp:44:11: error: use of undeclared identifier 'bluePin'; did you mean 'BluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here","range":{"end":{"character":18,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"},{"message":"'GreenPin' declared here\n\nDigitalTrumpet.ino.cpp:45:11: error: use of undeclared identifier 'greenPin'; did you mean 'GreenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":9}}
>>>
Content-Length: 624

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":15}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'edPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here"}]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 674

{"id":48,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'edPin'; did you mean 'RedPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:9:5: note: 'RedPin' declared here","range":{"end":{"character":15,"line":42},"start":{"character":10,"line":42}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp":[{"newText":"RedPin","range":{"end":{"character":15,"line":42},"start":{"character":10,"line":42}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'edPin' to 'RedPin'"}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":10}},"text":"R"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1303

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluePin'; did you mean 'BluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'BluePin' declared here","range":{"end":{"character":17,"line":43},"start":{"character":10,"line":43}},"severity":1,"source":"clang"},{"message":"'BluePin' declared here\n\nDigitalTrumpet.ino.cpp:44:11: error: use of undeclared identifier 'bluePin'; did you mean 'BluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here","range":{"end":{"character":18,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"},{"message":"'GreenPin' declared here\n\nDigitalTrumpet.ino.cpp:45:11: error: use of undeclared identifier 'greenPin'; did you mean 'GreenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":10}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":42,"character":11},"end":{"line":42,"character":11}},"context":{"diagnostics":[]}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":49,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 5179

{"id":50,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":11}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 937

{"id":51,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":2,"range":{"end":{"character":17,"line":43},"start":{"character":10,"line":43}}},{"kind":2,"range":{"end":{"character":21,"line":85},"start":{"character":14,"line":85}}},{"kind":2,"range":{"end":{"character":21,"line":93},"start":{"character":14,"line":93}}},{"kind":2,"range":{"end":{"character":21,"line":102},"start":{"character":14,"line":102}}},{"kind":2,"range":{"end":{"character":21,"line":109},"start":{"character":14,"line":109}}},{"kind":2,"range":{"end":{"character":21,"line":116},"start":{"character":14,"line":116}}},{"kind":2,"range":{"end":{"character":21,"line":123},"start":{"character":14,"line":123}}},{"kind":2,"range":{"end":{"character":21,"line":130},"start":{"character":14,"line":130}}},{"kind":2,"range":{"end":{"character":21,"line":137},"start":{"character":14,"line":137}}}]}
>>>
Content-Length: 629

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":43,"character":11},"end":{"line":43,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":17}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'bluePin'; did you mean 'BluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'BluePin' declared here"}]}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 683

{"id":52,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'bluePin'; did you mean 'BluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'BluePin' declared here","range":{"end":{"character":17,"line":43},"start":{"character":10,"line":43}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp":[{"newText":"BluePin","range":{"end":{"character":17,"line":43},"start":{"character":10,"line":43}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'bluePin' to 'BluePin'"}]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1301

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'luePin'; did you mean 'BluePin'? (fix available)\n\nDigitalTrumpet.ino.cpp:11:5: note: 'BluePin' declared here","range":{"end":{"character":16,"line":43},"start":{"character":10,"line":43}},"severity":1,"source":"clang"},{"message":"'BluePin' declared here\n\nDigitalTrumpet.ino.cpp:44:11: error: use of undeclared identifier 'luePin'; did you mean 'BluePin'?","range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"severity":3},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here","range":{"end":{"character":18,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"},{"message":"'GreenPin' declared here\n\nDigitalTrumpet.ino.cpp:45:11: error: use of undeclared identifier 'greenPin'; did you mean 'GreenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":11}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":10}},"text":"B"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 771

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here","range":{"end":{"character":18,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"},{"message":"'GreenPin' declared here\n\nDigitalTrumpet.ino.cpp:45:11: error: use of undeclared identifier 'greenPin'; did you mean 'GreenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":12}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":43,"character":11},"end":{"line":43,"character":11}},"context":{"diagnostics":[]}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":53,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 5179

{"id":54,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":44,"character":11}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 935

{"id":55,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":2,"range":{"end":{"character":18,"line":44},"start":{"character":10,"line":44}}},{"kind":2,"range":{"end":{"character":22,"line":84},"start":{"character":14,"line":84}}},{"kind":2,"range":{"end":{"character":22,"line":92},"start":{"character":14,"line":92}}},{"kind":2,"range":{"end":{"character":22,"line":101},"start":{"character":14,"line":101}}},{"kind":2,"range":{"end":{"character":22,"line":108},"start":{"character":14,"line":108}}},{"kind":2,"range":{"end":{"character":22,"line":115},"start":{"character":14,"line":115}}},{"kind":2,"range":{"end":{"character":22,"line":122},"start":{"character":14,"line":122}}},{"kind":2,"range":{"end":{"character":22,"line":129},"start":{"character":14,"line":129}}},{"kind":2,"range":{"end":{"character":22,"line":136},"start":{"character":14,"line":136}}}]}
>>>
Content-Length: 632

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":44,"character":11},"end":{"line":44,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":44,"character":10},"end":{"line":44,"character":18}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'greenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here"}]}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 689

{"id":56,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here","range":{"end":{"character":18,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp":[{"newText":"GreenPin","range":{"end":{"character":18,"line":44},"start":{"character":10,"line":44}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'greenPin' to 'GreenPin'"}]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":44,"character":10},"end":{"line":44,"character":11}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 769

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'reenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here","range":{"end":{"character":17,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"},{"message":"'GreenPin' declared here\n\nDigitalTrumpet.ino.cpp:45:11: error: use of undeclared identifier 'reenPin'; did you mean 'GreenPin'?","range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":13}}
>>>
Content-Length: 631

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":44,"character":10},"end":{"line":44,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":44,"character":10},"end":{"line":44,"character":17}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'reenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here"}]}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 687

{"id":57,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'reenPin'; did you mean 'GreenPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:10:5: note: 'GreenPin' declared here","range":{"end":{"character":17,"line":44},"start":{"character":10,"line":44}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp":[{"newText":"GreenPin","range":{"end":{"character":17,"line":44},"start":{"character":10,"line":44}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'reenPin' to 'GreenPin'"}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":44,"character":10},"end":{"line":44,"character":10}},"text":"G"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":14}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":44,"character":11},"end":{"line":44,"character":11}},"context":{"diagnostics":[]}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":58,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 5179

{"id":59,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":34}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":60,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":44},"start":{"character":8,"line":44}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":33}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"id":61,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `INPUT_PULLUP`  \n\n---\n```cpp\n#define INPUT_PULLUP 0x2\n```"},"range":{"end":{"character":36,"line":37},"start":{"character":24,"line":37}}}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":37,"character":34}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":62,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":44},"start":{"character":8,"line":44}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":8,"character":14}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":63,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":43,"character":22}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"id":64,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `OUTPUT`  \n\n---\n```cpp\n#define OUTPUT 0x1\n```"},"range":{"end":{"character":25,"line":43},"start":{"character":19,"line":43}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":59,"character":11}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":65,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":59,"character":33}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"id":66,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `fourthKeyPin`  \n\n---\nType: `int`  \nValue = `5`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint fourthKeyPin = 5\n```"},"range":{"end":{"character":37,"line":59},"start":{"character":25,"line":59}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":59,"character":33}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"id":67,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":2,"range":{"end":{"character":22,"line":39},"start":{"character":10,"line":39}}},{"kind":2,"range":{"end":{"character":37,"line":59},"start":{"character":25,"line":59}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":59,"character":25},"end":{"line":59,"character":37}},"context":{"diagnostics":[]}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":68,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":42,"character":13}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 292

{"id":69,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `RedPin`  \n\n---\nType: `int`  \nValue = `9`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint RedPin = 9\n```"},"range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":42,"character":13}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 935

{"id":70,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":2,"range":{"end":{"character":16,"line":42},"start":{"character":10,"line":42}}},{"kind":2,"range":{"end":{"character":20,"line":83},"start":{"character":14,"line":83}}},{"kind":2,"range":{"end":{"character":20,"line":91},"start":{"character":14,"line":91}}},{"kind":2,"range":{"end":{"character":20,"line":100},"start":{"character":14,"line":100}}},{"kind":2,"range":{"end":{"character":20,"line":107},"start":{"character":14,"line":107}}},{"kind":2,"range":{"end":{"character":20,"line":114},"start":{"character":14,"line":114}}},{"kind":2,"range":{"end":{"character":20,"line":121},"start":{"character":14,"line":121}}},{"kind":2,"range":{"end":{"character":20,"line":128},"start":{"character":14,"line":128}}},{"kind":2,"range":{"end":{"character":20,"line":135},"start":{"character":14,"line":135}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":16}},"context":{"diagnostics":[]}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":71,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":4}},"text":"  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":15}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":6}},"rangeLength":6,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":16}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":13}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 285

{"id":72,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":17,"line":50},"start":{"character":6,"line":50}}}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":50,"character":40},"end":{"line":51,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":17}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":40},"end":{"line":50,"character":40}},"context":{"diagnostics":[]}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":73,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 342

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":50,"character":40},"end":{"line":50,"character":40}},"text":"\n    "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":18}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":4}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'r'","range":{"end":{"character":5,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":19}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":51,"character":5},"end":{"line":51,"character":5}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 're'","range":{"end":{"character":6,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":20}}
>>>
Content-Length: 509

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":6},"end":{"line":51,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 're'"}]}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":74,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 5179

{"id":75,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":51,"character":5},"end":{"line":51,"character":6}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'r'","range":{"end":{"character":5,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":21}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":22}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":4}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'r'","range":{"end":{"character":5,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":23}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":51,"character":5},"end":{"line":51,"character":5}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 're'","range":{"end":{"character":6,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":24}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":51,"character":6},"end":{"line":51,"character":6}},"text":"d"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":25}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":7},"end":{"line":51,"character":7}},"context":{"diagnostics":[]}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":76,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 5179

{"id":77,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":26},"contentChanges":[{"range":{"start":{"line":51,"character":7},"end":{"line":51,"character":7}},"text":"()"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":26}}
>>>
Content-Length: 263

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":8}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 133

{"id":78,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"red() -> void","parameters":[]}]}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":8},"end":{"line":51,"character":8}},"context":{"diagnostics":[]}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":79,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 368

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":27},"contentChanges":[{"range":{"start":{"line":51,"character":0},"end":{"line":52,"character":0}},"rangeLength":10,"text":"    red()      \n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":53},"start":{"character":2,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":27}}
>>>
Content-Length: 263

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":0}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":80,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":8}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 227

{"id":81,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `red`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid red()\n```"},"range":{"end":{"character":9,"line":51},"start":{"character":8,"line":51}}}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":9},"end":{"line":51,"character":9}},"context":{"diagnostics":[]}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":82,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":10}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":83,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":51,"character":9},"end":{"line":51,"character":9}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":28}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":10},"end":{"line":51,"character":10}},"context":{"diagnostics":[]}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":84,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":4}},"text":"y"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'y'","range":{"end":{"character":5,"line":54},"start":{"character":4,"line":54}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":29}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":54,"character":5},"end":{"line":54,"character":5}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ye'","range":{"end":{"character":6,"line":54},"start":{"character":4,"line":54}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":30}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":54,"character":6},"end":{"line":54,"character":6}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yel'","range":{"end":{"character":7,"line":54},"start":{"character":4,"line":54}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":31}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":54,"character":7},"end":{"line":54,"character":7}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yell'","range":{"end":{"character":8,"line":54},"start":{"character":4,"line":54}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":32}}
>>>
Content-Length: 511

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":8},"end":{"line":54,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'yell'"}]}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":85,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 5179

{"id":86,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":54,"character":8},"end":{"line":54,"character":8}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 956

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'yello'; did you mean 'yellow'? (fix available)\n\nDigitalTrumpet.ino.cpp:23:6: note: 'yellow' declared here","range":{"end":{"character":9,"line":54},"start":{"character":4,"line":54}},"severity":1,"source":"clang"},{"message":"'yellow' declared here\n\nDigitalTrumpet.ino.cpp:55:5: error: use of undeclared identifier 'yello'; did you mean 'yellow'?","range":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}},"severity":3},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":33}}
>>>
Content-Length: 621

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":9},"end":{"line":54,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'yello'; did you mean 'yellow'? (fix available)\n\nDigitalTrumpet.ino.cpp:23:6: note: 'yellow' declared here"}]}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 671

{"id":87,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'yello'; did you mean 'yellow'? (fix available)\n\nDigitalTrumpet.ino.cpp:23:6: note: 'yellow' declared here","range":{"end":{"character":9,"line":54},"start":{"character":4,"line":54}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp":[{"newText":"yellow","range":{"end":{"character":9,"line":54},"start":{"character":4,"line":54}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'yello' to 'yellow'"}]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":34},"contentChanges":[{"range":{"start":{"line":54,"character":9},"end":{"line":54,"character":9}},"text":"w"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":34}}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":54,"character":10},"end":{"line":54,"character":10}},"text":"()"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":35}}
>>>
Content-Length: 264

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":11}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 136

{"id":88,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"yellow() -> void","parameters":[]}]}}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 5179

{"id":89,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":11},"end":{"line":54,"character":11}},"context":{"diagnostics":[]}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":90,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":54,"character":11},"end":{"line":54,"character":11}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":12,"line":54},"start":{"character":11,"line":54}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":36}}
>>>
Content-Length: 264

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":12}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 136

{"id":91,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"yellow() -> void","parameters":[]}]}}
>>>
Content-Length: 500

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":12},"end":{"line":54,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":54,"character":11},"end":{"line":54,"character":12}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":92,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":54,"character":11},"end":{"line":54,"character":12}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":56},"start":{"character":2,"line":56}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":37}}
>>>
Content-Length: 264

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":11}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 136

{"id":93,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"yellow() -> void","parameters":[]}]}}
>>>
Content-Length: 264

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":12}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 92

{"id":94,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":12},"end":{"line":54,"character":12}},"context":{"diagnostics":[]}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":95,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":54,"character":12},"end":{"line":54,"character":12}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":38}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":13},"end":{"line":54,"character":13}},"context":{"diagnostics":[]}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":96,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":56,"character":13}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 391

{"id":97,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":50},"start":{"character":6,"line":50}}},{"kind":1,"range":{"end":{"character":24,"line":53},"start":{"character":13,"line":53}}},{"kind":1,"range":{"end":{"character":24,"line":56},"start":{"character":13,"line":56}}},{"kind":1,"range":{"end":{"character":24,"line":59},"start":{"character":13,"line":59}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":56,"character":13},"end":{"line":56,"character":13}},"context":{"diagnostics":[]}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":98,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":57,"character":4},"end":{"line":57,"character":4}},"text":"g"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'g'","range":{"end":{"character":5,"line":57},"start":{"character":4,"line":57}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":39}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":57,"character":5},"end":{"line":57,"character":5}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'gr'","range":{"end":{"character":6,"line":57},"start":{"character":4,"line":57}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":40}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":57,"character":6},"end":{"line":57,"character":6}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'gre'","range":{"end":{"character":7,"line":57},"start":{"character":4,"line":57}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":41}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":57,"character":7},"end":{"line":57,"character":7}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 619

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":59},"start":{"character":2,"line":59}},"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'gree'","range":{"end":{"character":8,"line":57},"start":{"character":4,"line":57}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":42}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":57,"character":8},"end":{"line":57,"character":8}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":59},"start":{"character":2,"line":59}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":43}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":9}},"context":{"diagnostics":[]}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":99,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 5180

{"id":100,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":9}},"text":"()"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":59},"start":{"character":2,"line":59}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":44}}
>>>
Content-Length: 265

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":57,"character":10}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 136

{"id":101,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"green() -> void","parameters":[]}]}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":57,"character":10},"end":{"line":57,"character":10}},"context":{"diagnostics":[]}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":102,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":57,"character":11}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 93

{"id":103,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":57,"character":11},"end":{"line":57,"character":11}},"context":{"diagnostics":[]}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":104,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":57,"character":11},"end":{"line":57,"character":11}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":45}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":57,"character":12},"end":{"line":57,"character":12}},"context":{"diagnostics":[]}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":105,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":59,"character":12},"end":{"line":59,"character":12}},"context":{"diagnostics":[]}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":106,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":4}},"text":"b"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'b'","range":{"end":{"character":5,"line":60},"start":{"character":4,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":46}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":5}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'bl'","range":{"end":{"character":6,"line":60},"start":{"character":4,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":47}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":60,"character":6},"end":{"line":60,"character":6}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 943

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'blu'; did you mean 'blue'? (fix available)\n\nDigitalTrumpet.ino.cpp:29:6: note: 'blue' declared here","range":{"end":{"character":7,"line":60},"start":{"character":4,"line":60}},"severity":1,"source":"clang"},{"message":"'blue' declared here\n\nDigitalTrumpet.ino.cpp:61:5: error: use of undeclared identifier 'blu'; did you mean 'blue'?","range":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}},"severity":3},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":62},"start":{"character":2,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":48}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":60,"character":7},"end":{"line":60,"character":7}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":62},"start":{"character":2,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":49}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":60,"character":8},"end":{"line":60,"character":8}},"context":{"diagnostics":[]}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":107,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 5180

{"id":108,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":65},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":86},"start":{"character":0,"line":80}},"selectionRange":{"end":{"character":8,"line":80},"start":{"character":5,"line":80}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":11,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":11,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":10,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":9,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":131},"start":{"character":0,"line":125}},"selectionRange":{"end":{"character":12,"line":125},"start":{"character":5,"line":125}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":138},"start":{"character":0,"line":132}},"selectionRange":{"end":{"character":12,"line":132},"start":{"character":5,"line":132}}}]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":50},"contentChanges":[{"range":{"start":{"line":60,"character":8},"end":{"line":60,"character":8}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":50}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":60,"character":9},"end":{"line":60,"character":9}},"context":{"diagnostics":[]}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":109,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":51},"contentChanges":[{"range":{"start":{"line":60,"character":8},"end":{"line":60,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":62},"start":{"character":2,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":51}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":60,"character":8},"end":{"line":60,"character":8}},"context":{"diagnostics":[]}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":110,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":52},"contentChanges":[{"range":{"start":{"line":60,"character":8},"end":{"line":60,"character":8}},"text":"()"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":62},"start":{"character":2,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":52}}
>>>
Content-Length: 264

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":60,"character":9}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 135

{"id":111,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"blue() -> void","parameters":[]}]}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":60,"character":9},"end":{"line":60,"character":9}},"context":{"diagnostics":[]}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":112,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":53},"contentChanges":[{"range":{"start":{"line":60,"character":9},"end":{"line":60,"character":9}},"text":";"}]},"jsonrpc":"2.0"}Content-Length: 64

{"method":"$/cancelRequest","params":{"id":102},"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":10,"line":60},"start":{"character":9,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":53}}
>>>
Content-Length: 265

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":60,"character":10}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 135

{"id":113,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"blue() -> void","parameters":[]}]}}
>>>
Content-Length: 500

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":9},"end":{"line":60,"character":10}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":114,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":60,"character":9},"end":{"line":60,"character":10}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":62},"start":{"character":2,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":54}}
>>>
Content-Length: 264

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":60,"character":9}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 135

{"id":115,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"blue() -> void","parameters":[]}]}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":60,"character":9},"end":{"line":60,"character":9}},"context":{"diagnostics":[]}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":116,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":60,"character":10}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 93

{"id":117,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"context":{"diagnostics":[]}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":118,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":55},"contentChanges":[{"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":55}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":60,"character":11},"end":{"line":60,"character":11}},"context":{"diagnostics":[]}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":119,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":60,"character":7}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 252

{"id":120,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":118},"start":{"character":5,"line":118}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":60,"character":7}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":121,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `blue`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid blue()\n```"},"range":{"end":{"character":8,"line":60},"start":{"character":4,"line":60}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":61,"character":6}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":122,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":59,"character":7}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":123,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":58,"character":6}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":124,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":6}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":56}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":57}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":56,"character":5}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":125,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":4}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":58}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":55,"character":6}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":126,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":59}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":60},"contentChanges":[{"range":{"start":{"line":57,"character":12},"end":{"line":58,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":60}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":57,"character":12},"end":{"line":57,"character":12}},"context":{"diagnostics":[]}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":127,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":61},"contentChanges":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":4}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":61}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":62},"contentChanges":[{"range":{"start":{"line":60,"character":0},"end":{"line":60,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":62}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":56,"character":8}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":128,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":63},"contentChanges":[{"range":{"start":{"line":59,"character":11},"end":{"line":60,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":63}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":59,"character":11},"end":{"line":59,"character":11}},"context":{"diagnostics":[]}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":129,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":9}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"id":130,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `yellow`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid yellow()\n```"},"range":{"end":{"character":10,"line":54},"start":{"character":4,"line":54}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":9}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"id":131,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":1,"range":{"end":{"character":10,"line":54},"start":{"character":4,"line":54}}},{"kind":1,"range":{"end":{"character":11,"line":95},"start":{"character":5,"line":95}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":9},"end":{"line":54,"character":9}},"context":{"diagnostics":[]}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":132,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":64},"contentChanges":[{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":6}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":64}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":65},"contentChanges":[{"range":{"start":{"line":55,"character":2},"end":{"line":55,"character":4}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":65}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":66},"contentChanges":[{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":66}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":8}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"id":133,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `yellow`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid yellow()\n```"},"range":{"end":{"character":10,"line":54},"start":{"character":4,"line":54}}}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":67},"contentChanges":[{"range":{"start":{"line":54,"character":13},"end":{"line":55,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":67}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":9}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 229

{"id":134,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `red`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid red()\n```"},"range":{"end":{"character":10,"line":51},"start":{"character":9,"line":51}}}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":13},"end":{"line":54,"character":13}},"context":{"diagnostics":[]}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":135,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":68},"contentChanges":[{"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":6}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":68}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":69},"contentChanges":[{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":4}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":69}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":70},"contentChanges":[{"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":70}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":71},"contentChanges":[{"range":{"start":{"line":51,"character":16},"end":{"line":52,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":71}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":8}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 228

{"id":136,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `red`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid red()\n```"},"range":{"end":{"character":9,"line":51},"start":{"character":8,"line":51}}}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":61,"character":1},"end":{"line":61,"character":1}},"context":{"diagnostics":[]}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":137,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":71,"character":6}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":138,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":72,"character":6}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":139,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":64,"character":0},"end":{"line":72,"character":6}},"context":{"diagnostics":[]}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":140,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":72},"contentChanges":[{"range":{"start":{"line":64,"character":0},"end":{"line":72,"character":6}},"rangeLength":129,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":72}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":64,"character":5}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":141,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":64,"character":5},"end":{"line":64,"character":5}},"context":{"diagnostics":[]}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":142,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":63,"character":0},"end":{"line":0,"character":2}},"context":{"diagnostics":[]}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":143,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":73},"contentChanges":[{"range":{"start":{"line":62,"character":0},"end":{"line":63,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":73}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":74},"contentChanges":[{"range":{"start":{"line":61,"character":1},"end":{"line":62,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":74}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":61,"character":1},"end":{"line":61,"character":1}},"context":{"diagnostics":[]}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":144,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":10},"end":{"line":51,"character":16}},"context":{"diagnostics":[]}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":145,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":10},"end":{"line":51,"character":10}},"context":{"diagnostics":[]}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":146,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":7}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"id":147,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":1,"range":{"end":{"character":7,"line":51},"start":{"character":4,"line":51}}},{"kind":1,"range":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":7}},"context":{"diagnostics":[]}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":148,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":10},"end":{"line":51,"character":10}},"context":{"diagnostics":[]}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":149,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":10}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":150,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":3},"end":{"line":51,"character":10}},"context":{"diagnostics":[]}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":151,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}},"context":{"diagnostics":[]}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":152,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":10}},"context":{"diagnostics":[]}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":153,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":9}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":154,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":56,"character":11}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":155,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":57,"character":10}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"id":156,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `blue`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid blue()\n```"},"range":{"end":{"character":11,"line":57},"start":{"character":10,"line":57}}}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":12}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":157,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":13}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":158,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":75},"contentChanges":[{"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":10}},"rangeLength":6,"text":"b"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'b'","range":{"end":{"character":5,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":75}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":76},"contentChanges":[{"range":{"start":{"line":51,"character":5},"end":{"line":51,"character":5}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'bl'","range":{"end":{"character":6,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":76}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":77},"contentChanges":[{"range":{"start":{"line":51,"character":6},"end":{"line":51,"character":6}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 943

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'blu'; did you mean 'blue'? (fix available)\n\nDigitalTrumpet.ino.cpp:29:6: note: 'blue' declared here","range":{"end":{"character":7,"line":51},"start":{"character":4,"line":51}},"severity":1,"source":"clang"},{"message":"'blue' declared here\n\nDigitalTrumpet.ino.cpp:52:5: error: use of undeclared identifier 'blu'; did you mean 'blue'?","range":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}},"severity":3},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":77}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":78},"contentChanges":[{"range":{"start":{"line":51,"character":7},"end":{"line":51,"character":7}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":78}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":79},"contentChanges":[{"range":{"start":{"line":51,"character":8},"end":{"line":51,"character":8}},"text":"()"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":52},"start":{"character":2,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":79}}
>>>
Content-Length: 264

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":9}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 135

{"id":159,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"blue() -> void","parameters":[]}]}}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":160,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":9},"end":{"line":51,"character":9}},"context":{"diagnostics":[]}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":161,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 265

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":10}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 93

{"id":162,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":10},"end":{"line":51,"character":10}},"context":{"diagnostics":[]}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":163,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":80},"contentChanges":[{"range":{"start":{"line":51,"character":10},"end":{"line":51,"character":10}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":80}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":11},"end":{"line":51,"character":11}},"context":{"diagnostics":[]}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":164,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":11}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 392

{"id":165,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":50},"start":{"character":6,"line":50}}},{"kind":1,"range":{"end":{"character":24,"line":52},"start":{"character":13,"line":52}}},{"kind":1,"range":{"end":{"character":24,"line":54},"start":{"character":13,"line":54}}},{"kind":1,"range":{"end":{"character":24,"line":56},"start":{"character":13,"line":56}}}]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":11},"end":{"line":50,"character":11}},"context":{"diagnostics":[]}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":166,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":11}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":167,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":11},"end":{"line":53,"character":11}},"context":{"diagnostics":[]}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":168,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":53,"character":10}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"id":169,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":1,"range":{"end":{"character":10,"line":53},"start":{"character":4,"line":53}}},{"kind":1,"range":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":9}},"context":{"diagnostics":[]}},"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":170,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":10},"end":{"line":53,"character":10}},"context":{"diagnostics":[]}},"id":171,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":171,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":81},"contentChanges":[{"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":10}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 756

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'yello'; did you mean 'yellow'? (fix available)\n\nDigitalTrumpet.ino.cpp:23:6: note: 'yellow' declared here","range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"},{"message":"'yellow' declared here\n\nDigitalTrumpet.ino.cpp:54:5: error: use of undeclared identifier 'yello'; did you mean 'yellow'?","range":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":81}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":82},"contentChanges":[{"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yell'","range":{"end":{"character":8,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":82}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":83},"contentChanges":[{"range":{"start":{"line":53,"character":7},"end":{"line":53,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yel'","range":{"end":{"character":7,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":83}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":84},"contentChanges":[{"range":{"start":{"line":53,"character":6},"end":{"line":53,"character":7}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ye'","range":{"end":{"character":6,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":84}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":85},"contentChanges":[{"range":{"start":{"line":53,"character":5},"end":{"line":53,"character":6}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'y'","range":{"end":{"character":5,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":85}}
>>>
Content-Length: 509

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":5},"end":{"line":53,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'y'"}]}},"id":172,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":172,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":173,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":173,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":86},"contentChanges":[{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 404

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":6,"line":53},"start":{"character":5,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":86}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":4}},"context":{"diagnostics":[]}},"id":174,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":174,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":87},"contentChanges":[{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":4}},"text":"g"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'g'","range":{"end":{"character":5,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":87}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":88},"contentChanges":[{"range":{"start":{"line":53,"character":5},"end":{"line":53,"character":5}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'gr'","range":{"end":{"character":6,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":88}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":89},"contentChanges":[{"range":{"start":{"line":53,"character":6},"end":{"line":53,"character":6}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'gre'","range":{"end":{"character":7,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":89}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":90},"contentChanges":[{"range":{"start":{"line":53,"character":7},"end":{"line":53,"character":7}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 750

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'gree'; did you mean 'green'? (fix available)\n\nDigitalTrumpet.ino.cpp:25:6: note: 'green' declared here","range":{"end":{"character":8,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"},{"message":"'green' declared here\n\nDigitalTrumpet.ino.cpp:54:5: error: use of undeclared identifier 'gree'; did you mean 'green'?","range":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":90}}
>>>
Content-Length: 619

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'gree'; did you mean 'green'? (fix available)\n\nDigitalTrumpet.ino.cpp:25:6: note: 'green' declared here"}]}},"id":175,"jsonrpc":"2.0"}
<<<
Content-Length: 666

{"id":175,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'gree'; did you mean 'green'? (fix available)\n\nDigitalTrumpet.ino.cpp:25:6: note: 'green' declared here","range":{"end":{"character":8,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp":[{"newText":"green","range":{"end":{"character":8,"line":53},"start":{"character":4,"line":53}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'gree' to 'green'"}]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":91},"contentChanges":[{"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":8}},"text":"m"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 752

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greem'; did you mean 'green'? (fix available)\n\nDigitalTrumpet.ino.cpp:25:6: note: 'green' declared here","range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"},{"message":"'green' declared here\n\nDigitalTrumpet.ino.cpp:54:5: error: use of undeclared identifier 'greem'; did you mean 'green'?","range":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":91}}
>>>
Content-Length: 620

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'greem'; did you mean 'green'? (fix available)\n\nDigitalTrumpet.ino.cpp:25:6: note: 'green' declared here"}]}},"id":176,"jsonrpc":"2.0"}
<<<
Content-Length: 668

{"id":176,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'greem'; did you mean 'green'? (fix available)\n\nDigitalTrumpet.ino.cpp:25:6: note: 'green' declared here","range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp":[{"newText":"green","range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'greem' to 'green'"}]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":92},"contentChanges":[{"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 750

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'gree'; did you mean 'green'? (fix available)\n\nDigitalTrumpet.ino.cpp:25:6: note: 'green' declared here","range":{"end":{"character":8,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"},{"message":"'green' declared here\n\nDigitalTrumpet.ino.cpp:54:5: error: use of undeclared identifier 'gree'; did you mean 'green'?","range":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":92}}
>>>
Content-Length: 619

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'gree'; did you mean 'green'? (fix available)\n\nDigitalTrumpet.ino.cpp:25:6: note: 'green' declared here"}]}},"id":177,"jsonrpc":"2.0"}
<<<
Content-Length: 666

{"id":177,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'gree'; did you mean 'green'? (fix available)\n\nDigitalTrumpet.ino.cpp:25:6: note: 'green' declared here","range":{"end":{"character":8,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp":[{"newText":"green","range":{"end":{"character":8,"line":53},"start":{"character":4,"line":53}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'gree' to 'green'"}]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":93},"contentChanges":[{"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":8}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":93}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":9},"end":{"line":53,"character":9}},"context":{"diagnostics":[]}},"id":178,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":178,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":179,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":179,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":9}},"id":180,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":180,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":9},"end":{"line":54,"character":9}},"context":{"diagnostics":[]}},"id":181,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":181,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":55,"character":9}},"id":182,"jsonrpc":"2.0"}
<<<
Content-Length: 387

{"id":182,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":1,"range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}}},{"kind":1,"range":{"end":{"character":9,"line":55},"start":{"character":4,"line":55}}},{"kind":1,"range":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":55,"character":9},"end":{"line":55,"character":9}},"context":{"diagnostics":[]}},"id":183,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":183,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":94},"contentChanges":[{"range":{"start":{"line":55,"character":8},"end":{"line":55,"character":9}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 750

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'gree'; did you mean 'green'? (fix available)\n\nDigitalTrumpet.ino.cpp:25:6: note: 'green' declared here","range":{"end":{"character":8,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"},{"message":"'green' declared here\n\nDigitalTrumpet.ino.cpp:56:5: error: use of undeclared identifier 'gree'; did you mean 'green'?","range":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":94}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":95},"contentChanges":[{"range":{"start":{"line":55,"character":7},"end":{"line":55,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'gre'","range":{"end":{"character":7,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":95}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":96},"contentChanges":[{"range":{"start":{"line":55,"character":6},"end":{"line":55,"character":7}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'gr'","range":{"end":{"character":6,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":96}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":97},"contentChanges":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":6}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'g'","range":{"end":{"character":5,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":97}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":98},"contentChanges":[{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 404

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":6,"line":55},"start":{"character":5,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":98}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":4}},"context":{"diagnostics":[]}},"id":184,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":184,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":185,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":185,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":99},"contentChanges":[{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":4}},"text":"y"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'y'","range":{"end":{"character":5,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":99}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":100},"contentChanges":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":5}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ye'","range":{"end":{"character":6,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":100}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":101},"contentChanges":[{"range":{"start":{"line":55,"character":6},"end":{"line":55,"character":6}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yel'","range":{"end":{"character":7,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":101}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":102},"contentChanges":[{"range":{"start":{"line":55,"character":7},"end":{"line":55,"character":7}},"text":"l"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'yell'","range":{"end":{"character":8,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":102}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":103},"contentChanges":[{"range":{"start":{"line":55,"character":8},"end":{"line":55,"character":8}},"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 757

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'yello'; did you mean 'yellow'? (fix available)\n\nDigitalTrumpet.ino.cpp:23:6: note: 'yellow' declared here","range":{"end":{"character":9,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"},{"message":"'yellow' declared here\n\nDigitalTrumpet.ino.cpp:56:5: error: use of undeclared identifier 'yello'; did you mean 'yellow'?","range":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":103}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":104},"contentChanges":[{"range":{"start":{"line":55,"character":9},"end":{"line":55,"character":9}},"text":"w"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":104}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":55,"character":10},"end":{"line":55,"character":10}},"context":{"diagnostics":[]}},"id":186,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":186,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":187,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":187,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":56,"character":10}},"id":188,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":188,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":56,"character":10},"end":{"line":56,"character":10}},"context":{"diagnostics":[]}},"id":189,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":189,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":57,"character":10},"end":{"line":57,"character":10}},"context":{"diagnostics":[]}},"id":190,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":190,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":57,"character":8}},"id":191,"jsonrpc":"2.0"}
<<<
Content-Length: 387

{"id":191,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":1,"range":{"end":{"character":8,"line":51},"start":{"character":4,"line":51}}},{"kind":1,"range":{"end":{"character":8,"line":57},"start":{"character":4,"line":57}}},{"kind":1,"range":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":57,"character":8},"end":{"line":57,"character":8}},"context":{"diagnostics":[]}},"id":192,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":192,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":105},"contentChanges":[{"range":{"start":{"line":57,"character":7},"end":{"line":57,"character":8}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 744

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'blu'; did you mean 'blue'? (fix available)\n\nDigitalTrumpet.ino.cpp:29:6: note: 'blue' declared here","range":{"end":{"character":7,"line":57},"start":{"character":4,"line":57}},"severity":1,"source":"clang"},{"message":"'blue' declared here\n\nDigitalTrumpet.ino.cpp:58:5: error: use of undeclared identifier 'blu'; did you mean 'blue'?","range":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":105}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":106},"contentChanges":[{"range":{"start":{"line":57,"character":6},"end":{"line":57,"character":7}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'bl'","range":{"end":{"character":6,"line":57},"start":{"character":4,"line":57}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":106}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":107},"contentChanges":[{"range":{"start":{"line":57,"character":5},"end":{"line":57,"character":6}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'b'","range":{"end":{"character":5,"line":57},"start":{"character":4,"line":57}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":107}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":108},"contentChanges":[{"range":{"start":{"line":57,"character":4},"end":{"line":57,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":6,"line":57},"start":{"character":5,"line":57}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":108}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":57,"character":4},"end":{"line":57,"character":4}},"context":{"diagnostics":[]}},"id":193,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":193,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":194,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":194,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":109},"contentChanges":[{"range":{"start":{"line":57,"character":4},"end":{"line":57,"character":4}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'r'","range":{"end":{"character":5,"line":57},"start":{"character":4,"line":57}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":109}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":110},"contentChanges":[{"range":{"start":{"line":57,"character":5},"end":{"line":57,"character":5}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 're'","range":{"end":{"character":6,"line":57},"start":{"character":4,"line":57}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":110}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":111},"contentChanges":[{"range":{"start":{"line":57,"character":6},"end":{"line":57,"character":6}},"text":"d"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":111}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":57,"character":7},"end":{"line":57,"character":7}},"context":{"diagnostics":[]}},"id":195,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":195,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":196,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":196,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":58,"character":7}},"id":197,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":197,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":112},"contentChanges":[{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":4}},"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 't'","range":{"end":{"character":5,"line":59},"start":{"character":4,"line":59}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":112}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":113},"contentChanges":[{"range":{"start":{"line":59,"character":5},"end":{"line":59,"character":5}},"text":"u"}]},"jsonrpc":"2.0"}Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":114},"contentChanges":[{"range":{"start":{"line":59,"character":6},"end":{"line":59,"character":6}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'tur'","range":{"end":{"character":7,"line":59},"start":{"character":4,"line":59}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":114}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":115},"contentChanges":[{"range":{"start":{"line":59,"character":7},"end":{"line":59,"character":7}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'turn'","range":{"end":{"character":8,"line":59},"start":{"character":4,"line":59}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":115}}
>>>
Content-Length: 512

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":59,"character":8},"end":{"line":59,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'turn'"}]}},"id":198,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":198,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":199,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":199,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":116},"contentChanges":[{"range":{"start":{"line":59,"character":8},"end":{"line":59,"character":8}},"text":"O"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 421

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'turnO'","range":{"end":{"character":9,"line":59},"start":{"character":4,"line":59}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":116}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":117},"contentChanges":[{"range":{"start":{"line":59,"character":9},"end":{"line":59,"character":9}},"text":"f"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 964

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'turnOf'; did you mean 'turnOff'? (fix available)\n\nDigitalTrumpet.ino.cpp:33:6: note: 'turnOff' declared here","range":{"end":{"character":10,"line":59},"start":{"character":4,"line":59}},"severity":1,"source":"clang"},{"message":"'turnOff' declared here\n\nDigitalTrumpet.ino.cpp:60:5: error: use of undeclared identifier 'turnOf'; did you mean 'turnOff'?","range":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}},"severity":3},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":117}}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":118},"contentChanges":[{"range":{"start":{"line":59,"character":10},"end":{"line":59,"character":10}},"text":"f"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 436

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":118}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":59,"character":11},"end":{"line":59,"character":11}},"context":{"diagnostics":[]}},"id":200,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":200,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":201,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":201,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 339

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":119},"contentChanges":[{"range":{"start":{"line":59,"character":11},"end":{"line":59,"character":11}},"text":"()"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 436

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":119}}
>>>
Content-Length: 265

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":59,"character":12}},"id":202,"jsonrpc":"2.0"}
<<<
Content-Length: 138

{"id":202,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[{"label":"turnOff() -> void","parameters":[]}]}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":59,"character":12},"end":{"line":59,"character":12}},"context":{"diagnostics":[]}},"id":203,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":203,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 264

{"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":60,"character":0}},"id":204,"jsonrpc":"2.0"}
<<<
Content-Length: 93

{"id":204,"jsonrpc":"2.0","result":{"activeParameter":0,"activeSignature":0,"signatures":[]}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":120},"contentChanges":[{"range":{"start":{"line":60,"character":0},"end":{"line":60,"character":0}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":120}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":60,"character":1},"end":{"line":60,"character":1}},"context":{"diagnostics":[]}},"id":205,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":205,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":16}},"id":206,"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"id":206,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":164},"start":{"character":4,"line":164}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}]}
>>>
Content-Length: 5753

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out \u0026= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out \u0026= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) \u0026 bit) return HIGH;\n\treturn LOW;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":41,"character":18}},"id":207,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":207,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":14}},"id":208,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":208,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":8}},"id":209,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":209,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":6}},"id":210,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":210,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":11}},"id":211,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":211,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":11}},"id":212,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":212,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `firstKeyPin`  \n\n---\nType: `int`  \nValue = `2`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint firstKeyPin = 2\n```"},"range":{"end":{"character":21,"line":36},"start":{"character":10,"line":36}}}}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":121},"contentChanges":[{"range":{"start":{"line":60,"character":0},"end":{"line":60,"character":1}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 436

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":3,"line":60},"start":{"character":2,"line":60}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":121}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":11}},"id":213,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":213,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `firstKeyPin`  \n\n---\nType: `int`  \nValue = `2`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint firstKeyPin = 2\n```"},"range":{"end":{"character":21,"line":36},"start":{"character":10,"line":36}}}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":11}},"id":214,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":214,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `firstKeyPin`  \n\n---\nType: `int`  \nValue = `2`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint firstKeyPin = 2\n```"},"range":{"end":{"character":21,"line":36},"start":{"character":10,"line":36}}}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":11}},"id":215,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":215,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `firstKeyPin`  \n\n---\nType: `int`  \nValue = `2`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint firstKeyPin = 2\n```"},"range":{"end":{"character":21,"line":36},"start":{"character":10,"line":36}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":59,"character":4}},"id":216,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":216,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":1,"range":{"end":{"character":11,"line":59},"start":{"character":4,"line":59}}},{"kind":1,"range":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":11}},"id":217,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":217,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `firstKeyPin`  \n\n---\nType: `int`  \nValue = `2`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint firstKeyPin = 2\n```"},"range":{"end":{"character":21,"line":36},"start":{"character":10,"line":36}}}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":59,"character":13},"end":{"line":59,"character":13}},"context":{"diagnostics":[]}},"id":218,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":218,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 338

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":122},"contentChanges":[{"range":{"start":{"line":59,"character":13},"end":{"line":59,"character":13}},"text":";"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":122}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":59,"character":14},"end":{"line":59,"character":14}},"context":{"diagnostics":[]}},"id":219,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":219,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":11}},"id":220,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":220,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":9,"character":6}},"id":221,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":221,"jsonrpc":"2.0","result":[{"range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":4,"character":1}},"id":222,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":222,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 258

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":102,"character":13}},"id":223,"jsonrpc":"2.0"}
<<<
Content-Length: 497

{"id":223,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\nRight now, PWM output only works on the pins with hardware support. These are defined in the appropriate pins\\_\\*.c file. For the rest of the pins, we default to digital output.  \n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"end":{"character":13,"line":102},"start":{"character":2,"line":102}}}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":118,"character":7}},"id":224,"jsonrpc":"2.0"}
<<<
Content-Length: 239

{"id":224,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `turnOff`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid turnOff()\n```"},"range":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":99,"character":4}},"id":225,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":225,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":4,"character":2}},"id":226,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":226,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":76,"character":11}},"id":227,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":227,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":83,"character":8}},"id":228,"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"id":228,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `yellow`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid yellow()\n```"},"range":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":84,"character":15}},"id":229,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":229,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":84,"character":17}},"id":230,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":230,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":64,"character":5}},"id":231,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":231,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":69,"character":3}},"id":232,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":232,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":103},"start":{"character":5,"line":103}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}]}
>>>
Content-Length: 9311

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin \u003e= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin \u003e= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin \u003e= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin \u003e= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin \u003e= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) \u0026\u0026 defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB \u0026 ~(1 \u003c\u003c MUX5)) | (((pin \u003e\u003e 3) \u0026 0x01) \u003c\u003c MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference \u003c\u003c 4) | (pin \u0026 0x07);\n#else\n\tADMUX = (analog_reference \u003c\u003c 6) | (pin \u0026 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) \u0026\u0026 defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high \u003c\u003c 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) \u0026\u0026 defined(COM00) \u0026\u0026 !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) \u0026\u0026 defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) \u0026\u0026 defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) \u0026\u0026 defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val \u003c 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 190

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":64,"character":7}},"id":233,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":233,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":64,"character":7}},"id":234,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":234,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":53,"character":12}},"id":235,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":235,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":55,"character":6}},"id":236,"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"id":236,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":1,"range":{"end":{"character":10,"line":55},"start":{"character":4,"line":55}}},{"kind":1,"range":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":10}},"context":{"diagnostics":[]}},"id":237,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":237,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":123},"contentChanges":[{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":10}},"rangeLength":6,"text":"o"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'o'","range":{"end":{"character":5,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":123}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":124},"contentChanges":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":5}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 574

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":6,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":8,"line":55},"start":{"character":7,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":124}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":125},"contentChanges":[{"range":{"start":{"line":55,"character":6},"end":{"line":55,"character":6}},"text":"a"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ora'","range":{"end":{"character":7,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":125}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":126},"contentChanges":[{"range":{"start":{"line":55,"character":7},"end":{"line":55,"character":7}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'oran'","range":{"end":{"character":8,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":126}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":127},"contentChanges":[{"range":{"start":{"line":55,"character":8},"end":{"line":55,"character":8}},"text":"g"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 757

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'orang'; did you mean 'orange'? (fix available)\n\nDigitalTrumpet.ino.cpp:21:6: note: 'orange' declared here","range":{"end":{"character":9,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"},{"message":"'orange' declared here\n\nDigitalTrumpet.ino.cpp:56:5: error: use of undeclared identifier 'orang'; did you mean 'orange'?","range":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":127}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":128},"contentChanges":[{"range":{"start":{"line":55,"character":9},"end":{"line":55,"character":9}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":128}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":55,"character":10},"end":{"line":55,"character":10}},"context":{"diagnostics":[]}},"id":238,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":238,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}},"id":239,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":239,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":6,"character":9}},"id":240,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":240,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":26}},"id":241,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":241,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":29}},"id":242,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":242,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":44},"start":{"character":8,"line":44}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":29}},"id":243,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":243,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":29}},"id":244,"jsonrpc":"2.0"}
<<<
Content-Length: 229

{"id":244,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `INPUT_PULLUP`  \n\n---\n```cpp\n#define INPUT_PULLUP 0x2\n```"},"range":{"end":{"character":35,"line":36},"start":{"character":23,"line":36}}}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":29},"end":{"line":36,"character":29}},"context":{"diagnostics":[]}},"id":245,"jsonrpc":"2.0"}
<<<
Content-Length: 433

{"id":245,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":29,"line":36},"start":{"character":29,"line":36}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'INPUT_PULLUP'"},"kind":"refactor","title":"Expand macro 'INPUT_PULLUP'"}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":10,"character":4}},"id":246,"jsonrpc":"2.0"}
<<<
Content-Length: 251

{"id":246,"jsonrpc":"2.0","result":[{"range":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":31}},"id":247,"jsonrpc":"2.0"}
<<<
Content-Length: 229

{"id":247,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `INPUT_PULLUP`  \n\n---\n```cpp\n#define INPUT_PULLUP 0x2\n```"},"range":{"end":{"character":35,"line":36},"start":{"character":23,"line":36}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":34,"character":0}},"id":248,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":248,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":34,"character":13},"end":{"line":34,"character":13}},"context":{"diagnostics":[]}},"id":249,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":249,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":34,"character":14},"end":{"line":34,"character":14}},"context":{"diagnostics":[]}},"id":250,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":250,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":37},"end":{"line":36,"character":37}},"context":{"diagnostics":[]}},"id":251,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":251,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":30}},"id":252,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":252,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":44},"start":{"character":8,"line":44}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":44,"character":14}},"id":253,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":253,"jsonrpc":"2.0","result":[{"range":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":5},"end":{"line":50,"character":5}},"context":{"diagnostics":[]}},"id":254,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":254,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":85,"character":18}},"id":255,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":255,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":85,"character":19}},"id":256,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":256,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":85,"character":14},"end":{"line":85,"character":22}},"context":{"diagnostics":[]}},"id":257,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":257,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":21}},"id":258,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":258,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":23}},"id":259,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":259,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":23}},"id":260,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":260,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 362

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp","version":129},"contentChanges":[{"range":{"start":{"line":75,"character":22},"end":{"line":75,"character":25}},"rangeLength":3,"text":"255,165,0"}]},"jsonrpc":"2.0"}Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server727623955/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":29}},"id":261,"jsonrpc":"2.0"}
<<<
Content-Length: 103

{"error":{"code":-32602,"message":"trying to get AST for non-added document"},"id":261,"jsonrpc":"2.0"}<<< Read Error: read |0: file already closed
--- Stream closed, err=%!s(<nil>)







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":94088,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 3531

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint GreenPin = 10;\nint BluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(RedPin, OUTPUT);\n  pinMode(BluePin, OUTPUT);\n  pinMode(GreenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    blue();      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    orange();\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    red();\n  } else {\n    turnOff();\n  }\n}\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 255,165,0);\n  analogWrite(GreenPin, 50);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}},"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":5},"end":{"line":50,"character":5}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 623

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"ovl_no_viable_function_in_call","message":"No matching function for call to 'analogWrite'\n\n/Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h:139:6:\nnote: candidate function not viable: requires 2 arguments, but 4 were provided","range":{"end":{"character":13,"line":75},"start":{"character":2,"line":75}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 5170

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":70},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":11,"line":72},"start":{"character":5,"line":72}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":87},"start":{"character":0,"line":81}},"selectionRange":{"end":{"character":11,"line":81},"start":{"character":5,"line":81}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":95}},"selectionRange":{"end":{"character":9,"line":95},"start":{"character":5,"line":95}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":102}},"selectionRange":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":115},"start":{"character":0,"line":109}},"selectionRange":{"end":{"character":12,"line":109},"start":{"character":5,"line":109}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":116}},"selectionRange":{"end":{"character":12,"line":116},"start":{"character":5,"line":116}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 5170

{"id":3,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":70},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":11,"line":72},"start":{"character":5,"line":72}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":87},"start":{"character":0,"line":81}},"selectionRange":{"end":{"character":11,"line":81},"start":{"character":5,"line":81}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":95}},"selectionRange":{"end":{"character":9,"line":95},"start":{"character":5,"line":95}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":102}},"selectionRange":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":115},"start":{"character":0,"line":109}},"selectionRange":{"end":{"character":12,"line":109},"start":{"character":5,"line":109}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":116}},"selectionRange":{"end":{"character":12,"line":116},"start":{"character":5,"line":116}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":31},"end":{"line":75,"character":31}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":74,"character":30}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":74,"character":31}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":4},"jsonrpc":"2.0"}Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":28}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":24}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":22},"end":{"line":75,"character":25}},"context":{"diagnostics":[]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"id":9,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":25,"line":75},"start":{"character":22,"line":75}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":24}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":10,"jsonrpc":"2.0","result":null}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":27}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 3535

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":2},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint GreenPin = 10;\nint BluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(RedPin, OUTPUT);\n  pinMode(BluePin, OUTPUT);\n  pinMode(GreenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    blue();      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    orange();\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    red();\n  } else {\n    turnOff();\n  }\n}\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 255,165,0);\n  analogWrite(GreenPin, 50);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}]},"jsonrpc":"2.0"}Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":27}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":29}},"context":{"diagnostics":[]}},"id":13,"jsonrpc":"2.0"}Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 448

{"id":13,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":29,"line":75},"start":{"character":26,"line":75}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}Content-Length: 5171

{"id":14,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":70},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":11,"line":72},"start":{"character":5,"line":72}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":87},"start":{"character":0,"line":81}},"selectionRange":{"end":{"character":11,"line":81},"start":{"character":5,"line":81}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":95}},"selectionRange":{"end":{"character":9,"line":95},"start":{"character":5,"line":95}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":102}},"selectionRange":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":115},"start":{"character":0,"line":109}},"selectionRange":{"end":{"character":12,"line":109},"start":{"character":5,"line":109}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":116}},"selectionRange":{"end":{"character":12,"line":116},"start":{"character":5,"line":116}}}]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":3},"contentChanges":[{"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":29}},"rangeLength":3,"text":""}]},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":11},"jsonrpc":"2.0"}Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":26}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":15,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 63

{"method":"$/cancelRequest","params":{"id":12},"jsonrpc":"2.0"}Content-Length: 63

{"method":"$/cancelRequest","params":{"id":10},"jsonrpc":"2.0"}Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":76,"character":26}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":27,"line":75},"start":{"character":26,"line":75}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":3}}Content-Length: 229

{"id":16,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":103},"start":{"character":5,"line":103}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":26}},"context":{"diagnostics":[]}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":17,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":76,"character":26}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 2080

{"id":18,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":67},"start":{"character":2,"line":67}}},{"kind":1,"range":{"end":{"character":13,"line":68},"start":{"character":2,"line":68}}},{"kind":1,"range":{"end":{"character":13,"line":69},"start":{"character":2,"line":69}}},{"kind":1,"range":{"end":{"character":13,"line":76},"start":{"character":2,"line":76}}},{"kind":1,"range":{"end":{"character":13,"line":77},"start":{"character":2,"line":77}}},{"kind":1,"range":{"end":{"character":13,"line":84},"start":{"character":2,"line":84}}},{"kind":1,"range":{"end":{"character":13,"line":85},"start":{"character":2,"line":85}}},{"kind":1,"range":{"end":{"character":13,"line":86},"start":{"character":2,"line":86}}},{"kind":1,"range":{"end":{"character":13,"line":91},"start":{"character":2,"line":91}}},{"kind":1,"range":{"end":{"character":13,"line":92},"start":{"character":2,"line":92}}},{"kind":1,"range":{"end":{"character":13,"line":93},"start":{"character":2,"line":93}}},{"kind":1,"range":{"end":{"character":13,"line":98},"start":{"character":2,"line":98}}},{"kind":1,"range":{"end":{"character":13,"line":99},"start":{"character":2,"line":99}}},{"kind":1,"range":{"end":{"character":13,"line":100},"start":{"character":2,"line":100}}},{"kind":1,"range":{"end":{"character":13,"line":105},"start":{"character":2,"line":105}}},{"kind":1,"range":{"end":{"character":13,"line":106},"start":{"character":2,"line":106}}},{"kind":1,"range":{"end":{"character":13,"line":107},"start":{"character":2,"line":107}}},{"kind":1,"range":{"end":{"character":13,"line":112},"start":{"character":2,"line":112}}},{"kind":1,"range":{"end":{"character":13,"line":113},"start":{"character":2,"line":113}}},{"kind":1,"range":{"end":{"character":13,"line":114},"start":{"character":2,"line":114}}},{"kind":1,"range":{"end":{"character":13,"line":119},"start":{"character":2,"line":119}}},{"kind":1,"range":{"end":{"character":13,"line":120},"start":{"character":2,"line":120}}},{"kind":1,"range":{"end":{"character":13,"line":121},"start":{"character":2,"line":121}}}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":76,"character":26}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 229

{"id":19,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":103},"start":{"character":5,"line":103}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}]}
>>>
Content-Length: 354

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":76,"character":24},"end":{"line":76,"character":26}},"rangeLength":2,"text":"165"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":27,"line":75},"start":{"character":26,"line":75}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":4}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":27}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":20,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":76,"character":27},"end":{"line":76,"character":27}},"context":{"diagnostics":[]}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":21,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":27}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":22,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":28}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":23,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 3533

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":5},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint GreenPin = 10;\nint BluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(RedPin, OUTPUT);\n  pinMode(BluePin, OUTPUT);\n  pinMode(GreenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    blue();      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    orange();\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    red();\n  } else {\n    turnOff();\n  }\n}\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 255,,0);\n  analogWrite(GreenPin, 165);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}]},"jsonrpc":"2.0"}Content-Length: 500

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":27},"end":{"line":75,"character":28}},"context":{"diagnostics":[{"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":24,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"}},"id":25,"jsonrpc":"2.0"}Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":28}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 5171

{"id":25,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":70},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":11,"line":72},"start":{"character":5,"line":72}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":87},"start":{"character":0,"line":81}},"selectionRange":{"end":{"character":11,"line":81},"start":{"character":5,"line":81}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":95}},"selectionRange":{"end":{"character":9,"line":95},"start":{"character":5,"line":95}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":102}},"selectionRange":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":115},"start":{"character":0,"line":109}},"selectionRange":{"end":{"character":12,"line":109},"start":{"character":5,"line":109}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":116}},"selectionRange":{"end":{"character":12,"line":116},"start":{"character":5,"line":116}}}]}Content-Length: 39

{"id":26,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":28}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":27,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":75,"character":27},"end":{"line":75,"character":28}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":76,"character":26}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":28,"jsonrpc":"2.0","result":[]}Content-Length: 576

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":27,"line":75},"start":{"character":26,"line":75}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":28,"line":75},"start":{"character":27,"line":75}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":6}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":77,"character":24}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 310

{"id":29,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"end":{"character":25,"line":77},"start":{"character":24,"line":77}}}}
>>>
Content-Length: 671

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":27},"end":{"line":75,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":75,"character":27},"end":{"line":75,"character":28}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":30,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":77,"character":24}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 2080

{"id":31,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":13,"line":67},"start":{"character":2,"line":67}}},{"kind":1,"range":{"end":{"character":13,"line":68},"start":{"character":2,"line":68}}},{"kind":1,"range":{"end":{"character":13,"line":69},"start":{"character":2,"line":69}}},{"kind":1,"range":{"end":{"character":13,"line":76},"start":{"character":2,"line":76}}},{"kind":1,"range":{"end":{"character":13,"line":77},"start":{"character":2,"line":77}}},{"kind":1,"range":{"end":{"character":13,"line":84},"start":{"character":2,"line":84}}},{"kind":1,"range":{"end":{"character":13,"line":85},"start":{"character":2,"line":85}}},{"kind":1,"range":{"end":{"character":13,"line":86},"start":{"character":2,"line":86}}},{"kind":1,"range":{"end":{"character":13,"line":91},"start":{"character":2,"line":91}}},{"kind":1,"range":{"end":{"character":13,"line":92},"start":{"character":2,"line":92}}},{"kind":1,"range":{"end":{"character":13,"line":93},"start":{"character":2,"line":93}}},{"kind":1,"range":{"end":{"character":13,"line":98},"start":{"character":2,"line":98}}},{"kind":1,"range":{"end":{"character":13,"line":99},"start":{"character":2,"line":99}}},{"kind":1,"range":{"end":{"character":13,"line":100},"start":{"character":2,"line":100}}},{"kind":1,"range":{"end":{"character":13,"line":105},"start":{"character":2,"line":105}}},{"kind":1,"range":{"end":{"character":13,"line":106},"start":{"character":2,"line":106}}},{"kind":1,"range":{"end":{"character":13,"line":107},"start":{"character":2,"line":107}}},{"kind":1,"range":{"end":{"character":13,"line":112},"start":{"character":2,"line":112}}},{"kind":1,"range":{"end":{"character":13,"line":113},"start":{"character":2,"line":113}}},{"kind":1,"range":{"end":{"character":13,"line":114},"start":{"character":2,"line":114}}},{"kind":1,"range":{"end":{"character":13,"line":119},"start":{"character":2,"line":119}}},{"kind":1,"range":{"end":{"character":13,"line":120},"start":{"character":2,"line":120}}},{"kind":1,"range":{"end":{"character":13,"line":121},"start":{"character":2,"line":121}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":77,"character":24},"end":{"line":77,"character":24}},"context":{"diagnostics":[]}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":32,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":76,"character":25}},"id":33,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":33,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":77,"character":23},"end":{"line":77,"character":24}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 747

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":27,"line":75},"start":{"character":26,"line":75}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":28,"line":75},"start":{"character":27,"line":75}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":24,"line":77},"start":{"character":23,"line":77}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":7}}
>>>
Content-Length: 336

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":77,"character":23},"end":{"line":77,"character":23}},"text":"0"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 576

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":27,"line":75},"start":{"character":26,"line":75}},"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":28,"line":75},"start":{"character":27,"line":75}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":8}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":77,"character":24},"end":{"line":77,"character":24}},"context":{"diagnostics":[]}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":34,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":76,"character":24}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":35,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":24}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":36,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":24},"end":{"line":75,"character":24}},"context":{"diagnostics":[]}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":37,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 671

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":27},"end":{"line":75,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":75,"character":27},"end":{"line":75,"character":28}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":38,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":27}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 405

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":27,"line":75},"start":{"character":26,"line":75}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":9}}
>>>
Content-Length: 500

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":39,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":76,"character":25}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":40,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":76,"character":23}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 310

{"id":41,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `analogWrite`  \n\n---\nâ†’ `void`  \nParameters:  \n- `uint8_t pin`\n- `int val`\n\n---\n```cpp\nvoid analogWrite(uint8_t pin, int val)\n```"},"range":{"end":{"character":23,"line":76},"start":{"character":22,"line":76}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":27}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":42,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":26}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":43,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 500

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":27}},"context":{"diagnostics":[{"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":44,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 500

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":75,"character":26},"end":{"line":75,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":45,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":74,"character":30}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":46,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":75,"character":25},"end":{"line":75,"character":26}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":10}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":25},"end":{"line":75,"character":25}},"context":{"diagnostics":[]}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":47,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":74,"character":30}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":90,"character":43}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":49,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":90,"character":43},"end":{"line":90,"character":43}},"context":{"diagnostics":[]}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":50,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":76,"character":26}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":51,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":24}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":52,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":24}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":53,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":24}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":54,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":22},"end":{"line":75,"character":25}},"context":{"diagnostics":[]}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 448

{"id":55,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":25,"line":75},"start":{"character":22,"line":75}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":75,"character":24}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":56,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":75,"character":22},"end":{"line":75,"character":25}},"rangeLength":3,"text":"1"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":11}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":75,"character":23},"end":{"line":75,"character":23}},"text":"0"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":12}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":75,"character":24},"end":{"line":75,"character":24}},"text":"0"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":13}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":75,"character":25},"end":{"line":75,"character":25}},"context":{"diagnostics":[]}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":57,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":76,"character":25}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":58,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":76,"character":25},"end":{"line":76,"character":25}},"context":{"diagnostics":[]}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":59,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":76,"character":27},"end":{"line":76,"character":27}},"context":{"diagnostics":[]}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":60,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":76,"character":26},"end":{"line":76,"character":27}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":14}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":76,"character":25},"end":{"line":76,"character":26}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":15}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":76,"character":25},"end":{"line":76,"character":25}},"context":{"diagnostics":[]}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":61,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":76,"character":25},"end":{"line":76,"character":25}},"text":"9"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":16}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":76,"character":26},"end":{"line":76,"character":26}},"context":{"diagnostics":[]}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":62,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":76,"character":26},"end":{"line":76,"character":27}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 621

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected ')'\n\nDigitalTrumpet.ino.cpp:77:14: note: to match this '('","range":{"end":{"character":27,"line":76},"start":{"character":26,"line":76}},"severity":1,"source":"clang"},{"message":"To match this '('\n\nDigitalTrumpet.ino.cpp:77:27: error: expected ')'","range":{"end":{"character":14,"line":76},"start":{"character":13,"line":76}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":17}}
>>>
Content-Length: 539

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":76,"character":26},"end":{"line":76,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":76,"character":26},"end":{"line":76,"character":27}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nDigitalTrumpet.ino.cpp:77:14: note: to match this '('"}]}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":63,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":76,"character":25},"end":{"line":76,"character":26}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 621

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected ')'\n\nDigitalTrumpet.ino.cpp:77:14: note: to match this '('","range":{"end":{"character":26,"line":76},"start":{"character":25,"line":76}},"severity":1,"source":"clang"},{"message":"To match this '('\n\nDigitalTrumpet.ino.cpp:77:26: error: expected ')'","range":{"end":{"character":14,"line":76},"start":{"character":13,"line":76}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":18}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":76,"character":24},"end":{"line":76,"character":25}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 792

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":25,"line":76},"start":{"character":24,"line":76}},"severity":1,"source":"clang"},{"code":"expected","message":"Expected '}'\n\nDigitalTrumpet.ino.cpp:73:15: note: to match this '{'","range":{"end":{"character":0,"line":123},"start":{"character":0,"line":123}},"severity":1,"source":"clang"},{"message":"To match this '{'\n\nDigitalTrumpet.ino.cpp:124:1: error: expected '}'","range":{"end":{"character":15,"line":72},"start":{"character":14,"line":72}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":19}}
>>>
Content-Length: 500

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":76,"character":24},"end":{"line":76,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":76,"character":24},"end":{"line":76,"character":25}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":64,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":76,"character":24},"end":{"line":76,"character":24}},"text":"9"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 621

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected ')'\n\nDigitalTrumpet.ino.cpp:77:14: note: to match this '('","range":{"end":{"character":26,"line":76},"start":{"character":25,"line":76}},"severity":1,"source":"clang"},{"message":"To match this '('\n\nDigitalTrumpet.ino.cpp:77:26: error: expected ')'","range":{"end":{"character":14,"line":76},"start":{"character":13,"line":76}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":20}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":76,"character":25},"end":{"line":76,"character":25}},"text":"0"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 621

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected ')'\n\nDigitalTrumpet.ino.cpp:77:14: note: to match this '('","range":{"end":{"character":27,"line":76},"start":{"character":26,"line":76}},"severity":1,"source":"clang"},{"message":"To match this '('\n\nDigitalTrumpet.ino.cpp:77:27: error: expected ')'","range":{"end":{"character":14,"line":76},"start":{"character":13,"line":76}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":21}}
>>>
Content-Length: 539

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":76,"character":26},"end":{"line":76,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":76,"character":26},"end":{"line":76,"character":27}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nDigitalTrumpet.ino.cpp:77:14: note: to match this '('"}]}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":65,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":76,"character":26},"end":{"line":76,"character":26}},"text":")"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp","version":22}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":76,"character":27},"end":{"line":76,"character":27}},"context":{"diagnostics":[]}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":66,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":77,"character":23}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":67,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":69,"character":3}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 229

{"id":68,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":103},"start":{"character":5,"line":103}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}]}
>>>
Content-Length: 9311

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c","languageId":"c","version":1,"text":"/*\n  wiring_analog.c - analog input and output\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nuint8_t analog_reference = DEFAULT;\n\nvoid analogReference(uint8_t mode)\n{\n\t// can't actually set the register here because the default setting\n\t// will connect AVCC and the AREF pin, which would cause a short if\n\t// there's something connected to AREF.\n\tanalog_reference = mode;\n}\n\nint analogRead(uint8_t pin)\n{\n\tuint8_t low, high;\n\n#if defined(analogPinToChannel)\n#if defined(__AVR_ATmega32U4__)\n\tif (pin \u003e= 18) pin -= 18; // allow for channel or pin numbers\n#endif\n\tpin = analogPinToChannel(pin);\n#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n\tif (pin \u003e= 54) pin -= 54; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega32U4__)\n\tif (pin \u003e= 18) pin -= 18; // allow for channel or pin numbers\n#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n\tif (pin \u003e= 24) pin -= 24; // allow for channel or pin numbers\n#else\n\tif (pin \u003e= 14) pin -= 14; // allow for channel or pin numbers\n#endif\n\n#if defined(ADCSRB) \u0026\u0026 defined(MUX5)\n\t// the MUX5 bit of ADCSRB selects whether we're reading from channels\n\t// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).\n\tADCSRB = (ADCSRB \u0026 ~(1 \u003c\u003c MUX5)) | (((pin \u003e\u003e 3) \u0026 0x01) \u003c\u003c MUX5);\n#endif\n  \n\t// set the analog reference (high two bits of ADMUX) and select the\n\t// channel (low 4 bits).  this also sets ADLAR (left-adjust result)\n\t// to 0 (the default).\n#if defined(ADMUX)\n#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n\tADMUX = (analog_reference \u003c\u003c 4) | (pin \u0026 0x07);\n#else\n\tADMUX = (analog_reference \u003c\u003c 6) | (pin \u0026 0x07);\n#endif\n#endif\n\n\t// without a delay, we seem to read from the wrong channel\n\t//delay(1);\n\n#if defined(ADCSRA) \u0026\u0026 defined(ADCL)\n\t// start the conversion\n\tsbi(ADCSRA, ADSC);\n\n\t// ADSC is cleared when the conversion finishes\n\twhile (bit_is_set(ADCSRA, ADSC));\n\n\t// we have to read ADCL first; doing so locks both ADCL\n\t// and ADCH until ADCH is read.  reading ADCL second would\n\t// cause the results of each conversion to be discarded,\n\t// as ADCL and ADCH would be locked when it completed.\n\tlow  = ADCL;\n\thigh = ADCH;\n#else\n\t// we dont have an ADC, return 0\n\tlow  = 0;\n\thigh = 0;\n#endif\n\n\t// combine the two bytes\n\treturn (high \u003c\u003c 8) | low;\n}\n\n// Right now, PWM output only works on the pins with\n// hardware support.  These are defined in the appropriate\n// pins_*.c file.  For the rest of the pins, we default\n// to digital output.\nvoid analogWrite(uint8_t pin, int val)\n{\n\t// We need to make sure the PWM output is enabled for those pins\n\t// that support it, as we turn it off when digitally reading or\n\t// writing with them.  Also, make sure the pin is in output mode\n\t// for consistenty with Wiring, which doesn't require a pinMode\n\t// call for the analog output pins.\n\tpinMode(pin, OUTPUT);\n\tif (val == 0)\n\t{\n\t\tdigitalWrite(pin, LOW);\n\t}\n\telse if (val == 255)\n\t{\n\t\tdigitalWrite(pin, HIGH);\n\t}\n\telse\n\t{\n\t\tswitch(digitalPinToTimer(pin))\n\t\t{\n\t\t\t// XXX fix needed for atmega8\n\t\t\t#if defined(TCCR0) \u0026\u0026 defined(COM00) \u0026\u0026 !defined(__AVR_ATmega8__)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0\n\t\t\t\tsbi(TCCR0, COM00);\n\t\t\t\tOCR0 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\t\tcase TIMER0A:\n\t\t\t\t// connect pwm to pin on timer 0, channel A\n\t\t\t\tsbi(TCCR0A, COM0A1);\n\t\t\t\tOCR0A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\t\tcase TIMER0B:\n\t\t\t\t// connect pwm to pin on timer 0, channel B\n\t\t\t\tsbi(TCCR0A, COM0B1);\n\t\t\t\tOCR0B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\t\tcase TIMER1A:\n\t\t\t\t// connect pwm to pin on timer 1, channel A\n\t\t\t\tsbi(TCCR1A, COM1A1);\n\t\t\t\tOCR1A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\t\tcase TIMER1B:\n\t\t\t\t// connect pwm to pin on timer 1, channel B\n\t\t\t\tsbi(TCCR1A, COM1B1);\n\t\t\t\tOCR1B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\t\tcase TIMER1C:\n\t\t\t\t// connect pwm to pin on timer 1, channel C\n\t\t\t\tsbi(TCCR1A, COM1C1);\n\t\t\t\tOCR1C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\t\tcase TIMER2:\n\t\t\t\t// connect pwm to pin on timer 2\n\t\t\t\tsbi(TCCR2, COM21);\n\t\t\t\tOCR2 = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\t\tcase TIMER2A:\n\t\t\t\t// connect pwm to pin on timer 2, channel A\n\t\t\t\tsbi(TCCR2A, COM2A1);\n\t\t\t\tOCR2A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\t\tcase TIMER2B:\n\t\t\t\t// connect pwm to pin on timer 2, channel B\n\t\t\t\tsbi(TCCR2A, COM2B1);\n\t\t\t\tOCR2B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\t\tcase TIMER3A:\n\t\t\t\t// connect pwm to pin on timer 3, channel A\n\t\t\t\tsbi(TCCR3A, COM3A1);\n\t\t\t\tOCR3A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\t\tcase TIMER3B:\n\t\t\t\t// connect pwm to pin on timer 3, channel B\n\t\t\t\tsbi(TCCR3A, COM3B1);\n\t\t\t\tOCR3B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\t\tcase TIMER3C:\n\t\t\t\t// connect pwm to pin on timer 3, channel C\n\t\t\t\tsbi(TCCR3A, COM3C1);\n\t\t\t\tOCR3C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A)\n\t\t\tcase TIMER4A:\n\t\t\t\t//connect pwm to pin on timer 4, channel A\n\t\t\t\tsbi(TCCR4A, COM4A1);\n\t\t\t\t#if defined(COM4A0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4A, COM4A0);\n\t\t\t\t#endif\n\t\t\t\tOCR4A = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\n\t\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\t\tcase TIMER4B:\n\t\t\t\t// connect pwm to pin on timer 4, channel B\n\t\t\t\tsbi(TCCR4A, COM4B1);\n\t\t\t\tOCR4B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\t\tcase TIMER4C:\n\t\t\t\t// connect pwm to pin on timer 4, channel C\n\t\t\t\tsbi(TCCR4A, COM4C1);\n\t\t\t\tOCR4C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\t\t\t\t\n\t\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\t\tcase TIMER4D:\t\t\t\t\n\t\t\t\t// connect pwm to pin on timer 4, channel D\n\t\t\t\tsbi(TCCR4C, COM4D1);\n\t\t\t\t#if defined(COM4D0)\t\t// only used on 32U4\n\t\t\t\tcbi(TCCR4C, COM4D0);\n\t\t\t\t#endif\n\t\t\t\tOCR4D = val;\t// set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t\t\t\t\t\n\t\t\t#if defined(TCCR5A) \u0026\u0026 defined(COM5A1)\n\t\t\tcase TIMER5A:\n\t\t\t\t// connect pwm to pin on timer 5, channel A\n\t\t\t\tsbi(TCCR5A, COM5A1);\n\t\t\t\tOCR5A = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) \u0026\u0026 defined(COM5B1)\n\t\t\tcase TIMER5B:\n\t\t\t\t// connect pwm to pin on timer 5, channel B\n\t\t\t\tsbi(TCCR5A, COM5B1);\n\t\t\t\tOCR5B = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\t#if defined(TCCR5A) \u0026\u0026 defined(COM5C1)\n\t\t\tcase TIMER5C:\n\t\t\t\t// connect pwm to pin on timer 5, channel C\n\t\t\t\tsbi(TCCR5A, COM5C1);\n\t\t\t\tOCR5C = val; // set pwm duty\n\t\t\t\tbreak;\n\t\t\t#endif\n\n\t\t\tcase NOT_ON_TIMER:\n\t\t\tdefault:\n\t\t\t\tif (val \u003c 128) {\n\t\t\t\t\tdigitalWrite(pin, LOW);\n\t\t\t\t} else {\n\t\t\t\t\tdigitalWrite(pin, HIGH);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n"}},"jsonrpc":"2.0"}Content-Length: 190

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_analog.c"}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server597899660/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":1}},"context":{"diagnostics":[]}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":69,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 59

{"method":"shutdown","params":null,"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":70,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":12750,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 3525

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint GreenPin = 10;\nint BluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(RedPin, OUTPUT);\n  pinMode(BluePin, OUTPUT);\n  pinMode(GreenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    blue();      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    orange();\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    red();\n  } else {\n    turnOff();\n  }\n}\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 90);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}},"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":1}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 5170

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":70},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":11,"line":72},"start":{"character":5,"line":72}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":87},"start":{"character":0,"line":81}},"selectionRange":{"end":{"character":11,"line":81},"start":{"character":5,"line":81}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":95}},"selectionRange":{"end":{"character":9,"line":95},"start":{"character":5,"line":95}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":102}},"selectionRange":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":115},"start":{"character":0,"line":109}},"selectionRange":{"end":{"character":12,"line":109},"start":{"character":5,"line":109}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":116}},"selectionRange":{"end":{"character":12,"line":116},"start":{"character":5,"line":116}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":5},"end":{"line":50,"character":5}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":9,"character":18},"end":{"line":9,"character":18}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":38,"character":14}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 247

{"id":5,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 259

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":44,"character":9}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 227

{"id":6,"jsonrpc":"2.0","result":[{"range":{"end":{"character":12,"line":28},"start":{"character":5,"line":28}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}]}
>>>
Content-Length: 5753

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out \u0026= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out \u0026= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) \u0026 bit) return HIGH;\n\treturn LOW;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}
>>>
Content-Length: 259

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":48,"character":5}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":7,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":154},"start":{"character":5,"line":154}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 259

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":4}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 254

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":0}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":9,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":4}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":10,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":4}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":11,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":4}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"context":{"diagnostics":[]}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":13,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":4},"end":{"line":54,"character":3}},"context":{"diagnostics":[]}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":14,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":3}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":15,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":3},"end":{"line":54,"character":3}},"context":{"diagnostics":[]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":8}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":17,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":5}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":18,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":3}},"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":19,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":3}},"id":20,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":20,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":53,"character":4}},"id":21,"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"id":21,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `green`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid green()\n```"},"range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}}}}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":4}},"id":22,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":22,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":4}},"id":23,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":23,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":5}},"id":24,"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"id":24,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":1,"range":{"end":{"character":8,"line":51},"start":{"character":4,"line":51}}},{"kind":1,"range":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}}]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":8}},"context":{"diagnostics":[]}},"id":25,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":25,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":40},"end":{"line":50,"character":40}},"context":{"diagnostics":[]}},"id":26,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":26,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":3}},"id":27,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":27,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":4}},"id":28,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":28,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"context":{"diagnostics":[]}},"id":29,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":29,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":14}},"id":30,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":30,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 396

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":2},"contentChanges":[{"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"text":"else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  }"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":2}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":3},"end":{"line":54,"character":3}},"context":{"diagnostics":[]}},"id":31,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":31,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 3592

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":3},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint GreenPin = 10;\nint BluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(RedPin, OUTPUT);\n  pinMode(BluePin, OUTPUT);\n  pinMode(GreenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    blue();      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  }else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    orange();\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    red();\n  } else {\n    turnOff();\n  }\n}\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 90);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}]},"jsonrpc":"2.0"}Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":26}},"id":32,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":32,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 227

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}},"id":33,"jsonrpc":"2.0"}Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":25}},"id":34,"jsonrpc":"2.0"}
<<<
Content-Length: 5171

{"id":33,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":63},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}Content-Length: 302

{"id":34,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `firstKeyPin`  \n\n---\nType: `int`  \nValue = `2`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint firstKeyPin = 2\n```"},"range":{"end":{"character":29,"line":50},"start":{"character":18,"line":50}}}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":4},"contentChanges":[{"range":{"start":{"line":52,"character":4},"end":{"line":54,"character":3}},"rangeLength":61,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":4}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":28}},"id":35,"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"id":35,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"context":{"diagnostics":[]}},"id":36,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":36,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":25}},"id":37,"jsonrpc":"2.0"}
<<<
Content-Length: 302

{"id":37,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `firstKeyPin`  \n\n---\nType: `int`  \nValue = `2`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint firstKeyPin = 2\n```"},"range":{"end":{"character":29,"line":50},"start":{"character":18,"line":50}}}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":5},"contentChanges":[{"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"text":"\n  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":5}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":2}},"context":{"diagnostics":[]}},"id":38,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":38,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":2}},"context":{"diagnostics":[]}},"id":39,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":39,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":6},"contentChanges":[{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":2}},"text":"  "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":6}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"context":{"diagnostics":[]}},"id":40,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":40,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 349

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":7},"contentChanges":[{"range":{"start":{"line":52,"character":2},"end":{"line":52,"character":4}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":1,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":7}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":3},"end":{"line":52,"character":3}},"context":{"diagnostics":[]}},"id":41,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":41,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 334

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":8},"contentChanges":[{"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":8}}
>>>
Content-Length: 396

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":9},"contentChanges":[{"range":{"start":{"line":52,"character":5},"end":{"line":52,"character":5}},"text":"else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  }"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":9}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":3},"end":{"line":54,"character":3}},"context":{"diagnostics":[]}},"id":42,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":42,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":55,"character":1}},"id":43,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":43,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":55,"character":2}},"id":44,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":44,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":55,"character":2},"end":{"line":55,"character":2}},"context":{"diagnostics":[]}},"id":45,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":45,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":10},"contentChanges":[{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":4,"line":55},"start":{"character":0,"line":55}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":10}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":11},"contentChanges":[{"range":{"start":{"line":54,"character":3},"end":{"line":55,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":11}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":3},"end":{"line":54,"character":3}},"context":{"diagnostics":[]}},"id":46,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":46,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":12},"contentChanges":[{"range":{"start":{"line":54,"character":3},"end":{"line":54,"character":3}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":12}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":4}},"context":{"diagnostics":[]}},"id":47,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":47,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 326

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":1}},"context":{"diagnostics":[]}},"id":48,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":48,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":7}},"id":49,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":49,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":6}},"id":50,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":50,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":5}},"id":51,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":51,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":5}},"id":52,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":52,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":5},"end":{"line":52,"character":5}},"context":{"diagnostics":[]}},"id":53,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":53,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":6}},"id":54,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":54,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":13},"contentChanges":[{"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":5}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":13}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"context":{"diagnostics":[]}},"id":55,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":55,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 260

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":6}},"id":56,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":56,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":6}},"id":57,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":57,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":13}},"id":58,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":58,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":164},"start":{"character":4,"line":164}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}]}
>>>
Content-Length: 5753

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out \u0026= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out \u0026= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) \u0026 bit) return HIGH;\n\treturn LOW;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":37}},"id":59,"jsonrpc":"2.0"}
<<<
Content-Length: 286

{"id":59,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":37,"line":52},"start":{"character":25,"line":52}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":48}},"id":60,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":60,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":45}},"id":61,"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"id":61,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `LOW`  \n\n---\n```cpp\n#define LOW 0x0\n```"},"range":{"end":{"character":45,"line":52},"start":{"character":42,"line":52}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":45}},"id":62,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":62,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":45},"end":{"line":52,"character":45}},"context":{"diagnostics":[]}},"id":63,"jsonrpc":"2.0"}
<<<
Content-Length: 414

{"id":63,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":45,"line":52},"start":{"character":45,"line":52}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'LOW'"},"kind":"refactor","title":"Expand macro 'LOW'"}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":14},"contentChanges":[{"range":{"start":{"line":52,"character":45},"end":{"line":52,"character":45}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":14}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":46},"end":{"line":52,"character":46}},"context":{"diagnostics":[]}},"id":64,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":64,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 342

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":15},"contentChanges":[{"range":{"start":{"line":52,"character":46},"end":{"line":52,"character":46}},"text":"\u0026"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":48,"line":52},"start":{"character":47,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":15}}
>>>
Content-Length: 342

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":16},"contentChanges":[{"range":{"start":{"line":52,"character":47},"end":{"line":52,"character":47}},"text":"\u0026"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":49,"line":52},"start":{"character":48,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":16}}
>>>
Content-Length: 500

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":48},"end":{"line":52,"character":48}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":48},"end":{"line":52,"character":49}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":65,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":65,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":17},"contentChanges":[{"range":{"start":{"line":52,"character":48},"end":{"line":52,"character":48}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":50,"line":52},"start":{"character":49,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":17}}
>>>
Content-Length: 500

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":49}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":50}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":66,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":66,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":13}},"id":67,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":67,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":13}},"id":68,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":68,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":13}},"id":69,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":69,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":12}},"id":70,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":70,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":17},"end":{"line":52,"character":12}},"context":{"diagnostics":[]}},"id":71,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":71,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":12},"end":{"line":52,"character":45}},"context":{"diagnostics":[]}},"id":72,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":72,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":48}},"id":73,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":73,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 369

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":18},"contentChanges":[{"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":49}},"text":"(digitalRead(secondKeyPin) == LOW"}]},"jsonrpc":"2.0"}Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":50}},"id":74,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":74,"jsonrpc":"2.0","result":[]}Content-Length: 788

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected ')'\n\nDigitalTrumpet.ino.cpp:53:13: note: to match this '('","range":{"end":{"character":85,"line":52},"start":{"character":84,"line":52}},"severity":1,"source":"clang"},{"message":"To match this '('\n\nDigitalTrumpet.ino.cpp:53:85: error: expected ')'","range":{"end":{"character":13,"line":52},"start":{"character":12,"line":52}},"severity":3},{"code":"expected_statement","message":"Expected statement","range":{"end":{"character":1,"line":63},"start":{"character":0,"line":63}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":18}}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":82},"end":{"line":52,"character":82}},"context":{"diagnostics":[]}},"id":75,"jsonrpc":"2.0"}
<<<
Content-Length: 414

{"id":75,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":82,"line":52},"start":{"character":82,"line":52}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'LOW'"},"kind":"refactor","title":"Expand macro 'LOW'"}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":58}},"id":76,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":76,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":57}},"id":77,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":77,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":63}},"id":78,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":78,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":63}},"id":79,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":79,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":63}},"id":80,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":80,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":62},"end":{"line":52,"character":74}},"context":{"diagnostics":[]}},"id":81,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":81,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 539

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":85},"end":{"line":52,"character":85}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":84},"end":{"line":52,"character":85}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nDigitalTrumpet.ino.cpp:53:13: note: to match this '('"}]}},"id":82,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":82,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":11}},"id":83,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":83,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":13}},"id":84,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":84,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":13}},"id":85,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":85,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 505

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":13},"end":{"line":52,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":12},"end":{"line":52,"character":13}},"severity":3,"message":"To match this '('\n\nDigitalTrumpet.ino.cpp:53:85: error: expected ')'"}]}},"id":86,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":86,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":51,"character":13}},"id":87,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":87,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 505

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":12},"end":{"line":52,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":12},"end":{"line":52,"character":13}},"severity":3,"message":"To match this '('\n\nDigitalTrumpet.ino.cpp:53:85: error: expected ')'"}]}},"id":88,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":88,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":16}},"id":89,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":89,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":16},"end":{"line":52,"character":16}},"context":{"diagnostics":[]}},"id":90,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":90,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":13}},"id":91,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":91,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":11}},"id":92,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":92,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":13}},"id":93,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":93,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":13}},"id":94,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":94,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":13}},"id":95,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":95,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 505

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":12},"end":{"line":52,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":12},"end":{"line":52,"character":13}},"severity":3,"message":"To match this '('\n\nDigitalTrumpet.ino.cpp:53:85: error: expected ')'"}]}},"id":96,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":96,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 505

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":13},"end":{"line":52,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":12},"end":{"line":52,"character":13}},"severity":3,"message":"To match this '('\n\nDigitalTrumpet.ino.cpp:53:85: error: expected ')'"}]}},"id":97,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":97,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":24}},"id":98,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":98,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":36}},"id":99,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":99,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":37}},"id":100,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":100,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":37}},"id":101,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":101,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":54}},"id":102,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":102,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":54}},"id":103,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":103,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 353

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":19},"contentChanges":[{"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":82}},"rangeLength":33,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":50,"line":52},"start":{"character":49,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":19}}
>>>
Content-Length: 501

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":49}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":50}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":104,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":104,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":51}},"id":105,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":105,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":50}},"id":106,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":106,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":20},"contentChanges":[{"range":{"start":{"line":52,"character":48},"end":{"line":52,"character":49}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":49,"line":52},"start":{"character":48,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":20}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":21},"contentChanges":[{"range":{"start":{"line":52,"character":47},"end":{"line":52,"character":48}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":48,"line":52},"start":{"character":47,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":21}}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":22},"contentChanges":[{"range":{"start":{"line":52,"character":46},"end":{"line":52,"character":47}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":22}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":46},"end":{"line":52,"character":46}},"context":{"diagnostics":[]}},"id":107,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":107,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":47},"end":{"line":52,"character":47}},"context":{"diagnostics":[]}},"id":108,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":108,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":23},"contentChanges":[{"range":{"start":{"line":52,"character":47},"end":{"line":52,"character":47}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":23}}
>>>
Content-Length: 342

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":24},"contentChanges":[{"range":{"start":{"line":52,"character":48},"end":{"line":52,"character":48}},"text":"\u0026"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":51,"line":52},"start":{"character":50,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":24}}
>>>
Content-Length: 342

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":25},"contentChanges":[{"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":49}},"text":"\u0026"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 395

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected","message":"Expected identifier","range":{"end":{"character":52,"line":52},"start":{"character":51,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":25}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":50},"end":{"line":52,"character":50}},"context":{"diagnostics":[]}},"id":109,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":109,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 564

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":28},"contentChanges":[{"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":50}},"rangeLength":1,"text":""},{"range":{"start":{"line":52,"character":48},"end":{"line":52,"character":49}},"rangeLength":1,"text":""},{"range":{"start":{"line":52,"character":47},"end":{"line":52,"character":48}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":28}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":47},"end":{"line":52,"character":47}},"context":{"diagnostics":[]}},"id":110,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":110,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":46},"end":{"line":52,"character":46}},"context":{"diagnostics":[]}},"id":111,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":111,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 342

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":29},"contentChanges":[{"range":{"start":{"line":52,"character":46},"end":{"line":52,"character":46}},"text":"\u0026"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":48,"line":52},"start":{"character":47,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":29}}
>>>
Content-Length: 342

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":30},"contentChanges":[{"range":{"start":{"line":52,"character":47},"end":{"line":52,"character":47}},"text":"\u0026"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":49,"line":52},"start":{"character":48,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":30}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":31},"contentChanges":[{"range":{"start":{"line":52,"character":48},"end":{"line":52,"character":48}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":50,"line":52},"start":{"character":49,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":31}}
>>>
Content-Length: 501

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":49}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":50}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":112,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":112,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":33}},"id":113,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":113,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":24}},"id":114,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":114,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":12}},"id":115,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":115,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":13}},"id":116,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":116,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":13},"end":{"line":52,"character":13}},"context":{"diagnostics":[]}},"id":117,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":117,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":51,"character":17},"end":{"line":52,"character":13}},"context":{"diagnostics":[]}},"id":118,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":118,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":13},"end":{"line":52,"character":46}},"context":{"diagnostics":[]}},"id":119,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":119,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":13},"end":{"line":52,"character":45}},"context":{"diagnostics":[]}},"id":120,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":120,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":49}},"id":121,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":121,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 501

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":50}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":50}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]}},"id":122,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":122,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":48},"end":{"line":52,"character":48}},"context":{"diagnostics":[]}},"id":123,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":123,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 368

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":32},"contentChanges":[{"range":{"start":{"line":52,"character":48},"end":{"line":52,"character":48}},"text":"digitalRead(secondKeyPin) == LOW"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":32}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":80},"end":{"line":52,"character":80}},"context":{"diagnostics":[]}},"id":124,"jsonrpc":"2.0"}
<<<
Content-Length: 415

{"id":124,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":80,"line":52},"start":{"character":80,"line":52}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'LOW'"},"kind":"refactor","title":"Expand macro 'LOW'"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":51}},"id":125,"jsonrpc":"2.0"}
<<<
Content-Length: 287

{"id":125,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":59,"line":52},"start":{"character":48,"line":52}}}}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":48}},"id":126,"jsonrpc":"2.0"}
<<<
Content-Length: 287

{"id":126,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":59,"line":52},"start":{"character":48,"line":52}}}}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":48}},"id":127,"jsonrpc":"2.0"}
<<<
Content-Length: 570

{"id":127,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":50},"start":{"character":6,"line":50}}},{"kind":1,"range":{"end":{"character":24,"line":52},"start":{"character":13,"line":52}}},{"kind":1,"range":{"end":{"character":59,"line":52},"start":{"character":48,"line":52}}},{"kind":1,"range":{"end":{"character":24,"line":54},"start":{"character":13,"line":54}}},{"kind":1,"range":{"end":{"character":24,"line":56},"start":{"character":13,"line":56}}},{"kind":1,"range":{"end":{"character":24,"line":58},"start":{"character":13,"line":58}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":33},"contentChanges":[{"range":{"start":{"line":52,"character":48},"end":{"line":52,"character":48}},"text":" "}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":33}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":50}},"id":128,"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"id":128,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":164},"start":{"character":4,"line":164}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":49},"end":{"line":52,"character":49}},"context":{"diagnostics":[]}},"id":129,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":129,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 5753

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out \u0026= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out \u0026= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) \u0026 bit) return HIGH;\n\treturn LOW;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":67}},"id":130,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":130,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":67}},"id":131,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":131,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":66}},"id":132,"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"id":132,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `secondKeyPin`  \n\n---\nType: `int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint secondKeyPin = 3\n```"},"range":{"end":{"character":73,"line":52},"start":{"character":61,"line":52}}}}
>>>
Content-Length: 269

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":67}},"id":133,"jsonrpc":"2.0"}
<<<
Content-Length: 479

{"id":133,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":2,"range":{"end":{"character":22,"line":37},"start":{"character":10,"line":37}}},{"kind":2,"range":{"end":{"character":37,"line":52},"start":{"character":25,"line":52}}},{"kind":2,"range":{"end":{"character":73,"line":52},"start":{"character":61,"line":52}}},{"kind":2,"range":{"end":{"character":37,"line":54},"start":{"character":25,"line":54}}}]}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":61},"end":{"line":52,"character":73}},"context":{"diagnostics":[]}},"id":134,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":134,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":68}},"id":135,"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"id":135,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `secondKeyPin`  \n\n---\nType: `int`  \nValue = `3`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint secondKeyPin = 3\n```"},"range":{"end":{"character":73,"line":52},"start":{"character":61,"line":52}}}}
>>>
Content-Length: 354

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":34},"contentChanges":[{"range":{"start":{"line":52,"character":61},"end":{"line":52,"character":73}},"rangeLength":12,"text":"t"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 418

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 't'","range":{"end":{"character":62,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":34}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":35},"contentChanges":[{"range":{"start":{"line":52,"character":62},"end":{"line":52,"character":62}},"text":"h"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 419

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'th'","range":{"end":{"character":63,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":35}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":36},"contentChanges":[{"range":{"start":{"line":52,"character":63},"end":{"line":52,"character":63}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 420

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'thi'","range":{"end":{"character":64,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":36}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":37},"contentChanges":[{"range":{"start":{"line":52,"character":64},"end":{"line":52,"character":64}},"text":"r"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 421

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'thir'","range":{"end":{"character":65,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":37}}
>>>
Content-Length: 516

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":65},"end":{"line":52,"character":65}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":61},"end":{"line":52,"character":65}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'thir'"}]}},"id":136,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":136,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}},"id":137,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":137,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":63},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":38},"contentChanges":[{"range":{"start":{"line":52,"character":65},"end":{"line":52,"character":65}},"text":"d"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 422

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'third'","range":{"end":{"character":66,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":38}}
>>>
Content-Length: 517

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":66},"end":{"line":52,"character":66}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":61},"end":{"line":52,"character":66}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'third'"}]}},"id":138,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":138,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}},"id":139,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":139,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":63},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":39},"contentChanges":[{"range":{"start":{"line":52,"character":66},"end":{"line":52,"character":66}},"text":"K"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'thirdK'","range":{"end":{"character":67,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":39}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":40},"contentChanges":[{"range":{"start":{"line":52,"character":67},"end":{"line":52,"character":67}},"text":"e"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 424

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'thirdKe'","range":{"end":{"character":68,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":40}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":41},"contentChanges":[{"range":{"start":{"line":52,"character":68},"end":{"line":52,"character":68}},"text":"y"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 425

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'thirdKey'","range":{"end":{"character":69,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":41}}
>>>
Content-Length: 520

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":69},"end":{"line":52,"character":69}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":61},"end":{"line":52,"character":69}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'thirdKey'"}]}},"id":140,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":140,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}},"id":141,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":141,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":63},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":42},"contentChanges":[{"range":{"start":{"line":52,"character":69},"end":{"line":52,"character":69}},"text":"P"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 784

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'thirdKeyP'; did you mean 'thirdKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:6:5: note: 'thirdKeyPin' declared here","range":{"end":{"character":70,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"},{"message":"'thirdKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:53:62: error: use of undeclared identifier 'thirdKeyP'; did you mean 'thirdKeyPin'?","range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":42}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":43},"contentChanges":[{"range":{"start":{"line":52,"character":70},"end":{"line":52,"character":70}},"text":"u"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 786

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'thirdKeyPu'; did you mean 'thirdKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:6:5: note: 'thirdKeyPin' declared here","range":{"end":{"character":71,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"},{"message":"'thirdKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:53:62: error: use of undeclared identifier 'thirdKeyPu'; did you mean 'thirdKeyPin'?","range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":43}}
>>>
Content-Length: 640

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":71},"end":{"line":52,"character":71}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":61},"end":{"line":52,"character":71}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'thirdKeyPu'; did you mean 'thirdKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:6:5: note: 'thirdKeyPin' declared here"}]}},"id":142,"jsonrpc":"2.0"}
<<<
Content-Length: 705

{"id":142,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'thirdKeyPu'; did you mean 'thirdKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:6:5: note: 'thirdKeyPin' declared here","range":{"end":{"character":71,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp":[{"newText":"thirdKeyPin","range":{"end":{"character":71,"line":52},"start":{"character":61,"line":52}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'thirdKeyPu' to 'thirdKeyPin'"}]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":44},"contentChanges":[{"range":{"start":{"line":52,"character":70},"end":{"line":52,"character":71}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 784

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'thirdKeyP'; did you mean 'thirdKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:6:5: note: 'thirdKeyPin' declared here","range":{"end":{"character":70,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"},{"message":"'thirdKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:53:62: error: use of undeclared identifier 'thirdKeyP'; did you mean 'thirdKeyPin'?","range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":44}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":45},"contentChanges":[{"range":{"start":{"line":52,"character":70},"end":{"line":52,"character":70}},"text":"i"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 786

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'thirdKeyPi'; did you mean 'thirdKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:6:5: note: 'thirdKeyPin' declared here","range":{"end":{"character":71,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"},{"message":"'thirdKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:53:62: error: use of undeclared identifier 'thirdKeyPi'; did you mean 'thirdKeyPin'?","range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":45}}
>>>
Content-Length: 337

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":46},"contentChanges":[{"range":{"start":{"line":52,"character":71},"end":{"line":52,"character":71}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":46}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":72},"end":{"line":52,"character":72}},"context":{"diagnostics":[]}},"id":143,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":143,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}},"id":144,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":144,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":63},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":68}},"id":145,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":145,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":68}},"id":146,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":146,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `thirdKeyPin`  \n\n---\nType: `int`  \nValue = `4`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint thirdKeyPin = 4\n```"},"range":{"end":{"character":72,"line":52},"start":{"character":61,"line":52}}}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":43}},"id":147,"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"id":147,"jsonrpc":"2.0","result":[{"range":{"end":{"character":11,"line":40},"start":{"character":8,"line":40}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":54,"character":32}},"id":148,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":148,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":53,"character":7}},"id":149,"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"id":149,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `green`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid green()\n```"},"range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}}}}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":53,"character":7}},"id":150,"jsonrpc":"2.0"}
<<<
Content-Length: 387

{"id":150,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":1,"range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}}},{"kind":1,"range":{"end":{"character":9,"line":55},"start":{"character":4,"line":55}}},{"kind":1,"range":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":9}},"context":{"diagnostics":[]}},"id":151,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":151,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 351

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":47},"contentChanges":[{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":9}},"rangeLength":5,"text":"c"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 416

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'c'","range":{"end":{"character":5,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":47}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":48},"contentChanges":[{"range":{"start":{"line":53,"character":5},"end":{"line":53,"character":5}},"text":"y"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 417

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use","message":"Use of undeclared identifier 'cy'","range":{"end":{"character":6,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":48}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":49},"contentChanges":[{"range":{"start":{"line":53,"character":6},"end":{"line":53,"character":6}},"text":"a"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 743

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'cya'; did you mean 'cyan'? (fix available)\n\nDigitalTrumpet.ino.cpp:27:6: note: 'cyan' declared here","range":{"end":{"character":7,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"},{"message":"'cyan' declared here\n\nDigitalTrumpet.ino.cpp:54:5: error: use of undeclared identifier 'cya'; did you mean 'cyan'?","range":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":49}}
>>>
Content-Length: 335

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":50},"contentChanges":[{"range":{"start":{"line":53,"character":7},"end":{"line":53,"character":7}},"text":"n"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":50}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":8}},"context":{"diagnostics":[]}},"id":152,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":152,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}},"id":153,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":153,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":63},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":76}},"id":154,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":154,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 257

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":71}},"id":155,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":155,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `thirdKeyPin`  \n\n---\nType: `int`  \nValue = `4`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint thirdKeyPin = 4\n```"},"range":{"end":{"character":72,"line":52},"start":{"character":61,"line":52}}}}
>>>
Content-Length: 667

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":54},"contentChanges":[{"range":{"start":{"line":53,"character":7},"end":{"line":53,"character":8}},"rangeLength":1,"text":""},{"range":{"start":{"line":53,"character":6},"end":{"line":53,"character":7}},"rangeLength":1,"text":""},{"range":{"start":{"line":53,"character":5},"end":{"line":53,"character":6}},"rangeLength":1,"text":""},{"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":5}},"rangeLength":1,"text":"green"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":54}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":9}},"context":{"diagnostics":[]}},"id":156,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":156,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":69}},"id":157,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":157,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":54}},"id":158,"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"id":158,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":164},"start":{"character":4,"line":164}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}]}
>>>
Content-Length: 5753

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out \u0026= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out \u0026= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) \u0026 bit) return HIGH;\n\treturn LOW;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}
>>>
Content-Length: 458

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":56},"contentChanges":[{"range":{"start":{"line":52,"character":71},"end":{"line":52,"character":72}},"rangeLength":1,"text":""},{"range":{"start":{"line":52,"character":70},"end":{"line":52,"character":71}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 784

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'thirdKeyP'; did you mean 'thirdKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:6:5: note: 'thirdKeyPin' declared here","range":{"end":{"character":70,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"},{"message":"'thirdKeyPin' declared here\n\nDigitalTrumpet.ino.cpp:53:62: error: use of undeclared identifier 'thirdKeyP'; did you mean 'thirdKeyPin'?","range":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}},"severity":3}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":56}}
>>>
Content-Length: 639

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":70},"end":{"line":52,"character":70}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":61},"end":{"line":52,"character":70}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'thirdKeyP'; did you mean 'thirdKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:6:5: note: 'thirdKeyPin' declared here"}]}},"id":159,"jsonrpc":"2.0"}
<<<
Content-Length: 703

{"id":159,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'thirdKeyP'; did you mean 'thirdKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:6:5: note: 'thirdKeyPin' declared here","range":{"end":{"character":70,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp":[{"newText":"thirdKeyPin","range":{"end":{"character":70,"line":52},"start":{"character":61,"line":52}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'thirdKeyP' to 'thirdKeyPin'"}]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":26}},"id":160,"jsonrpc":"2.0"}
<<<
Content-Length: 249

{"id":160,"jsonrpc":"2.0","result":[{"range":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}},"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}]}
>>>
Content-Length: 228

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"}},"id":161,"jsonrpc":"2.0"}
<<<
Content-Length: 5172

{"id":161,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":63},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":72},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":8,"line":66},"start":{"character":5,"line":66}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":80},"start":{"character":0,"line":74}},"selectionRange":{"end":{"character":11,"line":74},"start":{"character":5,"line":74}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":89},"start":{"character":0,"line":83}},"selectionRange":{"end":{"character":11,"line":83},"start":{"character":5,"line":83}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":96},"start":{"character":0,"line":90}},"selectionRange":{"end":{"character":10,"line":90},"start":{"character":5,"line":90}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":103},"start":{"character":0,"line":97}},"selectionRange":{"end":{"character":9,"line":97},"start":{"character":5,"line":97}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":110},"start":{"character":0,"line":104}},"selectionRange":{"end":{"character":9,"line":104},"start":{"character":5,"line":104}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":117},"start":{"character":0,"line":111}},"selectionRange":{"end":{"character":12,"line":111},"start":{"character":5,"line":111}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":124},"start":{"character":0,"line":118}},"selectionRange":{"end":{"character":12,"line":118},"start":{"character":5,"line":118}}}]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":53,"character":8}},"id":162,"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"id":162,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `green`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid green()\n```"},"range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":53,"character":4}},"id":163,"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"id":163,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `green`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid green()\n```"},"range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}}}}
>>>
Content-Length: 331

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":12},"end":{"line":53,"character":12}},"context":{"diagnostics":[]}},"id":164,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":164,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":3},"end":{"line":52,"character":3}},"context":{"diagnostics":[]}},"id":165,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":165,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":4}},"id":166,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":166,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":3},"end":{"line":52,"character":4}},"context":{"diagnostics":[]}},"id":167,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":167,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":4}},"context":{"diagnostics":[]}},"id":168,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":168,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":4}},"id":169,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":169,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":4}},"id":170,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":170,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":5}},"id":171,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":171,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 638

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":4},"end":{"line":53,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":52,"character":61},"end":{"line":52,"character":70}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'thirdKeyP'; did you mean 'thirdKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:6:5: note: 'thirdKeyPin' declared here"}]}},"id":172,"jsonrpc":"2.0"}
<<<
Content-Length: 703

{"id":172,"jsonrpc":"2.0","result":[{"diagnostics":[{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'thirdKeyP'; did you mean 'thirdKeyPin'? (fix available)\n\nDigitalTrumpet.ino.cpp:6:5: note: 'thirdKeyPin' declared here","range":{"end":{"character":70,"line":52},"start":{"character":61,"line":52}},"severity":1,"source":"clang"}],"edit":{"changes":{"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp":[{"newText":"thirdKeyPin","range":{"end":{"character":70,"line":52},"start":{"character":61,"line":52}}}]}},"isPreferred":true,"kind":"quickfix","title":"change 'thirdKeyP' to 'thirdKeyPin'"}]}
>>>
Content-Length: 352

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":57},"contentChanges":[{"range":{"start":{"line":52,"character":4},"end":{"line":53,"character":12}},"rangeLength":91,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1128

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":8,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":8,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":8,"line":57},"start":{"character":4,"line":57}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":8,"line":59},"start":{"character":4,"line":59}},"severity":1,"source":"clang"},{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":57}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":58},"contentChanges":[{"range":{"start":{"line":52,"character":3},"end":{"line":52,"character":4}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 1128

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":8,"line":53},"start":{"character":4,"line":53}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":8,"line":55},"start":{"character":4,"line":55}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":8,"line":57},"start":{"character":4,"line":57}},"severity":1,"source":"clang"},{"code":"expected_unqualified_id","message":"Expected unqualified-id","range":{"end":{"character":8,"line":59},"start":{"character":4,"line":59}},"severity":1,"source":"clang"},{"code":"extraneous_closing_brace","message":"Extraneous closing brace ('}')","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":62}},"severity":1,"source":"clang"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":58}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":3},"end":{"line":52,"character":3}},"context":{"diagnostics":[]}},"id":173,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":173,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":3},"end":{"line":53,"character":3}},"context":{"diagnostics":[]}},"id":174,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":174,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":59},"contentChanges":[{"range":{"start":{"line":53,"character":2},"end":{"line":53,"character":3}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":7,"line":53},"start":{"character":3,"line":53}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":59}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":60},"contentChanges":[{"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":2}},"rangeLength":2,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 460

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"readability-misleading-indentation","message":"Different indentation for 'if' and corresponding 'else'","range":{"end":{"character":5,"line":53},"start":{"character":1,"line":53}},"severity":2,"source":"clang-tidy"}],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":60}}
>>>
Content-Length: 350

{"method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":61},"contentChanges":[{"range":{"start":{"line":52,"character":3},"end":{"line":53,"character":0}},"rangeLength":1,"text":""}]},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp","version":61}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":3},"end":{"line":52,"character":3}},"context":{"diagnostics":[]}},"id":175,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":175,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 262

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":18}},"id":176,"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"id":176,"jsonrpc":"2.0","result":[{"range":{"end":{"character":15,"line":164},"start":{"character":4,"line":164}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}]}
>>>
Content-Length: 5753

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c","languageId":"c","version":1,"text":"/*\n  wiring_digital.c - digital input and output functions\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n\n  Modified 28 September 2010 by Mark Sproul\n*/\n\n#define ARDUINO_MAIN\n#include \"wiring_private.h\"\n#include \"pins_arduino.h\"\n\nvoid pinMode(uint8_t pin, uint8_t mode)\n{\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *reg, *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// JWS: can I let the optimizer do this?\n\treg = portModeRegister(port);\n\tout = portOutputRegister(port);\n\n\tif (mode == INPUT) { \n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out \u0026= ~bit;\n\t\tSREG = oldSREG;\n\t} else if (mode == INPUT_PULLUP) {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg \u0026= ~bit;\n\t\t*out |= bit;\n\t\tSREG = oldSREG;\n\t} else {\n\t\tuint8_t oldSREG = SREG;\n                cli();\n\t\t*reg |= bit;\n\t\tSREG = oldSREG;\n\t}\n}\n\n// Forcing this inline keeps the callers from having to push their own stuff\n// on the stack. It is a good performance win and only takes 1 more byte per\n// user than calling. (It will take more bytes on the 168.)\n//\n// But shouldn't this be moved into pinMode? Seems silly to check and do on\n// each digitalread or write.\n//\n// Mark Sproul:\n// - Removed inline. Save 170 bytes on atmega1280\n// - changed to a switch statment; added 32 bytes but much easier to read and maintain.\n// - Added more #ifdefs, now compiles for atmega645\n//\n//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));\n//static inline void turnOffPWM(uint8_t timer)\nstatic void turnOffPWM(uint8_t timer)\n{\n\tswitch (timer)\n\t{\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1A1)\n\t\tcase TIMER1A:   cbi(TCCR1A, COM1A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1B1)\n\t\tcase TIMER1B:   cbi(TCCR1A, COM1B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR1A) \u0026\u0026 defined(COM1C1)\n\t\tcase TIMER1C:   cbi(TCCR1A, COM1C1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR2) \u0026\u0026 defined(COM21)\n\t\tcase  TIMER2:   cbi(TCCR2, COM21);      break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0A1)\n\t\tcase  TIMER0A:  cbi(TCCR0A, COM0A1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR0A) \u0026\u0026 defined(COM0B1)\n\t\tcase  TIMER0B:  cbi(TCCR0A, COM0B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2A1)\n\t\tcase  TIMER2A:  cbi(TCCR2A, COM2A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR2A) \u0026\u0026 defined(COM2B1)\n\t\tcase  TIMER2B:  cbi(TCCR2A, COM2B1);    break;\n\t\t#endif\n\t\t\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3A1)\n\t\tcase  TIMER3A:  cbi(TCCR3A, COM3A1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3B1)\n\t\tcase  TIMER3B:  cbi(TCCR3A, COM3B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR3A) \u0026\u0026 defined(COM3C1)\n\t\tcase  TIMER3C:  cbi(TCCR3A, COM3C1);    break;\n\t\t#endif\n\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4A1)\n\t\tcase  TIMER4A:  cbi(TCCR4A, COM4A1);    break;\n\t\t#endif\t\t\t\t\t\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4B1)\n\t\tcase  TIMER4B:  cbi(TCCR4A, COM4B1);    break;\n\t\t#endif\n\t\t#if defined(TCCR4A) \u0026\u0026 defined(COM4C1)\n\t\tcase  TIMER4C:  cbi(TCCR4A, COM4C1);    break;\n\t\t#endif\t\t\t\n\t\t#if defined(TCCR4C) \u0026\u0026 defined(COM4D1)\n\t\tcase TIMER4D:\tcbi(TCCR4C, COM4D1);\tbreak;\n\t\t#endif\t\t\t\n\t\t\t\n\t\t#if defined(TCCR5A)\n\t\tcase  TIMER5A:  cbi(TCCR5A, COM5A1);    break;\n\t\tcase  TIMER5B:  cbi(TCCR5A, COM5B1);    break;\n\t\tcase  TIMER5C:  cbi(TCCR5A, COM5C1);    break;\n\t\t#endif\n\t}\n}\n\nvoid digitalWrite(uint8_t pin, uint8_t val)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\tvolatile uint8_t *out;\n\n\tif (port == NOT_A_PIN) return;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before doing a digital write.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tout = portOutputRegister(port);\n\n\tuint8_t oldSREG = SREG;\n\tcli();\n\n\tif (val == LOW) {\n\t\t*out \u0026= ~bit;\n\t} else {\n\t\t*out |= bit;\n\t}\n\n\tSREG = oldSREG;\n}\n\nint digitalRead(uint8_t pin)\n{\n\tuint8_t timer = digitalPinToTimer(pin);\n\tuint8_t bit = digitalPinToBitMask(pin);\n\tuint8_t port = digitalPinToPort(pin);\n\n\tif (port == NOT_A_PIN) return LOW;\n\n\t// If the pin that support PWM output, we need to turn it off\n\t// before getting a digital reading.\n\tif (timer != NOT_ON_TIMER) turnOffPWM(timer);\n\n\tif (*portInputRegister(port) \u0026 bit) return HIGH;\n\treturn LOW;\n}\n"}},"jsonrpc":"2.0"}Content-Length: 191

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}},"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/wiring_digital.c"}}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server598385589/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":48,"character":5}},"id":177,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"id":177,"jsonrpc":"2.0","result":[{"range":{"end":{"character":9,"line":154},"start":{"character":5,"line":154}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 60

{"method":"shutdown","params":null,"id":178,"jsonrpc":"2.0"}
<<<
Content-Length: 40

{"id":178,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":77511,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server316029644/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server316029644/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 3525

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server316029644/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint GreenPin = 10;\nint BluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(RedPin, OUTPUT);\n  pinMode(BluePin, OUTPUT);\n  pinMode(GreenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    blue();      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    orange();\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    red();\n  } else {\n    turnOff();\n  }\n}\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 90);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}},"jsonrpc":"2.0"}Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server316029644/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":1}},"context":{"diagnostics":[]}},"id":1,"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server316029644/sketch/DigitalTrumpet.ino.cpp"}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server316029644/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 36

{"id":1,"jsonrpc":"2.0","result":[]}Content-Length: 5170

{"id":2,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":70},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":11,"line":72},"start":{"character":5,"line":72}}},{"kind":12,"name":"yellow","range":{"end":{"charact
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server316029644/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":3},"end":{"line":52,"character":3}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
er":1,"line":87},"start":{"character":0,"line":81}},"selectionRange":{"end":{"character":11,"line":81},"start":{"character":5,"line":81}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":95}},"selectionRange":{"end":{"character":9,"line":95},"start":{"character":5,"line":95}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":102}},"selectionRange":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":115},"start":{"character":0,"line":109}},"selectionRange":{"end":{"character":12,"line":109},"start":{"character":5,"line":109}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":116}},"selectionRange":{"end":{"character":12,"line":116},"start":{"character":5,"line":116}}}]}Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server316029644/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":40,"character":0},"end":{"line":41,"character":35}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server316029644/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":56,"character":41},"end":{"line":56,"character":41}},"context":{"diagnostics":[]}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":5,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server316029644/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":61,"character":1},"end":{"line":61,"character":1}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 58

{"method":"shutdown","params":null,"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":7,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":46086,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 3525

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint GreenPin = 10;\nint BluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(RedPin, OUTPUT);\n  pinMode(BluePin, OUTPUT);\n  pinMode(GreenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    blue();      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    orange();\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    red();\n  } else {\n    turnOff();\n  }\n}\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 90);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}},"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":1}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/26","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/26","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/26","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/26","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/26","percentage":3.8461538461538463}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/26","percentage":7.6923076923076925}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/26","percentage":7.6923076923076925}}}Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 5170

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":70},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":11,"line":72},"start":{"character":5,"line":72}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":87},"start":{"character":0,"line":81}},"selectionRange":{"end":{"character":11,"line":81},"start":{"character":5,"line":81}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":95}},"selectionRange":{"end":{"character":9,"line":95},"start":{"character":5,"line":95}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":102}},"selectionRange":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":115},"start":{"character":0,"line":109}},"selectionRange":{"end":{"character":12,"line":109},"start":{"character":5,"line":109}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":116}},"selectionRange":{"end":{"character":12,"line":116},"start":{"character":5,"line":116}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":61,"character":1},"end":{"line":61,"character":1}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 255

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":21}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 303

{"id":4,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `fourthKeyPin`  \n\n---\nType: `int`  \nValue = `5`  \nPassed as pin (converted to uint8_t)  \n\n---\n```cpp\nint fourthKeyPin = 5\n```"},"range":{"end":{"character":22,"line":39},"start":{"character":10,"line":39}}}}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/26","percentage":11.538461538461538}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/26","percentage":11.538461538461538}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/26","percentage":15.384615384615385}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/26","percentage":15.384615384615385}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/26","percentage":19.23076923076923}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/26","percentage":19.23076923076923}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/26","percentage":23.076923076923077}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/26","percentage":23.076923076923077}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/26","percentage":26.923076923076923}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/26","percentage":26.923076923076923}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/26","percentage":30.76923076923077}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/26","percentage":30.76923076923077}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/26","percentage":34.615384615384613}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/26","percentage":34.615384615384613}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/26","percentage":38.46153846153846}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/26","percentage":38.46153846153846}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/26","percentage":42.307692307692307}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/26","percentage":42.307692307692307}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/26","percentage":46.153846153846153}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/26","percentage":46.153846153846153}}}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":17}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"id":5,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":2,"range":{"end":{"character":22,"line":39},"start":{"character":10,"line":39}}},{"kind":2,"range":{"end":{"character":37,"line":56},"start":{"character":25,"line":56}}}]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/26","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/26","percentage":50}}}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":4},"jsonrpc":"2.0"}Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":39,"character":30}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":5},"jsonrpc":"2.0"}Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":35,"character":33}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/26","percentage":53.846153846153847}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/26","percentage":53.846153846153847}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/26","percentage":57.692307692307693}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/26","percentage":57.692307692307693}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/26","percentage":61.53846153846154}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/26","percentage":61.53846153846154}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/26","percentage":65.384615384615387}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/26","percentage":65.384615384615387}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/26","percentage":69.230769230769226}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/26","percentage":69.230769230769226}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/26","percentage":73.07692307692308}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/26","percentage":76.92307692307692}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/26","percentage":80.769230769230774}}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":35,"character":27},"end":{"line":35,"character":33}},"context":{"diagnostics":[]}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/26","percentage":84.615384615384613}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/26","percentage":88.461538461538467}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/26","percentage":92.307692307692307}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/26","percentage":96.15384615384616}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":31}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":23},"end":{"line":36,"character":35}},"context":{"diagnostics":[]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 844

{"id":10,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":35,"line":36},"start":{"character":23,"line":36}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'INPUT_PULLUP'"},"kind":"refactor","title":"Expand macro 'INPUT_PULLUP'"},{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":35,"line":36},"start":{"character":23,"line":36}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 261

{"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server884580435/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":36,"character":31}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"id":11,"jsonrpc":"2.0","result":[{"range":{"end":{"character":20,"line":44},"start":{"character":8,"line":44}},"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}]}
>>>
Content-Length: 8302

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h","languageId":"cpp","version":1,"text":"/*\n  Arduino.h - Main include file for the Arduino SDK\n  Copyright (c) 2005-2013 Arduino Team.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Arduino_h\n#define Arduino_h\n\n#include \u003cstdlib.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n\n#include \u003cavr/pgmspace.h\u003e\n#include \u003cavr/io.h\u003e\n#include \u003cavr/interrupt.h\u003e\n\n#include \"binary.h\"\n\n#ifdef __cplusplus\nextern \"C\"{\n#endif\n\nvoid yield(void);\n\n#define HIGH 0x1\n#define LOW  0x0\n\n#define INPUT 0x0\n#define OUTPUT 0x1\n#define INPUT_PULLUP 0x2\n\n#define PI 3.1415926535897932384626433832795\n#define HALF_PI 1.5707963267948966192313216916398\n#define TWO_PI 6.283185307179586476925286766559\n#define DEG_TO_RAD 0.017453292519943295769236907684886\n#define RAD_TO_DEG 57.295779513082320876798154814105\n#define EULER 2.718281828459045235360287471352\n\n#define SERIAL  0x0\n#define DISPLAY 0x1\n\n#define LSBFIRST 0\n#define MSBFIRST 1\n\n#define CHANGE 1\n#define FALLING 2\n#define RISING 3\n\n#if defined(__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n  #define DEFAULT 0\n  #define EXTERNAL 1\n  #define INTERNAL1V1 2\n  #define INTERNAL INTERNAL1V1\n#elif defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n  #define DEFAULT 0\n  #define EXTERNAL 4\n  #define INTERNAL1V1 8\n  #define INTERNAL INTERNAL1V1\n  #define INTERNAL2V56 9\n  #define INTERNAL2V56_EXTCAP 13\n#else  \n#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\n#define INTERNAL1V1 2\n#define INTERNAL2V56 3\n#else\n#define INTERNAL 3\n#endif\n#define DEFAULT 1\n#define EXTERNAL 0\n#endif\n\n// undefine stdlib's abs if encountered\n#ifdef abs\n#undef abs\n#endif\n\n#define min(a,b) ((a)\u003c(b)?(a):(b))\n#define max(a,b) ((a)\u003e(b)?(a):(b))\n#define abs(x) ((x)\u003e0?(x):-(x))\n#define constrain(amt,low,high) ((amt)\u003c(low)?(low):((amt)\u003e(high)?(high):(amt)))\n#define round(x)     ((x)\u003e=0?(long)((x)+0.5):(long)((x)-0.5))\n#define radians(deg) ((deg)*DEG_TO_RAD)\n#define degrees(rad) ((rad)*RAD_TO_DEG)\n#define sq(x) ((x)*(x))\n\n#define interrupts() sei()\n#define noInterrupts() cli()\n\n#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )\n#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )\n#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )\n\n#define lowByte(w) ((uint8_t) ((w) \u0026 0xff))\n#define highByte(w) ((uint8_t) ((w) \u003e\u003e 8))\n\n#define bitRead(value, bit) (((value) \u003e\u003e (bit)) \u0026 0x01)\n#define bitSet(value, bit) ((value) |= (1UL \u003c\u003c (bit)))\n#define bitClear(value, bit) ((value) \u0026= ~(1UL \u003c\u003c (bit)))\n#define bitToggle(value, bit) ((value) ^= (1UL \u003c\u003c (bit)))\n#define bitWrite(value, bit, bitvalue) ((bitvalue) ? bitSet(value, bit) : bitClear(value, bit))\n\n// avr-libc defines _NOP() since 1.6.2\n#ifndef _NOP\n#define _NOP() do { __asm__ volatile (\"nop\"); } while (0)\n#endif\n\ntypedef unsigned int word;\n\n#define bit(b) (1UL \u003c\u003c (b))\n\ntypedef bool boolean;\ntypedef uint8_t byte;\n\nvoid init(void);\nvoid initVariant(void);\n\nint atexit(void (*func)()) __attribute__((weak));\n\nvoid pinMode(uint8_t pin, uint8_t mode);\nvoid digitalWrite(uint8_t pin, uint8_t val);\nint digitalRead(uint8_t pin);\nint analogRead(uint8_t pin);\nvoid analogReference(uint8_t mode);\nvoid analogWrite(uint8_t pin, int val);\n\nunsigned long millis(void);\nunsigned long micros(void);\nvoid delay(unsigned long ms);\nvoid delayMicroseconds(unsigned int us);\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);\n\nvoid shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);\nuint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);\n\nvoid attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode);\nvoid detachInterrupt(uint8_t interruptNum);\n\nvoid setup(void);\nvoid loop(void);\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n\n#define analogInPinToBit(P) (P)\n\n// On the ATmega1280, the addresses of some of the port registers are\n// greater than 255, so we can't store them in uint8_t's.\nextern const uint16_t PROGMEM port_to_mode_PGM[];\nextern const uint16_t PROGMEM port_to_input_PGM[];\nextern const uint16_t PROGMEM port_to_output_PGM[];\n\nextern const uint8_t PROGMEM digital_pin_to_port_PGM[];\n// extern const uint8_t PROGMEM digital_pin_to_bit_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_bit_mask_PGM[];\nextern const uint8_t PROGMEM digital_pin_to_timer_PGM[];\n\n// Get the bit location within the hardware port of the given virtual pin.\n// This comes from the pins_*.c file for the active board configuration.\n// \n// These perform slightly better as macros compared to inline functions\n//\n#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )\n#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )\n#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )\n#define analogInPinToBit(P) (P)\n#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )\n#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )\n#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )\n\n#define NOT_A_PIN 0\n#define NOT_A_PORT 0\n\n#define NOT_AN_INTERRUPT -1\n\n#ifdef ARDUINO_MAIN\n#define PA 1\n#define PB 2\n#define PC 3\n#define PD 4\n#define PE 5\n#define PF 6\n#define PG 7\n#define PH 8\n#define PJ 10\n#define PK 11\n#define PL 12\n#endif\n\n#define NOT_ON_TIMER 0\n#define TIMER0A 1\n#define TIMER0B 2\n#define TIMER1A 3\n#define TIMER1B 4\n#define TIMER1C 5\n#define TIMER2  6\n#define TIMER2A 7\n#define TIMER2B 8\n\n#define TIMER3A 9\n#define TIMER3B 10\n#define TIMER3C 11\n#define TIMER4A 12\n#define TIMER4B 13\n#define TIMER4C 14\n#define TIMER4D 15\n#define TIMER5A 16\n#define TIMER5B 17\n#define TIMER5C 18\n\n#ifdef __cplusplus\n} // extern \"C\"\n#endif\n\n#ifdef __cplusplus\n#include \"WCharacter.h\"\n#include \"WString.h\"\n#include \"HardwareSerial.h\"\n#include \"USBAPI.h\"\n#if defined(HAVE_HWSERIAL0) \u0026\u0026 defined(HAVE_CDCSERIAL)\n#error \"Targets with both UART0 and CDC serial not supported\"\n#endif\n\nuint16_t makeWord(uint16_t w);\nuint16_t makeWord(byte h, byte l);\n\n#define word(...) makeWord(__VA_ARGS__)\n\nunsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\nunsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);\n\nvoid tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);\nvoid noTone(uint8_t _pin);\n\n// WMath prototypes\nlong random(long);\nlong random(long, long);\nvoid randomSeed(unsigned long);\nlong map(long, long, long, long, long);\n\n#endif\n\n#include \"pins_arduino.h\"\n\n#endif\n"}},"jsonrpc":"2.0"}Content-Length: 184

{"method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}},"jsonrpc":"2.0"}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///Users/lalit/Library/Arduino15/packages/arduino/hardware/avr/1.8.3/cores/arduino/Arduino.h"}}
>>>
Content-Length: 59

{"method":"shutdown","params":null,"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":12,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":46268,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 3525

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint GreenPin = 10;\nint BluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(RedPin, OUTPUT);\n  pinMode(BluePin, OUTPUT);\n  pinMode(GreenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    blue();      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    orange();\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    red();\n  } else {\n    turnOff();\n  }\n}\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 90);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}},"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":1}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 5170

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":70},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":11,"line":72},"start":{"character":5,"line":72}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":87},"start":{"character":0,"line":81}},"selectionRange":{"end":{"character":11,"line":81},"start":{"character":5,"line":81}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":95}},"selectionRange":{"end":{"character":9,"line":95},"start":{"character":5,"line":95}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":102}},"selectionRange":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":115},"start":{"character":0,"line":109}},"selectionRange":{"end":{"character":12,"line":109},"start":{"character":5,"line":109}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":116}},"selectionRange":{"end":{"character":12,"line":116},"start":{"character":5,"line":116}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":36,"character":23},"end":{"line":36,"character":35}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 843

{"id":3,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":35,"line":36},"start":{"character":23,"line":36}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'INPUT_PULLUP'"},"kind":"refactor","title":"Expand macro 'INPUT_PULLUP'"},{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":35,"line":36},"start":{"character":23,"line":36}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":40},"end":{"line":50,"character":40}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":28}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"id":5,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":2,"range":{"end":{"character":21,"line":36},"start":{"character":10,"line":36}}},{"kind":2,"range":{"end":{"character":29,"line":50},"start":{"character":18,"line":50}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":28},"end":{"line":50,"character":28}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":18},"end":{"line":50,"character":29}},"context":{"diagnostics":[]}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":7,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 254

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":7}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 284

{"id":8,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":17,"line":50},"start":{"character":6,"line":50}}}}
>>>
Content-Length: 254

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":6}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 284

{"id":9,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalRead`  \n\n---\nâ†’ `int`  \nParameters:  \n- `uint8_t pin`\n\n---\n```cpp\nint digitalRead(uint8_t pin)\n```"},"range":{"end":{"character":17,"line":50},"start":{"character":6,"line":50}}}}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":6}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 391

{"id":10,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":50},"start":{"character":6,"line":50}}},{"kind":1,"range":{"end":{"character":24,"line":52},"start":{"character":13,"line":52}}},{"kind":1,"range":{"end":{"character":24,"line":54},"start":{"character":13,"line":54}}},{"kind":1,"range":{"end":{"character":24,"line":56},"start":{"character":13,"line":56}}}]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":9},"jsonrpc":"2.0"}Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":6},"end":{"line":50,"character":31}},"context":{"diagnostics":[]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"id":11,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":31,"line":50},"start":{"character":6,"line":50}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":6},"end":{"line":50,"character":30}},"context":{"diagnostics":[]}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"id":12,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":30,"line":50},"start":{"character":6,"line":50}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server001368359/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":8},"end":{"line":50,"character":8}},"context":{"diagnostics":[]}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":13,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 59

{"method":"shutdown","params":null,"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":14,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":51351,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 3525

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint GreenPin = 10;\nint BluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(RedPin, OUTPUT);\n  pinMode(BluePin, OUTPUT);\n  pinMode(GreenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    blue();      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    orange();\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    red();\n  } else {\n    turnOff();\n  }\n}\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 90);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}},"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp"}},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":1}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 5170

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":70},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":11,"line":72},"start":{"character":5,"line":72}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":87},"start":{"character":0,"line":81}},"selectionRange":{"end":{"character":11,"line":81},"start":{"character":5,"line":81}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":95}},"selectionRange":{"end":{"character":9,"line":95},"start":{"character":5,"line":95}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":102}},"selectionRange":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":115},"start":{"character":0,"line":109}},"selectionRange":{"end":{"character":12,"line":109},"start":{"character":5,"line":109}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":116}},"selectionRange":{"end":{"character":12,"line":116},"start":{"character":5,"line":116}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":8},"end":{"line":50,"character":8}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":45,"character":21},"end":{"line":45,"character":21}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":17}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 390

{"id":5,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":50},"start":{"character":6,"line":50}}},{"kind":1,"range":{"end":{"character":24,"line":52},"start":{"character":13,"line":52}}},{"kind":1,"range":{"end":{"character":24,"line":54},"start":{"character":13,"line":54}}},{"kind":1,"range":{"end":{"character":24,"line":56},"start":{"character":13,"line":56}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":17},"end":{"line":50,"character":17}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 254

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":2}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":7,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 266

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":50,"character":2}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":8,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":2},"end":{"line":52,"character":6}},"context":{"diagnostics":[]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":2},"end":{"line":52,"character":5}},"context":{"diagnostics":[]}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":10,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server390651710/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":2},"end":{"line":52,"character":3}},"context":{"diagnostics":[]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 59

{"method":"shutdown","params":null,"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":12,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":52581,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 3525

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint GreenPin = 10;\nint BluePin = 11;   \n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);  \n\n  //set the buzzer pin as an output\n  pinMode(RedPin, OUTPUT);\n  pinMode(BluePin, OUTPUT);\n  pinMode(GreenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    blue();      \n  } else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    orange();\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    red();\n  } else {\n    turnOff();\n  }\n}\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 90);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}},"jsonrpc":"2.0"}Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":1}},"context":{"diagnostics":[]}},"id":1,"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 36

{"id":1,"jsonrpc":"2.0","result":[]}Content-Length: 5170

{"id":2,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":70},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":11,"line":72},"start":{"character":5,"line":72}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":87},"start":{"character":0,"line":81}},"selectionRange":{"end":{"character":11,"line":81},"start":{"character":5,"line":81}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":95}},"selectionRange":{"end":{"character":9,"line":95},"start":{"character":5,"line":95}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":102}},"selectionRange":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":115},"start":{"character":0,"line":109}},"selectionRange":{"end":{"character":12,"line":109},"start":{"character":5,"line":109}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":116}},"selectionRange":{"end":{"character":12,"line":116},"start":{"character":5,"line":116}}}]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":50,"character":2},"end":{"line":52,"character":3}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":18}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 390

{"id":4,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":50},"start":{"character":6,"line":50}}},{"kind":1,"range":{"end":{"character":24,"line":52},"start":{"character":13,"line":52}}},{"kind":1,"range":{"end":{"character":24,"line":54},"start":{"character":13,"line":54}}},{"kind":1,"range":{"end":{"character":24,"line":56},"start":{"character":13,"line":56}}}]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":3},"jsonrpc":"2.0"}Content-Length: 266

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":53,"character":7}},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"id":5,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":1,"range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}}},{"kind":1,"range":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}}]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":53,"character":7},"end":{"line":53,"character":7}},"context":{"diagnostics":[]}},"id":6,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":6,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 254

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":53,"character":6}},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 230

{"id":7,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `green`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid green()\n```"},"range":{"end":{"character":9,"line":53},"start":{"character":4,"line":53}}}}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":19}},"id":8,"jsonrpc":"2.0"}
<<<
Content-Length: 390

{"id":8,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":50},"start":{"character":6,"line":50}}},{"kind":1,"range":{"end":{"character":24,"line":52},"start":{"character":13,"line":52}}},{"kind":1,"range":{"end":{"character":24,"line":54},"start":{"character":13,"line":54}}},{"kind":1,"range":{"end":{"character":24,"line":56},"start":{"character":13,"line":56}}}]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":19},"end":{"line":52,"character":19}},"context":{"diagnostics":[]}},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":9,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":37}},"id":10,"jsonrpc":"2.0"}
<<<
Content-Length: 391

{"id":10,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":17,"line":50},"start":{"character":6,"line":50}}},{"kind":1,"range":{"end":{"character":24,"line":52},"start":{"character":13,"line":52}}},{"kind":1,"range":{"end":{"character":24,"line":54},"start":{"character":13,"line":54}}},{"kind":1,"range":{"end":{"character":24,"line":56},"start":{"character":13,"line":56}}}]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":37},"end":{"line":52,"character":37}},"context":{"diagnostics":[]}},"id":11,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":11,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 268

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":52,"character":45}},"id":12,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":12,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 330

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":52,"character":45},"end":{"line":52,"character":45}},"context":{"diagnostics":[]}},"id":13,"jsonrpc":"2.0"}
<<<
Content-Length: 414

{"id":13,"jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp","selection":{"end":{"character":45,"line":52},"start":{"character":45,"line":52}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'LOW'"},"kind":"refactor","title":"Expand macro 'LOW'"}]}
>>>
Content-Length: 267

{"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":6,"character":13}},"id":14,"jsonrpc":"2.0"}
<<<
Content-Length: 300

{"id":14,"jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":2,"range":{"end":{"character":22,"line":39},"start":{"character":10,"line":39}}},{"kind":2,"range":{"end":{"character":37,"line":56},"start":{"character":25,"line":56}}}]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":2,"character":0},"end":{"line":62,"character":0}},"context":{"diagnostics":[]}},"id":15,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":15,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 328

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":21},"end":{"line":6,"character":21}},"context":{"diagnostics":[]}},"id":16,"jsonrpc":"2.0"}
<<<
Content-Length: 37

{"id":16,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":44,"character":21}},"id":17,"jsonrpc":"2.0"}
<<<
Content-Length: 216

{"id":17,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `OUTPUT`  \n\n---\n```cpp\n#define OUTPUT 0x1\n```"},"range":{"end":{"character":26,"line":44},"start":{"character":20,"line":44}}}}
>>>
Content-Length: 256

{"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server410679764/sketch/DigitalTrumpet.ino.cpp"},"position":{"line":59,"character":13}},"id":18,"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"id":18,"jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `turnOff`  \n\n---\nâ†’ `void`  \n\n---\n```cpp\nvoid turnOff()\n```"},"range":{"end":{"character":14,"line":59},"start":{"character":13,"line":59}}}}
>>>
Content-Length: 59

{"method":"shutdown","params":null,"id":19,"jsonrpc":"2.0"}
<<<
Content-Length: 39

{"id":19,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF







Started logging.

>>>
Content-Length: 2201

{"method":"initialize","params":{"processId":17097,"rootPath":"/private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server103030432/sketch","rootUri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server103030432/sketch","clientInfo":{"name":"vscode","version":"1.50.0"},"trace":"off","initializationOptions":{},"capabilities":{"workspace":{"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"]},"applyEdit":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"declaration":{"linkSupport":true},"definition":{"linkSupport":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"synchronization":{"willSave":true,"didSave":true,"willSaveWaitUntil":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"completion":{"completionItem":{"documentationFormat":["markdown","plaintext"],"snippetSupport":true},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}}},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"hover":{"contentFormat":["markdown","plaintext"]},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"colorProvider":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}}},"id":0,"jsonrpc":"2.0"}
<<<
Content-Length: 1671

{"id":0,"jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":[],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","enum","enumMember","type","dependent","dependent","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 12.0.0 (https://github.com/llvm/llvm-project e841bd5f335864b8c4d81cbf4df08460ef39f2ae)"}}}
>>>
Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}Content-Length: 3514

{"method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server103030432/sketch/DigitalTrumpet.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\n\nint firstKeyPin = 2;\nint secondKeyPin = 3;\nint thirdKeyPin = 4;\nint fourthKeyPin = 5;\n\nint RedPin = 9;\nint GreenPin = 10;\nint BluePin = 11;\n\n\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup();\n#line 26 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid loop();\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red();\n#line 9 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid orange();\n#line 18 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid yellow();\n#line 25 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid green();\n#line 32 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid cyan();\n#line 39 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid blue();\n#line 46 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid magenta();\n#line 53 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid turnOff();\n#line 12 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/DigitalTrumpet.ino\"\nvoid setup() {\n  //set the button pins as inputs\n  pinMode(firstKeyPin, INPUT_PULLUP);\n  pinMode(secondKeyPin, INPUT_PULLUP);\n  pinMode(thirdKeyPin, INPUT_PULLUP);\n  pinMode(fourthKeyPin, INPUT_PULLUP);\n\n  //set the buzzer pin as an output\n  pinMode(RedPin, OUTPUT);\n  pinMode(BluePin, OUTPUT);\n  pinMode(GreenPin, OUTPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  if (digitalRead(firstKeyPin) == LOW) {\n    blue();\n  } else if (digitalRead(secondKeyPin) == LOW) {\n    green();\n  } else if (digitalRead(thirdKeyPin) == LOW) {\n    orange();\n  } else if (digitalRead(fourthKeyPin) == LOW) {\n    red();\n  } else {\n    turnOff();\n  }\n}\n\n#line 1 \"/Users/lalit/Desktop/Coding/Arduino/DigitalTrumpet/Colors.ino\"\nvoid red() {\n\n  //set the LED pins to values that make red\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n\nvoid orange() {\n\n  //set the LED pins to values that make orange\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 90);\n  analogWrite(BluePin, 0);\n}\n\n\nvoid yellow() {\n\n  //set the LED pins to values that make yellow\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid green() {\n\n  //set the LED pins to values that make green\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 0);\n}\nvoid cyan() {\n\n  //set the LED pins to values that make cyan\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 100);\n  analogWrite(BluePin, 100);\n}\nvoid blue() {\n\n  //set the LED pins to values that make blue\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid magenta() {\n\n  //set the LED pins to values that make magenta\n  analogWrite(RedPin, 100);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 100);\n}\nvoid turnOff() {\n\n  //set all three LED pins to 0 or OFF\n  analogWrite(RedPin, 0);\n  analogWrite(GreenPin, 0);\n  analogWrite(BluePin, 0);\n}\n"}},"jsonrpc":"2.0"}Content-Length: 226

{"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server103030432/sketch/DigitalTrumpet.ino.cpp"}},"id":1,"jsonrpc":"2.0"}Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server103030432/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":87,"character":1},"end":{"line":87,"character":1}},"context":{"diagnostics":[]}},"id":2,"jsonrpc":"2.0"}
<<<
Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"id":0,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3.7037037037037037}}}Content-Length: 235

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server103030432/sketch/DigitalTrumpet.ino.cpp","version":1}}Content-Length: 5170

{"id":1,"jsonrpc":"2.0","result":[{"kind":13,"name":"firstKeyPin","range":{"end":{"character":19,"line":3},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":15,"line":3},"start":{"character":4,"line":3}}},{"kind":13,"name":"secondKeyPin","range":{"end":{"character":20,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":16,"line":4},"start":{"character":4,"line":4}}},{"kind":13,"name":"thirdKeyPin","range":{"end":{"character":19,"line":5},"start":{"character":0,"line":5}},"selectionRange":{"end":{"character":15,"line":5},"start":{"character":4,"line":5}}},{"kind":13,"name":"fourthKeyPin","range":{"end":{"character":20,"line":6},"start":{"character":0,"line":6}},"selectionRange":{"end":{"character":16,"line":6},"start":{"character":4,"line":6}}},{"kind":13,"name":"RedPin","range":{"end":{"character":14,"line":8},"start":{"character":0,"line":8}},"selectionRange":{"end":{"character":10,"line":8},"start":{"character":4,"line":8}}},{"kind":13,"name":"GreenPin","range":{"end":{"character":17,"line":9},"start":{"character":0,"line":9}},"selectionRange":{"end":{"character":12,"line":9},"start":{"character":4,"line":9}}},{"kind":13,"name":"BluePin","range":{"end":{"character":16,"line":10},"start":{"character":0,"line":10}},"selectionRange":{"end":{"character":11,"line":10},"start":{"character":4,"line":10}}},{"kind":12,"name":"setup","range":{"end":{"character":12,"line":14},"start":{"character":0,"line":14}},"selectionRange":{"end":{"character":10,"line":14},"start":{"character":5,"line":14}}},{"kind":12,"name":"loop","range":{"end":{"character":11,"line":16},"start":{"character":0,"line":16}},"selectionRange":{"end":{"character":9,"line":16},"start":{"character":5,"line":16}}},{"kind":12,"name":"red","range":{"end":{"character":10,"line":18},"start":{"character":0,"line":18}},"selectionRange":{"end":{"character":8,"line":18},"start":{"character":5,"line":18}}},{"kind":12,"name":"orange","range":{"end":{"character":13,"line":20},"start":{"character":0,"line":20}},"selectionRange":{"end":{"character":11,"line":20},"start":{"character":5,"line":20}}},{"kind":12,"name":"yellow","range":{"end":{"character":13,"line":22},"start":{"character":0,"line":22}},"selectionRange":{"end":{"character":11,"line":22},"start":{"character":5,"line":22}}},{"kind":12,"name":"green","range":{"end":{"character":12,"line":24},"start":{"character":0,"line":24}},"selectionRange":{"end":{"character":10,"line":24},"start":{"character":5,"line":24}}},{"kind":12,"name":"cyan","range":{"end":{"character":11,"line":26},"start":{"character":0,"line":26}},"selectionRange":{"end":{"character":9,"line":26},"start":{"character":5,"line":26}}},{"kind":12,"name":"blue","range":{"end":{"character":11,"line":28},"start":{"character":0,"line":28}},"selectionRange":{"end":{"character":9,"line":28},"start":{"character":5,"line":28}}},{"kind":12,"name":"magenta","range":{"end":{"character":14,"line":30},"start":{"character":0,"line":30}},"selectionRange":{"end":{"character":12,"line":30},"start":{"character":5,"line":30}}},{"kind":12,"name":"turnOff","range":{"end":{"character":14,"line":32},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":12,"line":32},"start":{"character":5,"line":32}}},{"kind":12,"name":"setup","range":{"end":{"character":1,"line":46},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":10,"line":34},"start":{"character":5,"line":34}}},{"kind":12,"name":"loop","range":{"end":{"character":1,"line":61},"start":{"character":0,"line":48}},"selectionRange":{"end":{"character":9,"line":48},"start":{"character":5,"line":48}}},{"kind":12,"name":"red","range":{"end":{"character":1,"line":70},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":8,"line":64},"start":{"character":5,"line":64}}},{"kind":12,"name":"orange","range":{"end":{"character":1,"line":78},"start":{"character":0,"line":72}},"selectionRange":{"end":{"character":11,"line":72},"start":{"character":5,"line":72}}},{"kind":12,"name":"yellow","range":{"end":{"character":1,"line":87},"start":{"character":0,"line":81}},"selectionRange":{"end":{"character":11,"line":81},"start":{"character":5,"line":81}}},{"kind":12,"name":"green","range":{"end":{"character":1,"line":94},"start":{"character":0,"line":88}},"selectionRange":{"end":{"character":10,"line":88},"start":{"character":5,"line":88}}},{"kind":12,"name":"cyan","range":{"end":{"character":1,"line":101},"start":{"character":0,"line":95}},"selectionRange":{"end":{"character":9,"line":95},"start":{"character":5,"line":95}}},{"kind":12,"name":"blue","range":{"end":{"character":1,"line":108},"start":{"character":0,"line":102}},"selectionRange":{"end":{"character":9,"line":102},"start":{"character":5,"line":102}}},{"kind":12,"name":"magenta","range":{"end":{"character":1,"line":115},"start":{"character":0,"line":109}},"selectionRange":{"end":{"character":12,"line":109},"start":{"character":5,"line":109}}},{"kind":12,"name":"turnOff","range":{"end":{"character":1,"line":122},"start":{"character":0,"line":116}},"selectionRange":{"end":{"character":12,"line":116},"start":{"character":5,"line":116}}}]}Content-Length: 36

{"id":2,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 327

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server103030432/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":6,"character":21},"end":{"line":6,"character":21}},"context":{"diagnostics":[]}},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":3,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 329

{"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///private/var/folders/l5/z67pqhns5cn0vz66ch5549gm0000gn/T/arduino-language-server103030432/sketch/DigitalTrumpet.ino.cpp"},"range":{"start":{"line":10,"character":17},"end":{"line":10,"character":17}},"context":{"diagnostics":[]}},"id":4,"jsonrpc":"2.0"}
<<<
Content-Length: 36

{"id":4,"jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"method":"$/cancelRequest","params":{"id":2},"jsonrpc":"2.0"}
<<<
Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7.4074074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11.111111111111111}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14.814814814814815}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18.518518518518519}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22.222222222222221}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25.925925925925927}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 158

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29.62962962962963}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33.333333333333336}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37.037037037037038}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40.74074074074074}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44.444444444444443}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48.148148148148145}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51.851851851851855}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55.555555555555557}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59.25925925925926}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62.962962962962962}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66.666666666666671}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70.370370370370367}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74.074074074074076}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77.777777777777771}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81.481481481481481}}}Content-Length: 159

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85.18518518518519}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88.888888888888886}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92.592592592592595}}}Content-Length: 160

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96.296296296296291}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 58

{"method":"shutdown","params":null,"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"id":5,"jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"method":"exit","params":null,"jsonrpc":"2.0"}<<< Read Error: EOF
